"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd/es/tabs/style");

var _tabs = _interopRequireDefault(require("antd/es/tabs"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

require("antd/es/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/es/config-provider"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

require("antd/es/grid/style");

var _grid = _interopRequireDefault(require("antd/es/grid"));

var _react = _interopRequireWildcard(require("react"));

var _icons = require("@ant-design/icons");

var _useMergedState3 = _interopRequireDefault(require("rc-util/lib/hooks/useMergedState"));

var _proUtils = require("@ant-design/pro-utils");

var _classnames = _interopRequireDefault(require("classnames"));

var _omit = _interopRequireDefault(require("omit.js"));

var _Loading = _interopRequireDefault(require("../Loading"));

var _Actions = _interopRequireDefault(require("../Actions"));

require("./index.less");

var _excluded = ["className", "style", "bodyStyle", "headStyle", "title", "subTitle", "extra", "tip", "wrap", "layout", "loading", "gutter", "tooltip", "split", "headerBordered", "bordered", "children", "size", "actions", "ghost", "hoverable", "direction", "collapsed", "collapsible", "defaultCollapsed", "onCollapse", "checked", "onChecked", "tabs", "type"];
var useBreakpoint = _grid.default.useBreakpoint;

var Card = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _classNames2, _classNames3, _classNames4;

  var className = props.className,
      style = props.style,
      _props$bodyStyle = props.bodyStyle,
      bodyStyle = _props$bodyStyle === void 0 ? {} : _props$bodyStyle,
      _props$headStyle = props.headStyle,
      headStyle = _props$headStyle === void 0 ? {} : _props$headStyle,
      title = props.title,
      subTitle = props.subTitle,
      extra = props.extra,
      tip = props.tip,
      _props$wrap = props.wrap,
      wrap = _props$wrap === void 0 ? false : _props$wrap,
      layout = props.layout,
      loading = props.loading,
      _props$gutter = props.gutter,
      gutter = _props$gutter === void 0 ? 0 : _props$gutter,
      tooltip = props.tooltip,
      split = props.split,
      _props$headerBordered = props.headerBordered,
      headerBordered = _props$headerBordered === void 0 ? false : _props$headerBordered,
      _props$bordered = props.bordered,
      bordered = _props$bordered === void 0 ? false : _props$bordered,
      children = props.children,
      size = props.size,
      actions = props.actions,
      _props$ghost = props.ghost,
      ghost = _props$ghost === void 0 ? false : _props$ghost,
      _props$hoverable = props.hoverable,
      hoverable = _props$hoverable === void 0 ? false : _props$hoverable,
      direction = props.direction,
      controlCollapsed = props.collapsed,
      _props$collapsible = props.collapsible,
      collapsible = _props$collapsible === void 0 ? false : _props$collapsible,
      _props$defaultCollaps = props.defaultCollapsed,
      defaultCollapsed = _props$defaultCollaps === void 0 ? false : _props$defaultCollaps,
      onCollapse = props.onCollapse,
      checked = props.checked,
      onChecked = props.onChecked,
      tabs = props.tabs,
      type = props.type,
      rest = (0, _objectWithoutProperties2.default)(props, _excluded);

  var _useContext = (0, _react.useContext)(_configProvider.default.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var screens = useBreakpoint();

  var _useMergedState = (0, _useMergedState3.default)(defaultCollapsed, {
    value: controlCollapsed,
    onChange: onCollapse
  }),
      _useMergedState2 = (0, _slicedToArray2.default)(_useMergedState, 2),
      collapsed = _useMergedState2[0],
      setCollapsed = _useMergedState2[1]; // 顺序决定如何进行响应式取值，按最大响应值依次取值，请勿修改。


  var responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];
  /**
   * 根据响应式获取 gutter, 参考 antd 实现
   *
   * @param gutter Gutter
   */

  var getNormalizedGutter = function getNormalizedGutter(gut) {
    var results = [0, 0];
    var normalizedGutter = Array.isArray(gut) ? gut : [gut, 0];
    normalizedGutter.forEach(function (g, index) {
      if ((0, _typeof2.default)(g) === 'object') {
        for (var i = 0; i < responsiveArray.length; i += 1) {
          var breakpoint = responsiveArray[i];

          if (screens[breakpoint] && g[breakpoint] !== undefined) {
            results[index] = g[breakpoint];
            break;
          }
        }
      } else {
        results[index] = g || 0;
      }
    });
    return results;
  };
  /**
   * 根据条件返回 style，负责返回空对象
   *
   * @param withStyle 是否符合条件
   * @param appendStyle 如果符合条件要返回的 style 属性
   */


  var getStyle = function getStyle(withStyle, appendStyle) {
    return withStyle ? appendStyle : {};
  };

  var getColSpanStyle = function getColSpanStyle(colSpan) {
    var span = colSpan; // colSpan 响应式

    if ((0, _typeof2.default)(colSpan) === 'object') {
      for (var i = 0; i < responsiveArray.length; i += 1) {
        var breakpoint = responsiveArray[i];

        if (screens[breakpoint] && colSpan[breakpoint] !== undefined) {
          span = colSpan[breakpoint];
          break;
        }
      }
    } // 当 colSpan 为 30% 或 300px 时


    var colSpanStyle = getStyle(typeof span === 'string' && /\d%|\dpx/i.test(span), {
      width: span,
      flexShrink: 0
    });
    return {
      span: span,
      colSpanStyle: colSpanStyle
    };
  };

  var prefixCls = getPrefixCls('pro-card');

  var _getNormalizedGutter = getNormalizedGutter(gutter),
      _getNormalizedGutter2 = (0, _slicedToArray2.default)(_getNormalizedGutter, 2),
      horizonalGutter = _getNormalizedGutter2[0],
      verticalGutter = _getNormalizedGutter2[1]; // 判断是否套了卡片，如果套了的话将自身卡片内部内容的 padding 设置为0


  var containProCard = false;

  var childrenArray = _react.default.Children.toArray(children);

  var childrenModified = childrenArray.map(function (element, index) {
    var _element$type;

    if (element === null || element === void 0 ? void 0 : (_element$type = element.type) === null || _element$type === void 0 ? void 0 : _element$type.isProCard) {
      var _classNames;

      containProCard = true; // 宽度

      var colSpan = element.props.colSpan;

      var _getColSpanStyle = getColSpanStyle(colSpan),
          span = _getColSpanStyle.span,
          colSpanStyle = _getColSpanStyle.colSpanStyle;

      var columnClassName = (0, _classnames.default)(["".concat(prefixCls, "-col")], (_classNames = {}, (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-split-vertical"), split === 'vertical' && index !== childrenArray.length - 1), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-split-horizontal"), split === 'horizontal' && index !== childrenArray.length - 1), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-col-").concat(span), typeof span === 'number' && span >= 0 && span <= 24), _classNames));
      return /*#__PURE__*/_react.default.createElement("div", {
        style: (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, colSpanStyle), getStyle(horizonalGutter > 0, {
          paddingRight: horizonalGutter / 2,
          paddingLeft: horizonalGutter / 2
        })), getStyle(verticalGutter > 0, {
          paddingTop: verticalGutter / 2,
          paddingBottom: verticalGutter / 2
        })) // eslint-disable-next-line react/no-array-index-key
        ,
        key: "pro-card-col-".concat((element === null || element === void 0 ? void 0 : element.key) || index),
        className: columnClassName
      }, /*#__PURE__*/_react.default.cloneElement(element));
    }

    return element;
  });
  var cardCls = (0, _classnames.default)("".concat(prefixCls), className, (_classNames2 = {}, (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-border"), bordered), (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-contain-card"), containProCard), (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-loading"), loading), (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-split"), split === 'vertical' || split === 'horizontal'), (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-ghost"), ghost), (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-hoverable"), hoverable), (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-size-").concat(size), size), (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-type-").concat(type), type), (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-collapse"), collapsed), (0, _defineProperty2.default)(_classNames2, "".concat(prefixCls, "-checked"), checked), _classNames2));
  var bodyCls = (0, _classnames.default)("".concat(prefixCls, "-body"), (_classNames3 = {}, (0, _defineProperty2.default)(_classNames3, "".concat(prefixCls, "-body-center"), layout === 'center'), (0, _defineProperty2.default)(_classNames3, "".concat(prefixCls, "-body-direction-column"), split === 'horizontal' || direction === 'column'), (0, _defineProperty2.default)(_classNames3, "".concat(prefixCls, "-body-wrap"), wrap && containProCard), _classNames3));
  var cardBodyStyle = (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, getStyle(horizonalGutter > 0, {
    marginRight: -horizonalGutter / 2,
    marginLeft: -horizonalGutter / 2
  })), getStyle(verticalGutter > 0, {
    marginTop: -verticalGutter / 2,
    marginBottom: -verticalGutter / 2
  })), bodyStyle);
  var loadingDOM = /*#__PURE__*/_react.default.isValidElement(loading) ? loading : /*#__PURE__*/_react.default.createElement(_Loading.default, {
    prefix: prefixCls,
    style: bodyStyle.padding === 0 || bodyStyle.padding === '0px' ? {
      padding: 24
    } : undefined
  }); // 非受控情况下展示

  var collapsibleButton = collapsible && controlCollapsed === undefined && /*#__PURE__*/_react.default.createElement(_icons.RightOutlined, {
    rotate: !collapsed ? 90 : undefined,
    className: "".concat(prefixCls, "-collapsible-icon")
  });

  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    className: cardCls,
    style: style,
    ref: ref,
    onClick: function onClick(e) {
      var _rest$onClick;

      onChecked === null || onChecked === void 0 ? void 0 : onChecked(e);
      rest === null || rest === void 0 ? void 0 : (_rest$onClick = rest.onClick) === null || _rest$onClick === void 0 ? void 0 : _rest$onClick.call(rest, e);
    }
  }, (0, _omit.default)(rest, ['prefixCls', 'colSpan'])), (title || extra || collapsibleButton) && /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)("".concat(prefixCls, "-header"), (_classNames4 = {}, (0, _defineProperty2.default)(_classNames4, "".concat(prefixCls, "-header-border"), headerBordered || type === 'inner'), (0, _defineProperty2.default)(_classNames4, "".concat(prefixCls, "-header-collapsible"), collapsibleButton), _classNames4)),
    style: headStyle,
    onClick: function onClick() {
      if (collapsibleButton) setCollapsed(!collapsed);
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-title")
  }, collapsibleButton, /*#__PURE__*/_react.default.createElement(_proUtils.LabelIconTip, {
    label: title,
    tooltip: tooltip || tip,
    subTitle: subTitle
  })), extra && /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-extra")
  }, extra)), tabs ? /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(prefixCls, "-tabs")
  }, /*#__PURE__*/_react.default.createElement(_tabs.default, (0, _extends2.default)({
    onChange: tabs.onChange
  }, tabs), loading ? loadingDOM : children)) : /*#__PURE__*/_react.default.createElement("div", {
    className: bodyCls,
    style: cardBodyStyle
  }, loading ? loadingDOM : childrenModified), /*#__PURE__*/_react.default.createElement(_Actions.default, {
    actions: actions,
    prefixCls: prefixCls
  }));
});

var _default = Card;
exports.default = _default;