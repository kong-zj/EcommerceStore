"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("antd/es/tooltip/style");

var _tooltip = _interopRequireDefault(require("antd/es/tooltip"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

require("antd/es/config-provider/style");

var _configProvider = _interopRequireDefault(require("antd/es/config-provider"));

var _react = _interopRequireWildcard(require("react"));

var _icons = require("@ant-design/icons");

require("./index.less");

var _classnames = _interopRequireDefault(require("classnames"));

/**
 * 在 form 的 label 后面增加一个 tips 来展示一些说明文案
 *
 * @param props
 */
var LabelIconTip = function LabelIconTip(props) {
  var label = props.label,
      tooltip = props.tooltip,
      ellipsis = props.ellipsis,
      subTitle = props.subTitle;

  var _useContext = (0, _react.useContext)(_configProvider.default.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  if (!tooltip && !subTitle) {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, label);
  }

  var className = getPrefixCls('pro-core-label-tip');
  var tooltipProps = typeof tooltip === 'string' || /*#__PURE__*/_react.default.isValidElement(tooltip) ? {
    title: tooltip
  } : tooltip;

  var icon = (tooltipProps === null || tooltipProps === void 0 ? void 0 : tooltipProps.icon) || /*#__PURE__*/_react.default.createElement(_icons.InfoCircleOutlined, null);

  return /*#__PURE__*/_react.default.createElement("div", {
    className: className,
    onMouseDown: function onMouseDown(e) {
      return e.stopPropagation();
    },
    onMouseLeave: function onMouseLeave(e) {
      return e.stopPropagation();
    },
    onMouseMove: function onMouseMove(e) {
      return e.stopPropagation();
    }
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)("".concat(className, "-title"), (0, _defineProperty2.default)({}, "".concat(className, "-title-ellipsis"), ellipsis))
  }, label), subTitle && /*#__PURE__*/_react.default.createElement("div", {
    className: "".concat(className, "-subtitle")
  }, subTitle), tooltip && /*#__PURE__*/_react.default.createElement(_tooltip.default, tooltipProps, /*#__PURE__*/_react.default.createElement("span", {
    className: "".concat(className, "-icon")
  }, icon)));
};

var _default = /*#__PURE__*/_react.default.memo(LabelIconTip);

exports.default = _default;