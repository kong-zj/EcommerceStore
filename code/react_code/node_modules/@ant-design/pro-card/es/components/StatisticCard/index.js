import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
import "antd/es/config-provider/style";
import _ConfigProvider from "antd/es/config-provider";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["children", "statistic", "className", "chart", "chartPlacement", "footer"];
import React, { useContext } from 'react';
import Card from '../Card';
import classNames from 'classnames';
import Statistic from '../Statistic';
import Divider from '../Divider';
import Operation from '../Operation';
import './index.less';

var StatisticCard = function StatisticCard(props) {
  var _classNames;

  var children = props.children,
      statistic = props.statistic,
      className = props.className,
      chart = props.chart,
      chartPlacement = props.chartPlacement,
      footer = props.footer,
      others = _objectWithoutProperties(props, _excluded);

  var _useContext = useContext(_ConfigProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('pro-statistic-card');
  var classString = classNames(prefixCls, className); // 在 StatisticCard 中时默认为 vertical。

  var statisticDom = statistic && /*#__PURE__*/React.createElement(Statistic, _extends({
    layout: "vertical"
  }, statistic));
  var chartCls = classNames("".concat(prefixCls, "-chart"), (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-chart-left"), chartPlacement === 'left' && chart && statistic), _defineProperty(_classNames, "".concat(prefixCls, "-chart-right"), chartPlacement === 'right' && chart && statistic), _classNames));
  var chartDom = chart && /*#__PURE__*/React.createElement("div", {
    className: chartCls
  }, chart);
  var contentCls = classNames("".concat(prefixCls, "-content"), _defineProperty({}, "".concat(prefixCls, "-content-horizontal"), chartPlacement === 'left' || chartPlacement === 'right')); // 默认上下结构

  var contentDom = (chartDom || statisticDom) && (chartPlacement === 'left' ? /*#__PURE__*/React.createElement("div", {
    className: contentCls
  }, chartDom, statisticDom) : /*#__PURE__*/React.createElement("div", {
    className: contentCls
  }, statisticDom, chartDom));
  var footerDom = footer && /*#__PURE__*/React.createElement("div", {
    className: "".concat(prefixCls, "-footer")
  }, footer);
  return /*#__PURE__*/React.createElement(Card, _extends({
    className: classString
  }, others), contentDom, children, footerDom);
};

var Group = function Group(props) {
  return /*#__PURE__*/React.createElement(StatisticCard, _extends({
    bodyStyle: {
      padding: 0
    }
  }, props));
};

StatisticCard.Statistic = Statistic;
StatisticCard.Divider = Divider;
StatisticCard.Operation = Operation;
StatisticCard.isProCard = true;
StatisticCard.Group = Group;
export default StatisticCard;