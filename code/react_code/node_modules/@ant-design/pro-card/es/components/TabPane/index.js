import "antd/es/tabs/style";
import _Tabs from "antd/es/tabs";
import _extends from "@babel/runtime/helpers/esm/extends";
import "antd/es/config-provider/style";
import _ConfigProvider from "antd/es/config-provider";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
var _excluded = ["key", "tab", "tabKey", "disabled", "destroyInactiveTabPane", "children", "className", "style", "cardProps"];
import React, { useContext } from 'react';
import classNames from 'classnames';
import Card from '../Card';
import './index.less';

var TabPane = function TabPane(props) {
  var key = props.key,
      tab = props.tab,
      tabKey = props.tabKey,
      disabled = props.disabled,
      destroyInactiveTabPane = props.destroyInactiveTabPane,
      children = props.children,
      className = props.className,
      style = props.style,
      cardProps = props.cardProps,
      rest = _objectWithoutProperties(props, _excluded);

  var _useContext = useContext(_ConfigProvider.ConfigContext),
      getPrefixCls = _useContext.getPrefixCls;

  var prefixCls = getPrefixCls('pro-card-tabpane');
  var tabPaneClassName = classNames(prefixCls, className);
  return /*#__PURE__*/React.createElement(_Tabs.TabPane, _extends({
    key: key,
    tabKey: tabKey,
    tab: tab,
    className: tabPaneClassName,
    style: style,
    disabled: disabled,
    destroyInactiveTabPane: destroyInactiveTabPane
  }, rest), /*#__PURE__*/React.createElement(Card, cardProps, children));
};

export default TabPane;