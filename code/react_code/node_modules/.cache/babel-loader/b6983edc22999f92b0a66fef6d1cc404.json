{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/descriptions/style\";\nimport _Descriptions from \"antd/es/descriptions\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Market/AuctionInto/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\"; //从数据库拿商品信息\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AuctionInto extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deviceID: \"\",\n      deviceInfo: {},\n      deviceMessage: [],\n      deviceName: \"\",\n      path: [],\n      isLoading: true\n    };\n    this.deviceColumns = [{\n      title: '设备ID',\n      dataIndex: 'deviceID',\n      key: 'deviceID'\n    }, {\n      title: '设备名称',\n      dataIndex: 'deviceName',\n      key: 'deviceName'\n    }, {\n      title: '拥有者ID',\n      dataIndex: 'ownerName',\n      key: 'ownerName'\n    }, {\n      title: '设备状态',\n      key: 'deviceStatus',\n      dataIndex: 'deviceStatus',\n      render: tag => /*#__PURE__*/_jsxDEV(_Tag, {\n        color: tag === 0 ? 'red' : 'green',\n        children: tag === 0 ? '离线' : '在线'\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 28\n      }, this)\n    } // {\n    //     title: '操作',\n    //     key: 'edit',\n    //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n    //                                 path={this.state.path}/>,\n    // }\n    ];\n\n    this.renderProducts = (div, filters) => {\n      //div控制放到不同的地方（产品页面渲染）\n      //filter传给后台\n      //给后台发请求\n      $.ajax({\n        //定义路由\n        url: offchainServer + \"/products\",\n        type: 'get',\n        contentType: 'application/json; charset=utf-8',\n        //data跟在url后面作为查询参数\n        data: filters\n      }).done(data => {\n        //data就是后端传来的items\n        if (data.length == 0) {\n          $(\"#\" + div).html(\"No products found.\");\n        } else {\n          $(\"#\" + div).html(\"\");\n        } //一行多放几个产品\n\n\n        while (data.length > 0) {\n          //删去data[0,4)，并返回删去的\n          let chunks = data.splice(0, 4); //DOM元素\n\n          let row = $(\"<div/>\");\n          row.addClass(\"row\"); //拼好一行\n\n          chunks.forEach(p => {\n            let node = buildProduct(p);\n            row.append(node);\n          });\n          $(\"#\" + div).append(row);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"生成Shopping模块\");\n  }\n\n  render() {\n    const {\n      deviceID,\n      isOnline,\n      ownerName\n    } = this.state.deviceInfo;\n    const {\n      deviceName,\n      isLoading\n    } = this.state;\n    const info = [{\n      key: 1,\n      deviceName,\n      deviceID,\n      deviceStatus: isOnline,\n      ownerName\n    }]; // const messageArray = this.state.deviceMessage;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u8BBE\\u5907\\u4FE1\\u606F\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(_Spin, {\n        style: {\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(_Table, {\n        columns: this.deviceColumns,\n        dataSource: info,\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u6D88\\u606F\\u4FE1\\u606F\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        },\n        style: {\n          marginTop: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuctionInto; // const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n// ]\n// class EditDevice extends Component {\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n//     }\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n//     render () {\n//         );\n//     }\n// }","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Market/AuctionInto/index.jsx"],"names":["React","Component","axios","cookie","getWeb3","getEcommerceStore","AuctionInto","constructor","props","state","deviceID","deviceInfo","deviceMessage","deviceName","path","isLoading","deviceColumns","title","dataIndex","key","render","tag","renderProducts","div","filters","$","ajax","url","offchainServer","type","contentType","data","done","length","html","chunks","splice","row","addClass","forEach","p","node","buildProduct","append","componentDidMount","console","log","isOnline","ownerName","info","deviceStatus","xxl","xl","lg","md","sm","xs","marginTop"],"mappings":"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":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies'\nimport {Descriptions, message, Spin, Table, Tag} from \"antd\";\n\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\n\n\n//从数据库拿商品信息\nclass AuctionInto extends Component {\n\n\n    state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n\n\n    deviceColumns = [\n        {\n            title: '设备ID',\n            dataIndex: 'deviceID',\n            key: 'deviceID',\n        },\n        {\n            title: '设备名称',\n            dataIndex: 'deviceName',\n            key: 'deviceName',\n        },\n        {\n            title: '拥有者ID',\n            dataIndex: 'ownerName',\n            key: 'ownerName',\n        },\n        {\n            title: '设备状态',\n            key: 'deviceStatus',\n            dataIndex: 'deviceStatus',\n            render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n        },\n        // {\n        //     title: '操作',\n        //     key: 'edit',\n        //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n        //                                 path={this.state.path}/>,\n        // }\n    ];\n\n    constructor (props) {\n        super(props);\n    }\n\n\n    componentDidMount () {\n        console.log(\"生成Shopping模块\");\n\n    }\n\n\n\n\n    renderProducts = (div, filters) => {\n        //div控制放到不同的地方（产品页面渲染）\n        //filter传给后台\n        //给后台发请求\n        $.ajax({\n            //定义路由\n            url: offchainServer + \"/products\",\n            type: 'get',\n            contentType: 'application/json; charset=utf-8',\n            //data跟在url后面作为查询参数\n            data: filters\n        }).done(data => {\n            //data就是后端传来的items\n            if (data.length == 0) {\n                $(\"#\" + div).html(\"No products found.\");\n            } else {\n                $(\"#\" + div).html(\"\");\n            }\n            //一行多放几个产品\n            while (data.length > 0) {\n                //删去data[0,4)，并返回删去的\n                let chunks = data.splice(0, 4);\n                //DOM元素\n                let row = $(\"<div/>\");\n                row.addClass(\"row\");\n                //拼好一行\n                chunks.forEach(p => {\n                    let node = buildProduct(p);\n                    row.append(node);\n                });\n                $(\"#\" + div).append(row);\n            }\n        });\n    }\n\n\n\n\n\n\n    \n    render () {\n        const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n        const {deviceName, isLoading} = this.state;\n        const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n        // const messageArray = this.state.deviceMessage;\n        return (\n            <div>\n                <Descriptions\n                    title=\"设备信息\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                />\n                {\n                    isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n                }\n\n                <Descriptions\n                    title=\"消息信息\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    style={{marginTop:'50px'}}\n                />\n                {/* {\n                    isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n                } */}\n\n            </div>\n        );\n    }\n}\n\nexport default AuctionInto;\n\n\n\n\n// const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n\n// ]\n\n// class EditDevice extends Component {\n\n\n\n\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n\n//     }\n\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n\n//     render () {\n        \n//         );\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}