{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2016\n */\n\"use strict\";\n\nvar EventEmitter = require('eventemitter3');\n\nvar Promise = require(\"any-promise\");\n/**\n * This function generates a defer promise and adds eventEmitter functionality to it\n *\n * @method eventifiedPromise\n */\n\n\nvar PromiEvent = function PromiEvent(justPromise) {\n  var resolve,\n      reject,\n      eventEmitter = new Promise(function () {\n    resolve = arguments[0];\n    reject = arguments[1];\n  });\n\n  if (justPromise) {\n    return {\n      resolve: resolve,\n      reject: reject,\n      eventEmitter: eventEmitter\n    };\n  } // get eventEmitter\n\n\n  var emitter = new EventEmitter(); // add eventEmitter to the promise\n\n  eventEmitter._events = emitter._events;\n  eventEmitter.emit = emitter.emit;\n  eventEmitter.on = emitter.on;\n  eventEmitter.once = emitter.once;\n  eventEmitter.off = emitter.off;\n  eventEmitter.listeners = emitter.listeners;\n  eventEmitter.addListener = emitter.addListener;\n  eventEmitter.removeListener = emitter.removeListener;\n  eventEmitter.removeAllListeners = emitter.removeAllListeners;\n  return {\n    resolve: resolve,\n    reject: reject,\n    eventEmitter: eventEmitter\n  };\n};\n\nPromiEvent.resolve = function (value) {\n  var promise = PromiEvent(true);\n  promise.resolve(value);\n  return promise.eventEmitter;\n};\n\nmodule.exports = PromiEvent;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/web3-core-promievent/src/index.js"],"names":["EventEmitter","require","Promise","PromiEvent","justPromise","resolve","reject","eventEmitter","arguments","emitter","_events","emit","on","once","off","listeners","addListener","removeListener","removeAllListeners","value","promise","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,aAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,UAAU,GAAG,SAASA,UAAT,CAAoBC,WAApB,EAAiC;AAC9C,MAAIC,OAAJ;AAAA,MAAaC,MAAb;AAAA,MACIC,YAAY,GAAG,IAAIL,OAAJ,CAAY,YAAW;AAClCG,IAAAA,OAAO,GAAGG,SAAS,CAAC,CAAD,CAAnB;AACAF,IAAAA,MAAM,GAAGE,SAAS,CAAC,CAAD,CAAlB;AACH,GAHc,CADnB;;AAMA,MAAGJ,WAAH,EAAgB;AACZ,WAAO;AACHC,MAAAA,OAAO,EAAEA,OADN;AAEHC,MAAAA,MAAM,EAAEA,MAFL;AAGHC,MAAAA,YAAY,EAAEA;AAHX,KAAP;AAKH,GAb6C,CAe9C;;;AACA,MAAIE,OAAO,GAAG,IAAIT,YAAJ,EAAd,CAhB8C,CAkB9C;;AACAO,EAAAA,YAAY,CAACG,OAAb,GAAuBD,OAAO,CAACC,OAA/B;AACAH,EAAAA,YAAY,CAACI,IAAb,GAAoBF,OAAO,CAACE,IAA5B;AACAJ,EAAAA,YAAY,CAACK,EAAb,GAAkBH,OAAO,CAACG,EAA1B;AACAL,EAAAA,YAAY,CAACM,IAAb,GAAoBJ,OAAO,CAACI,IAA5B;AACAN,EAAAA,YAAY,CAACO,GAAb,GAAmBL,OAAO,CAACK,GAA3B;AACAP,EAAAA,YAAY,CAACQ,SAAb,GAAyBN,OAAO,CAACM,SAAjC;AACAR,EAAAA,YAAY,CAACS,WAAb,GAA2BP,OAAO,CAACO,WAAnC;AACAT,EAAAA,YAAY,CAACU,cAAb,GAA8BR,OAAO,CAACQ,cAAtC;AACAV,EAAAA,YAAY,CAACW,kBAAb,GAAkCT,OAAO,CAACS,kBAA1C;AAEA,SAAO;AACHb,IAAAA,OAAO,EAAEA,OADN;AAEHC,IAAAA,MAAM,EAAEA,MAFL;AAGHC,IAAAA,YAAY,EAAEA;AAHX,GAAP;AAKH,CAlCD;;AAoCAJ,UAAU,CAACE,OAAX,GAAqB,UAASc,KAAT,EAAgB;AACjC,MAAIC,OAAO,GAAGjB,UAAU,CAAC,IAAD,CAAxB;AACAiB,EAAAA,OAAO,CAACf,OAAR,CAAgBc,KAAhB;AACA,SAAOC,OAAO,CAACb,YAAf;AACH,CAJD;;AAMAc,MAAM,CAACC,OAAP,GAAiBnB,UAAjB","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2016\n */\n\n\"use strict\";\n\nvar EventEmitter = require('eventemitter3');\nvar Promise = require(\"any-promise\");\n\n/**\n * This function generates a defer promise and adds eventEmitter functionality to it\n *\n * @method eventifiedPromise\n */\nvar PromiEvent = function PromiEvent(justPromise) {\n    var resolve, reject,\n        eventEmitter = new Promise(function() {\n            resolve = arguments[0];\n            reject = arguments[1];\n        });\n\n    if(justPromise) {\n        return {\n            resolve: resolve,\n            reject: reject,\n            eventEmitter: eventEmitter\n        };\n    }\n\n    // get eventEmitter\n    var emitter = new EventEmitter();\n\n    // add eventEmitter to the promise\n    eventEmitter._events = emitter._events;\n    eventEmitter.emit = emitter.emit;\n    eventEmitter.on = emitter.on;\n    eventEmitter.once = emitter.once;\n    eventEmitter.off = emitter.off;\n    eventEmitter.listeners = emitter.listeners;\n    eventEmitter.addListener = emitter.addListener;\n    eventEmitter.removeListener = emitter.removeListener;\n    eventEmitter.removeAllListeners = emitter.removeAllListeners;\n\n    return {\n        resolve: resolve,\n        reject: reject,\n        eventEmitter: eventEmitter\n    };\n};\n\nPromiEvent.resolve = function(value) {\n    var promise = PromiEvent(true);\n    promise.resolve(value);\n    return promise.eventEmitter;\n};\n\nmodule.exports = PromiEvent;\n"]},"metadata":{},"sourceType":"script"}