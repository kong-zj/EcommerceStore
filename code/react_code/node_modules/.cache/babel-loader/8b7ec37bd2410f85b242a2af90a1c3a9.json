{"ast":null,"code":"import \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/components/Auction/HighestBidderInfo/index.jsx\";\nimport React, { Component } from \"react\";\nimport { UserOutlined, LaptopOutlined, FileSearchOutlined, HomeOutlined, EyeTwoTone, EyeInvisibleOutlined, RocketOutlined } from '@ant-design/icons';\nimport cookie from \"react-cookies\"; //接入web3\n\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\nimport openNotification from \"../../Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\n\nclass HighestBidderInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null,\n      truffleContract: null\n    };\n\n    this.componentDidMount = async () => {\n      console.log(\"生成Bid模块\");\n\n      if (await this.getBlockChainInfo()) {\n        console.log(\"获得合约信息成功\");\n        this.getInfoFromBlockchain();\n      } else {\n        console.log(\"获得合约信息失败\");\n      }\n    };\n\n    this.getBlockChainInfo = async () => {\n      try {\n        const web3 = await getWeb3();\n        const EcommerceStore = await getEcommerceStore(web3);\n        this.setState({\n          web3: web3,\n          truffleContract: EcommerceStore\n        });\n        console.log(\"Bid 的 web3 : \");\n        console.dir(web3);\n        console.log(\"Bid 的 EcommerceStore : \");\n        console.dir(this.state.truffleContract);\n        return true;\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`[ERROR]接入智能合约失败.`);\n        console.error(error);\n        return false;\n      }\n    };\n\n    this.getInfoFromBlockchain = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.visible ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u6700\\u9AD8\\u7ADE\\u4EF7\\u4EBA\\u4FE1\\u606F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HighestBidderInfo;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/components/Auction/HighestBidderInfo/index.jsx"],"names":["React","Component","UserOutlined","LaptopOutlined","FileSearchOutlined","HomeOutlined","EyeTwoTone","EyeInvisibleOutlined","RocketOutlined","cookie","getWeb3","getEcommerceStore","openNotification","Option","HighestBidderInfo","state","web3","truffleContract","componentDidMount","console","log","getBlockChainInfo","getInfoFromBlockchain","EcommerceStore","setState","dir","error","alert","render","props","visible"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,kBAAvC,EAA2DC,YAA3D,EAAyEC,UAAzE,EAAqFC,oBAArF,EAA2GC,cAA3G,QAAiI,mBAAjI;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAM;AAAEC,EAAAA;AAAF,WAAN;;AAGA,MAAMC,iBAAN,SAAgCb,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAEtCc,KAFsC,GAE9B;AACJC,MAAAA,IAAI,EAAG,IADH;AAEJC,MAAAA,eAAe,EAAG;AAFd,KAF8B;;AAAA,SAQtCC,iBARsC,GAQlB,YAAY;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,UAAG,MAAM,KAAKC,iBAAL,EAAT,EAAkC;AAC9BF,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAKE,qBAAL;AACH,OAHD,MAGK;AACDH,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AACJ,KAhBqC;;AAAA,SAkBvCC,iBAlBuC,GAkBnB,YAAW;AAC1B,UAAG;AACC,cAAML,IAAI,GAAG,MAAMN,OAAO,EAA1B;AACA,cAAMa,cAAc,GAAG,MAAMZ,iBAAiB,CAACK,IAAD,CAA9C;AACA,aAAKQ,QAAL,CAAc;AACVR,UAAAA,IAAI,EAAEA,IADI;AAEVC,UAAAA,eAAe,EAACM;AAFN,SAAd;AAIAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,QAAAA,OAAO,CAACM,GAAR,CAAYT,IAAZ;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,QAAAA,OAAO,CAACM,GAAR,CAAY,KAAKV,KAAL,CAAWE,eAAvB;AACA,eAAO,IAAP;AACH,OAZD,CAYC,OAAOS,KAAP,EAAc;AACX;AACAC,QAAAA,KAAK,CACF,kBADE,CAAL;AAGAR,QAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACA,eAAO,KAAP;AACD;AAEN,KAxCqC;;AAAA,SA0CtCJ,qBA1CsC,GA0Cd,MAAM,CAE7B,CA5CqC;AAAA;;AAiDtCM,EAAAA,MAAM,GAAI;AACN,wBAGI;AAAA,gBAEI,KAAKC,KAAL,CAAWC,OAAX,gBACI;AAAA,+BACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,cADJ,GAIM;AANV;AAAA;AAAA;AAAA;AAAA,YAHJ;AAaH;;AA/DqC;;AAkE1C,eAAehB,iBAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { Menu, Layout, message, Drawer, Space, Button, Divider, Form, InputNumber, Input, Select } from 'antd';\nimport { UserOutlined, LaptopOutlined, FileSearchOutlined, HomeOutlined, EyeTwoTone, EyeInvisibleOutlined, RocketOutlined } from '@ant-design/icons';\nimport cookie from \"react-cookies\";\n//接入web3\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\nimport openNotification from \"../../Notification\";\n\nconst { Option } = Select;\n\n\nclass HighestBidderInfo extends Component {\n\n    state = {\n        web3 : null,\n        truffleContract : null,\n\n    }\n\n    componentDidMount = async () => {\n        console.log(\"生成Bid模块\");\n        if(await this.getBlockChainInfo()){\n            console.log(\"获得合约信息成功\");\n            this.getInfoFromBlockchain();\n        }else{\n            console.log(\"获得合约信息失败\");\n        }  \n    }\n\n   getBlockChainInfo = async() => {\n        try{\n            const web3 = await getWeb3();\n            const EcommerceStore = await getEcommerceStore(web3);\n            this.setState({\n                web3: web3,\n                truffleContract:EcommerceStore\n            });\n            console.log(\"Bid 的 web3 : \");\n            console.dir(web3);\n            console.log(\"Bid 的 EcommerceStore : \");\n            console.dir(this.state.truffleContract);\n            return true;\n        }catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n              `[ERROR]接入智能合约失败.`,\n            );\n            console.error(error);\n            return false;\n          }\n        \n    }\n\n    getInfoFromBlockchain = () => {\n\n    }\n   \n\n \n    \n    render () {\n        return (\n\n\n            <div>\n                {\n                this.props.visible?(\n                    <div>\n          <p>最高竞价人信息</p>\n                        </div>\n                    ):null\n                }\n            </div>\n        );\n    }\n}\n\nexport default HighestBidderInfo;\n"]},"metadata":{},"sourceType":"module"}