{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport React from 'react';\nimport get from \"rc-util/es/utils/get\";\nimport namePathSet from \"rc-util/es/utils/set\";\nimport isNil from '../isNil';\nimport { merge } from '../merge';\n/**\n * 暂时还不支持 Set和 Map 结构 判断是不是一个能遍历的对象\n *\n * @param itemValue\n * @returns Boolean\n */\n\nexport function isPlainObj(itemValue) {\n  if (_typeof(itemValue) !== 'object') return false;\n  /** Null 也要处理，不然omit空会失效 */\n\n  if (itemValue === null) return true;\n  if ( /*#__PURE__*/React.isValidElement(itemValue)) return false;\n  if (itemValue.constructor === RegExp) return false;\n  if (itemValue instanceof Map) return false;\n  if (itemValue instanceof Set) return false;\n  if (itemValue instanceof HTMLElement) return false;\n  if (itemValue instanceof Blob) return false;\n  if (itemValue instanceof File) return false;\n  if (Array.isArray(itemValue)) return false;\n  return true;\n}\n\nvar transformKeySubmitValue = function transformKeySubmitValue(values, dataFormatMapRaw) {\n  var omit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true; // ignore nil transform\n\n  var dataFormatMap = Object.keys(dataFormatMapRaw).reduce(function (ret, key) {\n    var value = dataFormatMapRaw[key];\n\n    if (!isNil(value)) {\n      // eslint-disable-next-line no-param-reassign\n      ret[key] = value; // can't be undefined\n    }\n\n    return ret;\n  }, {});\n\n  if (Object.keys(dataFormatMap).length < 1) {\n    return values;\n  }\n\n  if (typeof window === 'undefined') return values; // 如果 value 是 string | null | Array | Blob类型 其中之一，直接返回\n  // 形如 {key: [File, File]} 的表单字段当进行第二次递归时会导致其直接越过 typeof value !== 'object' 这一判断 https://github.com/ant-design/pro-components/issues/2071\n\n  if (_typeof(values) !== 'object' || isNil(values) || values instanceof Blob) {\n    return values;\n  }\n\n  var finalValues = Array.isArray(values) ? [] : {};\n\n  var gen = function gen(tempValues, parentsKey) {\n    var isArrayValues = Array.isArray(tempValues);\n    var result = isArrayValues ? [] : {};\n\n    if (tempValues == null || tempValues === undefined) {\n      return result;\n    }\n\n    Object.keys(tempValues).forEach(function (entityKey) {\n      var key = parentsKey ? [parentsKey, entityKey].flat(1) : [entityKey].flat(1);\n      var itemValue = tempValues[entityKey];\n      var transformFunction = get(dataFormatMap, key);\n\n      var transform = function transform() {\n        var tempKey = typeof transformFunction === 'function' ? transformFunction === null || transformFunction === void 0 ? void 0 : transformFunction(itemValue, entityKey, tempValues) : entityKey; // { [key:string]:any } 数组也能通过编译\n\n        if (Array.isArray(tempKey)) {\n          result = namePathSet(result, tempKey, itemValue);\n          return;\n        }\n\n        if (_typeof(tempKey) === 'object' && !Array.isArray(finalValues)) {\n          finalValues = _objectSpread(_objectSpread({}, finalValues), tempKey);\n        } else if (_typeof(tempKey) === 'object' && Array.isArray(finalValues)) {\n          result = _objectSpread(_objectSpread({}, result), tempKey);\n        } else if (tempKey) {\n          result = namePathSet(result, [tempKey], itemValue);\n        }\n      };\n      /** 如果存在转化器提前渲染一下 */\n\n\n      if (transformFunction && typeof transformFunction === 'function') {\n        transform();\n      }\n\n      if (typeof window === 'undefined') return;\n\n      if (isPlainObj(itemValue)) {\n        var genValues = gen(itemValue, key);\n\n        if (Object.keys(genValues).length < 1) {\n          return;\n        }\n\n        result = namePathSet(result, [entityKey], genValues);\n        return;\n      }\n\n      transform();\n    }); // namePath、transform在omit为false时需正常返回 https://github.com/ant-design/pro-components/issues/2901#issue-908097115\n\n    return omit ? result : tempValues;\n  };\n\n  finalValues = Array.isArray(values) && Array.isArray(finalValues) ? _toConsumableArray(gen(values)) : merge({}, gen(values), finalValues);\n  return finalValues;\n};\n\nexport default transformKeySubmitValue;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/@ant-design/pro-card/node_modules/@ant-design/pro-utils/es/transformKeySubmitValue/index.js"],"names":["_toConsumableArray","_objectSpread","_typeof","React","get","namePathSet","isNil","merge","isPlainObj","itemValue","isValidElement","constructor","RegExp","Map","Set","HTMLElement","Blob","File","Array","isArray","transformKeySubmitValue","values","dataFormatMapRaw","omit","arguments","length","undefined","dataFormatMap","Object","keys","reduce","ret","key","value","window","finalValues","gen","tempValues","parentsKey","isArrayValues","result","forEach","entityKey","flat","transformFunction","transform","tempKey","genValues"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport React from 'react';\nimport get from \"rc-util/es/utils/get\";\nimport namePathSet from \"rc-util/es/utils/set\";\nimport isNil from '../isNil';\nimport { merge } from '../merge';\n/**\n * 暂时还不支持 Set和 Map 结构 判断是不是一个能遍历的对象\n *\n * @param itemValue\n * @returns Boolean\n */\n\nexport function isPlainObj(itemValue) {\n  if (_typeof(itemValue) !== 'object') return false;\n  /** Null 也要处理，不然omit空会失效 */\n\n  if (itemValue === null) return true;\n  if ( /*#__PURE__*/React.isValidElement(itemValue)) return false;\n  if (itemValue.constructor === RegExp) return false;\n  if (itemValue instanceof Map) return false;\n  if (itemValue instanceof Set) return false;\n  if (itemValue instanceof HTMLElement) return false;\n  if (itemValue instanceof Blob) return false;\n  if (itemValue instanceof File) return false;\n  if (Array.isArray(itemValue)) return false;\n  return true;\n}\n\nvar transformKeySubmitValue = function transformKeySubmitValue(values, dataFormatMapRaw) {\n  var omit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  // ignore nil transform\n  var dataFormatMap = Object.keys(dataFormatMapRaw).reduce(function (ret, key) {\n    var value = dataFormatMapRaw[key];\n\n    if (!isNil(value)) {\n      // eslint-disable-next-line no-param-reassign\n      ret[key] = value; // can't be undefined\n    }\n\n    return ret;\n  }, {});\n\n  if (Object.keys(dataFormatMap).length < 1) {\n    return values;\n  }\n\n  if (typeof window === 'undefined') return values; // 如果 value 是 string | null | Array | Blob类型 其中之一，直接返回\n  // 形如 {key: [File, File]} 的表单字段当进行第二次递归时会导致其直接越过 typeof value !== 'object' 这一判断 https://github.com/ant-design/pro-components/issues/2071\n\n  if (_typeof(values) !== 'object' || isNil(values) || values instanceof Blob) {\n    return values;\n  }\n\n  var finalValues = Array.isArray(values) ? [] : {};\n\n  var gen = function gen(tempValues, parentsKey) {\n    var isArrayValues = Array.isArray(tempValues);\n    var result = isArrayValues ? [] : {};\n\n    if (tempValues == null || tempValues === undefined) {\n      return result;\n    }\n\n    Object.keys(tempValues).forEach(function (entityKey) {\n      var key = parentsKey ? [parentsKey, entityKey].flat(1) : [entityKey].flat(1);\n      var itemValue = tempValues[entityKey];\n      var transformFunction = get(dataFormatMap, key);\n\n      var transform = function transform() {\n        var tempKey = typeof transformFunction === 'function' ? transformFunction === null || transformFunction === void 0 ? void 0 : transformFunction(itemValue, entityKey, tempValues) : entityKey; // { [key:string]:any } 数组也能通过编译\n\n        if (Array.isArray(tempKey)) {\n          result = namePathSet(result, tempKey, itemValue);\n          return;\n        }\n\n        if (_typeof(tempKey) === 'object' && !Array.isArray(finalValues)) {\n          finalValues = _objectSpread(_objectSpread({}, finalValues), tempKey);\n        } else if (_typeof(tempKey) === 'object' && Array.isArray(finalValues)) {\n          result = _objectSpread(_objectSpread({}, result), tempKey);\n        } else if (tempKey) {\n          result = namePathSet(result, [tempKey], itemValue);\n        }\n      };\n      /** 如果存在转化器提前渲染一下 */\n\n\n      if (transformFunction && typeof transformFunction === 'function') {\n        transform();\n      }\n\n      if (typeof window === 'undefined') return;\n\n      if (isPlainObj(itemValue)) {\n        var genValues = gen(itemValue, key);\n\n        if (Object.keys(genValues).length < 1) {\n          return;\n        }\n\n        result = namePathSet(result, [entityKey], genValues);\n        return;\n      }\n\n      transform();\n    }); // namePath、transform在omit为false时需正常返回 https://github.com/ant-design/pro-components/issues/2901#issue-908097115\n\n    return omit ? result : tempValues;\n  };\n\n  finalValues = Array.isArray(values) && Array.isArray(finalValues) ? _toConsumableArray(gen(values)) : merge({}, gen(values), finalValues);\n  return finalValues;\n};\n\nexport default transformKeySubmitValue;"]},"metadata":{},"sourceType":"module"}