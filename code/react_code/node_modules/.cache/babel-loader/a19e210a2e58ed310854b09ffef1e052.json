{"ast":null,"code":"\"use strict\"; // global key for user preferred registration\n\nvar REGISTRATION_KEY = '@@any-promise/REGISTRATION',\n    // Prior registration (preferred or detected)\nregistered = null;\n/**\n * Registers the given implementation.  An implementation must\n * be registered prior to any call to `require(\"any-promise\")`,\n * typically on application load.\n *\n * If called with no arguments, will return registration in\n * following priority:\n *\n * For Node.js:\n *\n * 1. Previous registration\n * 2. global.Promise if node.js version >= 0.12\n * 3. Auto detected promise based on first sucessful require of\n *    known promise libraries. Note this is a last resort, as the\n *    loaded library is non-deterministic. node.js >= 0.12 will\n *    always use global.Promise over this priority list.\n * 4. Throws error.\n *\n * For Browser:\n *\n * 1. Previous registration\n * 2. window.Promise\n * 3. Throws error.\n *\n * Options:\n *\n * Promise: Desired Promise constructor\n * global: Boolean - Should the registration be cached in a global variable to\n * allow cross dependency/bundle registration?  (default true)\n */\n\nmodule.exports = function (root, loadImplementation) {\n  return function register(implementation, opts) {\n    implementation = implementation || null;\n    opts = opts || {}; // global registration unless explicitly  {global: false} in options (default true)\n\n    var registerGlobal = opts.global !== false; // load any previous global registration\n\n    if (registered === null && registerGlobal) {\n      registered = root[REGISTRATION_KEY] || null;\n    }\n\n    if (registered !== null && implementation !== null && registered.implementation !== implementation) {\n      // Throw error if attempting to redefine implementation\n      throw new Error('any-promise already defined as \"' + registered.implementation + '\".  You can only register an implementation before the first ' + ' call to require(\"any-promise\") and an implementation cannot be changed');\n    }\n\n    if (registered === null) {\n      // use provided implementation\n      if (implementation !== null && typeof opts.Promise !== 'undefined') {\n        registered = {\n          Promise: opts.Promise,\n          implementation: implementation\n        };\n      } else {\n        // require implementation if implementation is specified but not provided\n        registered = loadImplementation(implementation);\n      }\n\n      if (registerGlobal) {\n        // register preference globally in case multiple installations\n        root[REGISTRATION_KEY] = registered;\n      }\n    }\n\n    return registered;\n  };\n};","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/any-promise/loader.js"],"names":["REGISTRATION_KEY","registered","module","exports","root","loadImplementation","register","implementation","opts","registerGlobal","global","Error","Promise"],"mappings":"AAAA,a,CACI;;AACJ,IAAIA,gBAAgB,GAAG,4BAAvB;AAAA,IACI;AACAC,UAAU,GAAG,IAFjB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAeC,kBAAf,EAAkC;AACjD,SAAO,SAASC,QAAT,CAAkBC,cAAlB,EAAkCC,IAAlC,EAAuC;AAC5CD,IAAAA,cAAc,GAAGA,cAAc,IAAI,IAAnC;AACAC,IAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf,CAF4C,CAG5C;;AACA,QAAIC,cAAc,GAAGD,IAAI,CAACE,MAAL,KAAgB,KAArC,CAJ4C,CAM5C;;AACA,QAAGT,UAAU,KAAK,IAAf,IAAuBQ,cAA1B,EAAyC;AACvCR,MAAAA,UAAU,GAAGG,IAAI,CAACJ,gBAAD,CAAJ,IAA0B,IAAvC;AACD;;AAED,QAAGC,UAAU,KAAK,IAAf,IACIM,cAAc,KAAK,IADvB,IAEIN,UAAU,CAACM,cAAX,KAA8BA,cAFrC,EAEoD;AAClD;AACA,YAAM,IAAII,KAAJ,CAAU,qCAAmCV,UAAU,CAACM,cAA9C,GACd,+DADc,GAEd,yEAFI,CAAN;AAGD;;AAED,QAAGN,UAAU,KAAK,IAAlB,EAAuB;AACrB;AACA,UAAGM,cAAc,KAAK,IAAnB,IAA2B,OAAOC,IAAI,CAACI,OAAZ,KAAwB,WAAtD,EAAkE;AAChEX,QAAAA,UAAU,GAAG;AACXW,UAAAA,OAAO,EAAEJ,IAAI,CAACI,OADH;AAEXL,UAAAA,cAAc,EAAEA;AAFL,SAAb;AAID,OALD,MAKO;AACL;AACAN,QAAAA,UAAU,GAAGI,kBAAkB,CAACE,cAAD,CAA/B;AACD;;AAED,UAAGE,cAAH,EAAkB;AAChB;AACAL,QAAAA,IAAI,CAACJ,gBAAD,CAAJ,GAAyBC,UAAzB;AACD;AACF;;AAED,WAAOA,UAAP;AACD,GAvCD;AAwCD,CAzCD","sourcesContent":["\"use strict\"\n    // global key for user preferred registration\nvar REGISTRATION_KEY = '@@any-promise/REGISTRATION',\n    // Prior registration (preferred or detected)\n    registered = null\n\n/**\n * Registers the given implementation.  An implementation must\n * be registered prior to any call to `require(\"any-promise\")`,\n * typically on application load.\n *\n * If called with no arguments, will return registration in\n * following priority:\n *\n * For Node.js:\n *\n * 1. Previous registration\n * 2. global.Promise if node.js version >= 0.12\n * 3. Auto detected promise based on first sucessful require of\n *    known promise libraries. Note this is a last resort, as the\n *    loaded library is non-deterministic. node.js >= 0.12 will\n *    always use global.Promise over this priority list.\n * 4. Throws error.\n *\n * For Browser:\n *\n * 1. Previous registration\n * 2. window.Promise\n * 3. Throws error.\n *\n * Options:\n *\n * Promise: Desired Promise constructor\n * global: Boolean - Should the registration be cached in a global variable to\n * allow cross dependency/bundle registration?  (default true)\n */\nmodule.exports = function(root, loadImplementation){\n  return function register(implementation, opts){\n    implementation = implementation || null\n    opts = opts || {}\n    // global registration unless explicitly  {global: false} in options (default true)\n    var registerGlobal = opts.global !== false;\n\n    // load any previous global registration\n    if(registered === null && registerGlobal){\n      registered = root[REGISTRATION_KEY] || null\n    }\n\n    if(registered !== null\n        && implementation !== null\n        && registered.implementation !== implementation){\n      // Throw error if attempting to redefine implementation\n      throw new Error('any-promise already defined as \"'+registered.implementation+\n        '\".  You can only register an implementation before the first '+\n        ' call to require(\"any-promise\") and an implementation cannot be changed')\n    }\n\n    if(registered === null){\n      // use provided implementation\n      if(implementation !== null && typeof opts.Promise !== 'undefined'){\n        registered = {\n          Promise: opts.Promise,\n          implementation: implementation\n        }\n      } else {\n        // require implementation if implementation is specified but not provided\n        registered = loadImplementation(implementation)\n      }\n\n      if(registerGlobal){\n        // register preference globally in case multiple installations\n        root[REGISTRATION_KEY] = registered\n      }\n    }\n\n    return registered\n  }\n}\n"]},"metadata":{},"sourceType":"script"}