{"ast":null,"code":"/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file ResolverMethodHandler.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\n\nvar PromiEvent = require('web3-core-promievent');\n\nvar namehash = require('eth-ens-namehash');\n\nvar _ = require('underscore');\n/**\n * @param {Registry} registry\n * @constructor\n */\n\n\nfunction ResolverMethodHandler(registry) {\n  this.registry = registry;\n}\n/**\n * Executes an resolver method and returns an eventifiedPromise\n *\n * @param {string} ensName\n * @param {string} methodName\n * @param {array} methodArguments\n * @param {function} callback\n * @returns {Object}\n */\n\n\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, callback) {\n  return {\n    call: this.call.bind({\n      ensName: ensName,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      callback: callback,\n      parent: this\n    }),\n    send: this.send.bind({\n      ensName: ensName,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      callback: callback,\n      parent: this\n    })\n  };\n};\n/**\n * Executes call\n *\n * @returns {eventifiedPromise}\n */\n\n\nResolverMethodHandler.prototype.call = function (callback) {\n  var self = this;\n  var promiEvent = new PromiEvent();\n  var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n  this.parent.registry.resolver(this.ensName).then(function (resolver) {\n    self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, callback);\n  }).catch(function (error) {\n    promiEvent.reject(error);\n  });\n  return promiEvent.eventEmitter;\n};\n/**\n * Executes send\n *\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\n  var self = this;\n  var promiEvent = new PromiEvent();\n  var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n  this.parent.registry.resolver(this.ensName).then(function (resolver) {\n    self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\n  }).catch(function (error) {\n    promiEvent.reject(error);\n  });\n  return promiEvent.eventEmitter;\n};\n/**\n * Handles a call method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, callback) {\n  method.apply(this, preparedArguments).call().then(function (receipt) {\n    promiEvent.resolve(receipt);\n\n    if (_.isFunction(callback)) {\n      callback(receipt);\n    }\n  }).catch(function (error) {\n    promiEvent.reject(error);\n\n    if (_.isFunction(callback)) {\n      callback(error);\n    }\n  });\n  return promiEvent;\n};\n/**\n * Handles a send method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\n  method.apply(this, preparedArguments).send(sendOptions).on('transactionHash', function (hash) {\n    promiEvent.eventEmitter.emit('transactionHash', hash);\n  }).on('confirmation', function (confirmationNumber, receipt) {\n    promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\n  }).on('receipt', function (receipt) {\n    promiEvent.eventEmitter.emit('receipt', receipt);\n    promiEvent.resolve(receipt);\n\n    if (_.isFunction(callback)) {\n      callback(receipt);\n    }\n  }).on('error', function (error) {\n    promiEvent.eventEmitter.emit('error', error);\n    promiEvent.reject(error);\n\n    if (_.isFunction(callback)) {\n      callback(error);\n    }\n  });\n  return promiEvent;\n};\n/**\n * Adds the ENS node to the arguments\n *\n * @param {string} name\n * @param {array} methodArguments\n * @returns {array}\n */\n\n\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\n  var node = namehash.hash(name);\n\n  if (methodArguments.length > 0) {\n    methodArguments.unshift(node);\n    return methodArguments;\n  }\n\n  return [node];\n};\n\nmodule.exports = ResolverMethodHandler;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/web3-eth-ens/src/lib/ResolverMethodHandler.js"],"names":["PromiEvent","require","namehash","_","ResolverMethodHandler","registry","prototype","method","ensName","methodName","methodArguments","callback","call","bind","parent","send","self","promiEvent","preparedArguments","prepareArguments","resolver","then","handleCall","methods","catch","error","reject","eventEmitter","sendOptions","handleSend","apply","receipt","resolve","isFunction","on","hash","emit","confirmationNumber","name","node","length","unshift","module","exports"],"mappings":"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","sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ResolverMethodHandler.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n\"use strict\";\n\nvar PromiEvent = require('web3-core-promievent');\nvar namehash = require('eth-ens-namehash');\nvar _ = require('underscore');\n\n/**\n * @param {Registry} registry\n * @constructor\n */\nfunction ResolverMethodHandler(registry) {\n    this.registry = registry;\n}\n\n/**\n * Executes an resolver method and returns an eventifiedPromise\n *\n * @param {string} ensName\n * @param {string} methodName\n * @param {array} methodArguments\n * @param {function} callback\n * @returns {Object}\n */\nResolverMethodHandler.prototype.method = function (ensName, methodName, methodArguments, callback) {\n    return {\n        call: this.call.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this\n        }),\n        send: this.send.bind({\n            ensName: ensName,\n            methodName: methodName,\n            methodArguments: methodArguments,\n            callback: callback,\n            parent: this\n        })\n    };\n};\n\n/**\n * Executes call\n *\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.call = function (callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n\n    this.parent.registry.resolver(this.ensName).then(function (resolver) {\n        self.parent.handleCall(promiEvent, resolver.methods[self.methodName], preparedArguments, callback);\n    }).catch(function (error) {\n        promiEvent.reject(error);\n    });\n\n    return promiEvent.eventEmitter;\n};\n\n\n/**\n * Executes send\n *\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.send = function (sendOptions, callback) {\n    var self = this;\n    var promiEvent = new PromiEvent();\n    var preparedArguments = this.parent.prepareArguments(this.ensName, this.methodArguments);\n\n    this.parent.registry.resolver(this.ensName).then(function (resolver) {\n        self.parent.handleSend(promiEvent, resolver.methods[self.methodName], preparedArguments, sendOptions, callback);\n    }).catch(function (error) {\n        promiEvent.reject(error);\n    });\n\n    return promiEvent.eventEmitter;\n};\n\n/**\n * Handles a call method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleCall = function (promiEvent, method, preparedArguments, callback) {\n    method.apply(this, preparedArguments).call()\n        .then(function (receipt) {\n            promiEvent.resolve(receipt);\n\n            if (_.isFunction(callback)) {\n                callback(receipt);\n            }\n        }).catch(function (error) {\n            promiEvent.reject(error);\n\n            if (_.isFunction(callback)) {\n                callback(error);\n            }\n        });\n\n    return promiEvent;\n};\n\n/**\n * Handles a send method\n *\n * @param {eventifiedPromise} promiEvent\n * @param {function} method\n * @param {array} preparedArguments\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nResolverMethodHandler.prototype.handleSend = function (promiEvent, method, preparedArguments, sendOptions, callback) {\n    method.apply(this, preparedArguments).send(sendOptions)\n        .on('transactionHash', function (hash) {\n            promiEvent.eventEmitter.emit('transactionHash', hash);\n        })\n        .on('confirmation', function (confirmationNumber, receipt) {\n            promiEvent.eventEmitter.emit('confirmation', confirmationNumber, receipt);\n        })\n        .on('receipt', function (receipt) {\n            promiEvent.eventEmitter.emit('receipt', receipt);\n            promiEvent.resolve(receipt);\n\n            if (_.isFunction(callback)) {\n                callback(receipt);\n            }\n        })\n        .on('error', function (error) {\n            promiEvent.eventEmitter.emit('error', error);\n            promiEvent.reject(error);\n\n            if (_.isFunction(callback)) {\n                callback(error);\n            }\n        });\n\n    return promiEvent;\n};\n\n/**\n * Adds the ENS node to the arguments\n *\n * @param {string} name\n * @param {array} methodArguments\n * @returns {array}\n */\nResolverMethodHandler.prototype.prepareArguments = function (name, methodArguments) {\n    var node = namehash.hash(name);\n\n    if (methodArguments.length > 0) {\n        methodArguments.unshift(node);\n\n        return methodArguments;\n    }\n\n    return [node];\n};\n\nmodule.exports = ResolverMethodHandler;\n"]},"metadata":{},"sourceType":"script"}