{"ast":null,"code":"import \"antd/es/empty/style\";\nimport _Empty from \"antd/es/empty\";\nvar _jsxFileName = \"/home/kzj/project/finalize/B-S-/\\u6E90\\u7801/react_code/src/components/CityChart/index.jsx\";\nimport React, { Component } from 'react';\nimport * as echarts from 'echarts/core';\nimport { TooltipComponent, LegendComponent } from 'echarts/components';\nimport { PieChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\necharts.use([TooltipComponent, LegendComponent, PieChart, CanvasRenderer]);\n\nclass CityChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    if (nextProps.device !== undefined) {\n      this.setState({\n        data: nextProps.data\n      }, () => {\n        if (this.state.data.length !== 0) {\n          const chartDom = document.getElementById('cityChart');\n          const myChart3 = echarts.init(chartDom);\n          let option3;\n          option3 = {\n            tooltip: {\n              trigger: 'item'\n            },\n            legend: {\n              top: '5%',\n              left: 'center'\n            },\n            series: [{\n              name: '城市名称',\n              type: 'pie',\n              radius: ['40%', '70%'],\n              avoidLabelOverlap: false,\n              label: {\n                show: false,\n                position: 'center'\n              },\n              emphasis: {\n                label: {\n                  show: true,\n                  fontSize: '40',\n                  fontWeight: 'bold'\n                }\n              },\n              labelLine: {\n                show: false\n              },\n              data: this.state.data\n            }]\n          };\n          option3 && myChart3.setOption(option3);\n        }\n      });\n    }\n  }\n\n  render() {\n    if (this.state.data.length === 0) return /*#__PURE__*/_jsxDEV(_Empty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 49\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'cityChart',\n      style: {\n        height: '400px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nexport default CityChart;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/src/components/CityChart/index.jsx"],"names":["React","Component","echarts","TooltipComponent","LegendComponent","PieChart","CanvasRenderer","use","CityChart","state","data","componentWillReceiveProps","nextProps","nextContext","device","undefined","setState","length","chartDom","document","getElementById","myChart3","init","option3","tooltip","trigger","legend","top","left","series","name","type","radius","avoidLabelOverlap","label","show","position","emphasis","fontSize","fontWeight","labelLine","setOption","render","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,cAAzB;AACA,SACIC,gBADJ,EAEIC,eAFJ,QAGO,oBAHP;AAIA,SACIC,QADJ,QAEO,gBAFP;AAGA,SACIC,cADJ,QAEO,mBAFP;;AAKAJ,OAAO,CAACK,GAAR,CACI,CAACJ,gBAAD,EAAmBC,eAAnB,EAAoCC,QAApC,EAA8CC,cAA9C,CADJ;;AAIA,MAAME,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BQ,KAD8B,GACtB;AAACC,MAAAA,IAAI,EAAC;AAAN,KADsB;AAAA;;AAE9BC,EAAAA,yBAAyB,CAAEC,SAAF,EAAaC,WAAb,EAA0B;AAC/C,QAAGD,SAAS,CAACE,MAAV,KAAqBC,SAAxB,EAAkC;AAC9B,WAAKC,QAAL,CAAc;AAACN,QAAAA,IAAI,EAAEE,SAAS,CAACF;AAAjB,OAAd,EAAsC,MAAM;AACxC,YAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,KAA2B,CAA9B,EAAgC;AAC5B,gBAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAyB,WAAzB,CAAjB;AACA,gBAAMC,QAAQ,GAAGnB,OAAO,CAACoB,IAAR,CAAcJ,QAAd,CAAjB;AACA,cAAIK,OAAJ;AACAA,UAAAA,OAAO,GAAG;AACNC,YAAAA,OAAO,EAAE;AACLC,cAAAA,OAAO,EAAE;AADJ,aADH;AAINC,YAAAA,MAAM,EAAE;AACJC,cAAAA,GAAG,EAAE,IADD;AAEJC,cAAAA,IAAI,EAAE;AAFF,aAJF;AAQNC,YAAAA,MAAM,EAAE,CACJ;AACIC,cAAAA,IAAI,EAAE,MADV;AAEIC,cAAAA,IAAI,EAAE,KAFV;AAGIC,cAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CAHZ;AAIIC,cAAAA,iBAAiB,EAAE,KAJvB;AAKIC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,IAAI,EAAE,KADH;AAEHC,gBAAAA,QAAQ,EAAE;AAFP,eALX;AASIC,cAAAA,QAAQ,EAAE;AACNH,gBAAAA,KAAK,EAAE;AACHC,kBAAAA,IAAI,EAAE,IADH;AAEHG,kBAAAA,QAAQ,EAAE,IAFP;AAGHC,kBAAAA,UAAU,EAAE;AAHT;AADD,eATd;AAgBIC,cAAAA,SAAS,EAAE;AACPL,gBAAAA,IAAI,EAAE;AADC,eAhBf;AAmBIzB,cAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AAnBrB,aADI;AARF,WAAV;AAiCAa,UAAAA,OAAO,IAAIF,QAAQ,CAACoB,SAAT,CAAmBlB,OAAnB,CAAX;AACH;AACJ,OAxCD;AAyCH;AACJ;;AAEDmB,EAAAA,MAAM,GAAI;AACN,QAAG,KAAKjC,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,KAA2B,CAA9B,EAAiC,oBAAO;AAAA;AAAA;AAAA;AAAA,YAAP,CAAjC,KACK,oBAAO;AAAK,MAAA,EAAE,EAAE,WAAT;AAAsB,MAAA,KAAK,EAAE;AAAC0B,QAAAA,MAAM,EAAC;AAAR;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAP;AACR;;AAnD6B;;AAsDlC,eAAenC,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport * as echarts from 'echarts/core';\nimport {\n    TooltipComponent,\n    LegendComponent\n} from 'echarts/components';\nimport {\n    PieChart\n} from 'echarts/charts';\nimport {\n    CanvasRenderer\n} from 'echarts/renderers';\nimport {Empty} from \"antd\";\n\necharts.use(\n    [TooltipComponent, LegendComponent, PieChart, CanvasRenderer]\n);\n\nclass CityChart extends Component {\n    state = {data:[]}\n    componentWillReceiveProps (nextProps, nextContext) {\n        if(nextProps.device !== undefined){\n            this.setState({data: nextProps.data}, () => {\n                if(this.state.data.length !== 0){\n                    const chartDom = document.getElementById ('cityChart');\n                    const myChart3 = echarts.init (chartDom);\n                    let option3;\n                    option3 = {\n                        tooltip: {\n                            trigger: 'item'\n                        },\n                        legend: {\n                            top: '5%',\n                            left: 'center'\n                        },\n                        series: [\n                            {\n                                name: '城市名称',\n                                type: 'pie',\n                                radius: ['40%', '70%'],\n                                avoidLabelOverlap: false,\n                                label: {\n                                    show: false,\n                                    position: 'center'\n                                },\n                                emphasis: {\n                                    label: {\n                                        show: true,\n                                        fontSize: '40',\n                                        fontWeight: 'bold'\n                                    }\n                                },\n                                labelLine: {\n                                    show: false\n                                },\n                                data: this.state.data\n                            }\n                        ]\n                    };\n\n                    option3 && myChart3.setOption(option3);\n                }\n            })\n        }\n    }\n\n    render () {\n        if(this.state.data.length === 0) return <Empty/>;\n        else return <div id={'cityChart'} style={{height:'400px'}}/>;\n    }\n}\n\nexport default CityChart;"]},"metadata":{},"sourceType":"module"}