{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender';\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as colorTool from 'zrender/lib/tool/color';\nimport env from 'zrender/lib/core/env';\nimport timsort from 'zrender/lib/core/timsort';\nimport Eventful from 'zrender/lib/core/Eventful';\nimport GlobalModel from '../model/Global';\nimport ExtensionAPI from './ExtensionAPI';\nimport CoordinateSystemManager from './CoordinateSystem';\nimport OptionManager from '../model/OptionManager';\nimport backwardCompat from '../preprocessor/backwardCompat';\nimport dataStack from '../processor/dataStack';\nimport SeriesModel from '../model/Series';\nimport ComponentView from '../view/Component';\nimport ChartView from '../view/Chart';\nimport * as graphic from '../util/graphic';\nimport { getECData } from '../util/innerStore';\nimport { enterEmphasisWhenMouseOver, leaveEmphasisWhenMouseOut, isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, toggleSeriesBlurState, toggleSeriesBlurStateFromPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur } from '../util/states';\nimport * as modelUtil from '../util/model';\nimport { throttle } from '../util/throttle';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style';\nimport loadingDefault from '../loading/default';\nimport Scheduler from './Scheduler';\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\nimport mapDataStorage from '../coord/geo/mapDataStorage';\nimport { parseClassType } from '../util/clazz';\nimport { ECEventProcessor } from '../util/ECEventProcessor';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper';\nimport LabelManager from '../label/LabelManager';\nimport { deprecateLog, throwError } from '../util/log';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction';\nimport { registerExternalTransform } from '../data/helper/transform';\nimport { createLocaleObject, SYSTEM_LANG } from './locale';\nimport { findEventDispatcher } from '../util/event';\nimport decal from '../visual/decal';\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar indexOf = zrUtil.indexOf;\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.0.2';\nexport var dependencies = {\n  zrender: '5.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar OPTION_UPDATED_KEY = '__optionUpdated';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar clearColorPalette;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar performPostUpdateFuncs;\nvar createExtensionAPI;\nvar enableConnect;\nvar setTransitionOpt;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (typeof theme === 'string') {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    }); // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n    theme = zrUtil.clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter();\n    _this._labelManager = new LabelManager(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = zrUtil.bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    zrUtil.setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[OPTION_UPDATED_KEY]) {\n      var silent = this[OPTION_UPDATED_KEY].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n      prepare(this);\n      updateMethods.update.call(this); // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[OPTION_UPDATED_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n        // Stream progress.\n        var remainTime = TEST_FRAME_REMAIN_TIME;\n        var ecModel = this._model;\n        var api = this._api;\n        scheduler.unfinished = false;\n\n        do {\n          var startTime = +new Date();\n          scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n          scheduler.performDataProcessorTasks(ecModel);\n          updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n          // each frame is not a good user experience. So we follow the rule that\n          // the extent of the coordinate system is determin in the first frame (the\n          // frame is executed immedietely after task reset.\n          // this._coordSysMgr.update(ecModel, api);\n          // console.log('--- ec frame visual ---', remainTime);\n\n          scheduler.performVisualTasks(ecModel);\n          renderSeries(this, this._model, api, 'remain');\n          remainTime -= +new Date() - startTime;\n        } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n        if (!scheduler.unfinished) {\n          this._zr.flush();\n        } // Else, zr flushing be ensue within the same frame,\n        // because zr flushing is after onframe event.\n\n      }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`setOption` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    setTransitionOpt(this, transitionOpt);\n\n    if (lazyUpdate) {\n      this[OPTION_UPDATED_KEY] = {\n        silent: silent\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      prepare(this);\n      updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n      this._zr.flush();\n\n      this[OPTION_UPDATED_KEY] = false;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @DEPRECATED\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    opts = zrUtil.extend({}, opts || {});\n    opts.pixelRatio = opts.pixelRatio || this.getDevicePixelRatio();\n    opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n    var zr = this._zr; // let list = zr.storage.getDisplayList();\n    // Stop animations\n    // Never works before in init animation, so remove it.\n    // zrUtil.each(list, function (el) {\n    //     el.stopAnimation(true);\n    // });\n\n    return zr.painter.getRenderedCanvas(opts);\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    zrUtil.each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      zrUtil.each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(zrUtil.clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = zrUtil.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    zrUtil.each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n                params = zrUtil.extend({}, ecData.eventData);\n                return true;\n              }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    var api = this._api;\n    var ecModel = this._model;\n    each(this._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(this._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    this._zr.dispose();\n\n    delete instances[this.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`resize` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var optionChanged = ecModel.resetOption('media');\n    var silent = opts && opts.silent;\n    this[IN_MAIN_PROCESS_KEY] = true;\n    optionChanged && prepare(this);\n    updateMethods.update.call(this, {\n      type: 'resize',\n      animation: {\n        // Disable animation\n        duration: 0\n      }\n    });\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = zrUtil.extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    var labelManager = this._labelManager;\n    labelManager.updateLayoutConfig(this._api);\n    labelManager.layout(this._api);\n    labelManager.processLabelsOverall();\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = zrUtil.createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        if (!excludeSeriesIdMap || excludeSeriesIdMap.get(model.id) == null) {\n          if (isHighDownPayload(payload) && !payload.notBlur) {\n            if (model instanceof SeriesModel) {\n              toggleSeriesBlurStateFromPayload(model, payload, ecIns._api);\n            }\n          } else if (isSelectChangePayload(payload)) {\n            // TODO geo\n            if (model instanceof SeriesModel) {\n              toggleSelectionFromPayload(model, payload, ecIns._api);\n              updateSeriesElementSelection(model);\n              markStatusToUpdate(ecIns);\n            }\n          }\n\n          callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n        }\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload);\n      },\n      update: function (payload) {\n        // console.profile && console.profile('update');\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode'); // In IE8\n\n        if (!env.canvasSupported) {\n          var colorArr = colorTool.parse(backgroundColor);\n          backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n          if (colorArr[3] === 0) {\n            backgroundColor = 'transparent';\n          }\n        } else {\n          zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n          if (darkMode != null && darkMode !== 'auto') {\n            zr.setDarkMode(darkMode);\n          }\n        }\n\n        performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = zrUtil.createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, seriesDirtyMap);\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, this._model, this._api, payload);\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = zrUtil.map(payload.batch, function (item) {\n          item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isStatusChange = isHighDownPayload(payload) || isSelectChange;\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isStatusChange) {\n          // method, payload, mainType, subType\n          updateDirectly(_this, updateMethod, batchItem, 'series'); // Mark status to update\n\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isStatusChange && !cptType) {\n        // Still dirty\n        if (this[OPTION_UPDATED_KEY]) {\n          prepare(this);\n          updateMethods.update.call(this, payload);\n          this[OPTION_UPDATED_KEY] = false;\n        } else {\n          updateMethods[updateMethod].call(this, payload);\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[OPTION_UPDATED_KEY] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          var ecData = getECData(dispatcher); // Try blur all in the related series. Then emphasis the hoverred.\n          // TODO. progressive mode.\n\n          toggleSeriesBlurState(ecData.seriesIndex, ecData.focus, ecData.blurScope, ecIns._api, true);\n          enterEmphasisWhenMouseOver(dispatcher, e);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          var ecData = getECData(dispatcher);\n          toggleSeriesBlurState(ecData.seriesIndex, ecData.focus, ecData.blurScope, ecIns._api, false);\n          leaveEmphasisWhenMouseOut(dispatcher, e);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    clearColorPalette = function (ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    };\n\n    render = function (ecIns, ecModel, api, payload) {\n      renderComponents(ecIns, ecModel, api, payload);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      var labelManager = ecIns._labelManager;\n      labelManager.clearLabels();\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        seriesModel.__transientTransitionOpt = null;\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel); // Add labels.\n\n        labelManager.addLabelsOfSeries(chartView);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      labelManager.updateLayoutConfig(api);\n      labelManager.layout(api);\n      labelManager.processLabelsOverall();\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n    };\n\n    performPostUpdateFuncs = function (ecModel, api) {\n      each(postUpdateFuncs, function (func) {\n        func(ecModel, api);\n      });\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.group.traverse(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n          console.warn('Only canvas support blendMode');\n        }\n      }\n\n      chartView.group.traverse(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n\n        if (el.eachPendingDisplayable) {\n          el.eachPendingDisplayable(function (displayable) {\n            displayable.style.blend = blendMode;\n          });\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n\n      var z = model.get('z');\n      var zlevel = model.get('zlevel'); // Set z and zlevel\n\n      view.group.traverse(function (el) {\n        if (!el.isGroup) {\n          z != null && (el.z = z);\n          zlevel != null && (el.zlevel = zlevel); // TODO if textContent is on group.\n\n          var label = el.getTextContent();\n          var labelLine = el.getTextGuideLine();\n\n          if (label) {\n            label.z = el.z;\n            label.zlevel = el.zlevel; // lift z2 of text content\n            // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n            label.z2 = el.z2 + 2;\n          }\n\n          if (labelLine) {\n            var showAbove = el.textGuideLineConfig && el.textGuideLineConfig.showAbove;\n            labelLine.z = el.z;\n            labelLine.zlevel = el.zlevel;\n            labelLine.z2 = el.z2 + (showAbove ? 1 : -1);\n          }\n        }\n      });\n    }\n\n    ; // Clear states without animation.\n    // TODO States on component.\n\n    function clearStates(model, view) {\n      view.group.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.group.traverse(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n\n    setTransitionOpt = function (chart, transitionOpt) {\n      var ecModel = chart._model;\n      zrUtil.each(modelUtil.normalizeToArray(transitionOpt), function (transOpt) {\n        var errMsg;\n        var fromOpt = transOpt.from;\n        var toOpt = transOpt.to;\n\n        if (toOpt == null) {\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition.to` must be specified.';\n          }\n\n          throwError(errMsg);\n        }\n\n        var finderOpt = {\n          includeMainTypes: ['series'],\n          enableAll: false,\n          enableNone: false\n        };\n        var fromResult = fromOpt ? modelUtil.parseFinder(ecModel, fromOpt, finderOpt) : null;\n        var toResult = modelUtil.parseFinder(ecModel, toOpt, finderOpt);\n        var toSeries = toResult.seriesModel;\n\n        if (toSeries == null) {\n          errMsg = '';\n\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition` is only supported on series.';\n          }\n        }\n\n        if (fromResult && fromResult.seriesModel !== toSeries) {\n          errMsg = '';\n\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition.from` and `transition.to` must be specified to the same series.';\n          }\n        }\n\n        if (errMsg != null) {\n          throwError(errMsg);\n        } // Just a temp solution: mount them on series.\n\n\n        toSeries.__transientTransitionOpt = {\n          from: fromOpt ? fromOpt.dimension : null,\n          to: toOpt.dimension,\n          dividingMethod: transOpt.dividingMethod\n        };\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n}; // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         let isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar postInitFuncs = [];\nvar postUpdateFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n */\n\nexport function init(dom, theme, opts) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!dom) {\n      throw new Error('Initialize failed: invalid dom.');\n    }\n  }\n\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('There is a chart instance already initialized on the dom.');\n    }\n\n    return existInstance;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n      console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  each(postInitFuncs, function (postInitFunc) {\n    postInitFunc(chart);\n  });\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  if (indexOf(postInitFuncs, postInitFunc) < 0) {\n    postInitFunc && postInitFuncs.push(postInitFunc);\n  }\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  if (indexOf(postUpdateFuncs, postUpdateFunc) < 0) {\n    postUpdateFunc && postUpdateFuncs.push(postUpdateFunc);\n  }\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * The parameters and usage: see `mapDataStorage.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  // For backward compatibility, only return the first one.\n  var records = mapDataStorage.retrieveMap(mapName); // FIXME support SVG, where return not only records[0].\n\n  return records && records[0] && {\n    // @ts-ignore\n    geoJson: records[0].geoJSON,\n    specialAreas: records[0].specialAreas\n  };\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/node_modules/echarts/lib/core/echarts.js"],"names":["__extends","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","SeriesModel","ComponentView","ChartView","graphic","getECData","enterEmphasisWhenMouseOver","leaveEmphasisWhenMouseOut","isHighDownDispatcher","HOVER_STATE_EMPHASIS","HOVER_STATE_BLUR","toggleSeriesBlurState","toggleSeriesBlurStateFromPayload","toggleSelectionFromPayload","updateSeriesElementSelection","getAllSelectedIndices","isSelectChangePayload","isHighDownPayload","HIGHLIGHT_ACTION_TYPE","DOWNPLAY_ACTION_TYPE","SELECT_ACTION_TYPE","UNSELECT_ACTION_TYPE","TOGGLE_SELECT_ACTION_TYPE","savePathStates","enterEmphasis","leaveEmphasis","leaveBlur","enterSelect","leaveSelect","enterBlur","modelUtil","throttle","seriesStyleTask","dataStyleTask","dataColorPaletteTask","loadingDefault","Scheduler","lightTheme","darkTheme","mapDataStorage","parseClassType","ECEventProcessor","seriesSymbolTask","dataSymbolTask","getVisualFromData","getItemVisualFromData","LabelManager","deprecateLog","throwError","handleLegacySelectEvents","registerExternalTransform","createLocaleObject","SYSTEM_LANG","findEventDispatcher","decal","assert","each","isFunction","isObject","indexOf","hasWindow","window","version","dependencies","TEST_FRAME_REMAIN_TIME","PRIORITY_PROCESSOR_SERIES_FILTER","PRIORITY_PROCESSOR_DATASTACK","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_DEFAULT","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_PROGRESSIVE_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_CHART_DATA_CUSTOM","PRIORITY_VISUAL_POST_CHART_LAYOUT","PRIORITY_VISUAL_BRUSH","PRIORITY_VISUAL_ARIA","PRIORITY_VISUAL_DECAL","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","CHART_ITEM","ARIA","DECAL","IN_MAIN_PROCESS_KEY","OPTION_UPDATED_KEY","STATUS_NEEDS_UPDATE_KEY","ACTION_REG","CONNECT_STATUS_KEY","CONNECT_STATUS_PENDING","CONNECT_STATUS_UPDATING","CONNECT_STATUS_UPDATED","createRegisterEventWithLowercaseECharts","method","args","_i","arguments","length","isDisposed","disposedWarning","id","toLowercaseNameAndCallEventful","createRegisterEventWithLowercaseMessageCenter","host","toLowerCase","prototype","apply","MessageCenter","_super","messageCenterProto","on","off","prepare","prepareView","updateDirectly","updateMethods","doConvertPixel","updateStreamModes","doDispatchAction","flushPendingActions","triggerUpdatedEvent","bindRenderedEvent","bindMouseEvent","clearColorPalette","render","renderComponents","renderSeries","performPostUpdateFuncs","createExtensionAPI","enableConnect","setTransitionOpt","markStatusToUpdate","applyChangedStates","ECharts","dom","theme","opts","_this","call","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_pendingActions","themeStorage","_dom","defaultRenderer","defaultUseDirtyRect","process","NODE_ENV","root","global","__ECHARTS__DEFAULT__RENDERER__","devUseDirtyRect","__ECHARTS__DEFAULT__USE_DIRTY_RECT__","zr","_zr","init","renderer","devicePixelRatio","width","height","useDirtyRect","_throttledZrFlush","bind","flush","clone","_theme","_locale","locale","_coordSysMgr","api","_api","prioritySortFunc","a","b","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_messageCenter","_labelManager","_initEvents","resize","animation","_onframe","setAsPrimitive","_disposed","scheduler","silent","update","unfinished","remainTime","ecModel","_model","startTime","Date","performSeriesTasks","performDataProcessorTasks","performVisualTasks","getDom","getId","getZr","setOption","option","notMerge","lazyUpdate","replaceMerge","transitionOpt","transition","optionManager","optionPreprocessorFuncs","wakeUp","setTheme","console","error","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","canvasSupported","extend","pixelRatio","backgroundColor","get","getSvgDataURL","svgSupported","list","storage","getDisplayList","el","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","mainType","component","view","__viewId","group","ignore","push","url","getType","type","getConnectedDataURL","isSvg","groupId","mathMin","Math","min","mathMax","max","MAX_NUMBER","Infinity","connectedGroups","left_1","top_1","right_1","bottom_1","canvasList_1","dpr_1","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","left","top","right","bottom","targetCanvas","createCanvas","zr_1","content_1","item","x","y","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","Rect","shape","style","fill","img","Image","image","convertToPixel","finder","value","convertFromPixel","containPixel","result","findResult","parseFinder","models","key","model","coordSys","coordinateSystem","containPoint","warn","getVisual","visualType","parsedFinder","defaultMainType","seriesModel","data","getData","dataIndexInside","hasOwnProperty","indexOfRawIndex","dataIndex","getViewOfComponentModel","componentModel","getViewOfSeriesModel","MOUSE_EVENT_NAMES","eveName","handler","e","target","params","isGlobalOut","parent","ecData","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","componentIndex","getComponent","event","_$eventProcessor","eventInfo","targetEl","packedEvent","trigger","zrEventfulCallAtLast","eventActionMap","actionType","eventType","clear","series","dispose","setAttribute","DOM_ATTRIBUTE_KEY","_loadingFX","optionChanged","resetOption","duration","showLoading","name","cfg","hideLoading","loadingEffects","remove","makeActionFromEvent","eventObj","payload","dispatchAction","opt","actions","browser","weChat","updateLabelLayout","labelManager","updateLayoutConfig","layout","processLabelsOverall","appendData","internalField","ecIns","restorePipelines","prepareStageTasks","plan","isComponent","viewList","viewMap","i","__alive","doPrepare","eachSeries","requireNewView","__requireNewView","viewId","classType","Clazz","getClass","main","sub","__id","__model","__ecComponentInfo","index","renderTask","splice","subType","setUpdatePayload","concat","callView","query","condition","excludeSeriesId","excludeSeriesIdMap","createHashMap","normalizeToArray","modelId","convertOptionIdName","set","notBlur","prepareAndUpdate","coordSysMgr","restoreData","create","darkMode","colorArr","parse","stringify","setDarkMode","updateTransform","componentDirtyList","componentView","seriesDirtyMap","chartView","uid","setDirty","dirtyMap","updateView","markUpdateMethod","updateVisual","clearAllVisual","updateLayout","methodName","coordSysList","getCoordinateSystems","chartsMap","payloadType","escapeConnect","actionWrap","actionInfo","cptTypeTmp","split","updateMethod","pop","cptType","payloads","batched","batch","map","defaults","eventObjBatch","isSelectChange","isStatusChange","batchItem","action","messageCenter","newObj","selected","isFromClick","fromAction","fromActionPayload","pendingActions","shift","isFinished","dispatcher","focus","blurScope","dirtyList","clearStates","updateZ","updateStates","clearLabels","updatePayload","dirty","perform","getPerformArgs","__transientTransitionOpt","updateBlend","addLabelsOfSeries","updateHoverLayerStatus","postUpdateFuncs","func","traverse","isElementRemoved","applyElementStates","newStates","oldStates","currentStates","stateName","states","select","hoverState","emphasis","blur","useStates","elCount","isGroup","node","worker","preventUsingHoverLayer","hoverLayer","blendMode","blend","eachPendingDisplayable","displayable","preventAutoZ","z","zlevel","label","getTextContent","labelLine","getTextGuideLine","z2","showAbove","textGuideLineConfig","textContent","textGuide","stateTransition","hasState","prevStates","stateAnimationModel","enableAnimation","isAnimationEnabled","delay","easing","Path","__dirty","class_1","getComponentByElement","modelInfo","highlightDigit","updateConnectedChartsStatus","charts","status","otherChart","action_1","otherCharts_1","transOpt","errMsg","fromOpt","from","toOpt","to","finderOpt","includeMainTypes","enableAll","enableNone","fromResult","toResult","toSeries","dimension","dividingMethod","echartsProto","one","eventName","cb","ctx","wrapped","args2","postInitFuncs","idBase","groupIdBase","Error","existInstance","getInstanceByDom","isDom","nodeName","toUpperCase","clientWidth","clientHeight","postInitFunc","connect","isArray","disConnect","disconnect","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerPostInit","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","coordSysCreator","register","getCoordinateSystemDimensions","getDimensionsInfo","dimensions","slice","registerLocale","registerLayout","layoutTask","registerVisual","visualTask","registeredTasks","targetList","fn","defaultPriority","isNaN","wrap","__raw","stageHandler","wrapStageHandler","registerLoading","loadingFx","setCanvasCreator","creator","$override","registerMap","mapName","geoJson","specialAreas","getMap","records","retrieveMap","geoJSON","registerTransform","noop","dataTool"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrender from 'zrender/lib/zrender';\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as colorTool from 'zrender/lib/tool/color';\nimport env from 'zrender/lib/core/env';\nimport timsort from 'zrender/lib/core/timsort';\nimport Eventful from 'zrender/lib/core/Eventful';\nimport GlobalModel from '../model/Global';\nimport ExtensionAPI from './ExtensionAPI';\nimport CoordinateSystemManager from './CoordinateSystem';\nimport OptionManager from '../model/OptionManager';\nimport backwardCompat from '../preprocessor/backwardCompat';\nimport dataStack from '../processor/dataStack';\nimport SeriesModel from '../model/Series';\nimport ComponentView from '../view/Component';\nimport ChartView from '../view/Chart';\nimport * as graphic from '../util/graphic';\nimport { getECData } from '../util/innerStore';\nimport { enterEmphasisWhenMouseOver, leaveEmphasisWhenMouseOut, isHighDownDispatcher, HOVER_STATE_EMPHASIS, HOVER_STATE_BLUR, toggleSeriesBlurState, toggleSeriesBlurStateFromPayload, toggleSelectionFromPayload, updateSeriesElementSelection, getAllSelectedIndices, isSelectChangePayload, isHighDownPayload, HIGHLIGHT_ACTION_TYPE, DOWNPLAY_ACTION_TYPE, SELECT_ACTION_TYPE, UNSELECT_ACTION_TYPE, TOGGLE_SELECT_ACTION_TYPE, savePathStates, enterEmphasis, leaveEmphasis, leaveBlur, enterSelect, leaveSelect, enterBlur } from '../util/states';\nimport * as modelUtil from '../util/model';\nimport { throttle } from '../util/throttle';\nimport { seriesStyleTask, dataStyleTask, dataColorPaletteTask } from '../visual/style';\nimport loadingDefault from '../loading/default';\nimport Scheduler from './Scheduler';\nimport lightTheme from '../theme/light';\nimport darkTheme from '../theme/dark';\nimport mapDataStorage from '../coord/geo/mapDataStorage';\nimport { parseClassType } from '../util/clazz';\nimport { ECEventProcessor } from '../util/ECEventProcessor';\nimport { seriesSymbolTask, dataSymbolTask } from '../visual/symbol';\nimport { getVisualFromData, getItemVisualFromData } from '../visual/helper';\nimport LabelManager from '../label/LabelManager';\nimport { deprecateLog, throwError } from '../util/log';\nimport { handleLegacySelectEvents } from '../legacy/dataSelectAction';\nimport { registerExternalTransform } from '../data/helper/transform';\nimport { createLocaleObject, SYSTEM_LANG } from './locale';\nimport { findEventDispatcher } from '../util/event';\nimport decal from '../visual/decal';\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar indexOf = zrUtil.indexOf;\nvar hasWindow = typeof window !== 'undefined';\nexport var version = '5.0.2';\nexport var dependencies = {\n  zrender: '5.0.4'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800; // Some data processors depends on the stack result dimension (to calculate data extent).\n// So data stack stage should be in front of data processing stage.\n\nvar PRIORITY_PROCESSOR_DATASTACK = 900; // \"Data filter\" will block the stream, so it should be\n// put at the begining of data processing.\n\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_DEFAULT = 2000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // Visual property in data. Greater than `PRIORITY_VISUAL_COMPONENT` to enable to\n// overwrite the viusal result of component (like `visualMap`)\n// using data item specific setting (like itemStyle.xxx on data item)\n\nvar PRIORITY_VISUAL_CHART_DATA_CUSTOM = 4500; // Greater than `PRIORITY_VISUAL_CHART_DATA_CUSTOM` to enable to layout based on\n// visual result like `symbolSize`.\n\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 4600;\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY_VISUAL_ARIA = 6000;\nvar PRIORITY_VISUAL_DECAL = 7000;\nexport var PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH,\n    CHART_ITEM: PRIORITY_VISUAL_CHART_DATA_CUSTOM,\n    ARIA: PRIORITY_VISUAL_ARIA,\n    DECAL: PRIORITY_VISUAL_DECAL\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS_KEY = '__flagInMainProcess';\nvar OPTION_UPDATED_KEY = '__optionUpdated';\nvar STATUS_NEEDS_UPDATE_KEY = '__needsUpdateStatus';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\nvar CONNECT_STATUS_KEY = '__connectUpdateStatus';\nvar CONNECT_STATUS_PENDING = 0;\nvar CONNECT_STATUS_UPDATING = 1;\nvar CONNECT_STATUS_UPDATED = 2;\n;\n\nfunction createRegisterEventWithLowercaseECharts(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (this.isDisposed()) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction createRegisterEventWithLowercaseMessageCenter(method) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return toLowercaseNameAndCallEventful(this, method, args);\n  };\n}\n\nfunction toLowercaseNameAndCallEventful(host, method, args) {\n  // `args[0]` is event name. Event name is all lowercase.\n  args[0] = args[0] && args[0].toLowerCase();\n  return Eventful.prototype[method].apply(host, args);\n}\n\nvar MessageCenter =\n/** @class */\nfunction (_super) {\n  __extends(MessageCenter, _super);\n\n  function MessageCenter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  return MessageCenter;\n}(Eventful);\n\nvar messageCenterProto = MessageCenter.prototype;\nmessageCenterProto.on = createRegisterEventWithLowercaseMessageCenter('on');\nmessageCenterProto.off = createRegisterEventWithLowercaseMessageCenter('off'); // ---------------------------------------\n// Internal method names for class ECharts\n// ---------------------------------------\n\nvar prepare;\nvar prepareView;\nvar updateDirectly;\nvar updateMethods;\nvar doConvertPixel;\nvar updateStreamModes;\nvar doDispatchAction;\nvar flushPendingActions;\nvar triggerUpdatedEvent;\nvar bindRenderedEvent;\nvar bindMouseEvent;\nvar clearColorPalette;\nvar render;\nvar renderComponents;\nvar renderSeries;\nvar performPostUpdateFuncs;\nvar createExtensionAPI;\nvar enableConnect;\nvar setTransitionOpt;\nvar markStatusToUpdate;\nvar applyChangedStates;\n\nvar ECharts =\n/** @class */\nfunction (_super) {\n  __extends(ECharts, _super);\n\n  function ECharts(dom, // Theme name or themeOption.\n  theme, opts) {\n    var _this = _super.call(this, new ECEventProcessor()) || this;\n\n    _this._chartsViews = [];\n    _this._chartsMap = {};\n    _this._componentsViews = [];\n    _this._componentsMap = {}; // Can't dispatch action during rendering procedure\n\n    _this._pendingActions = [];\n    opts = opts || {}; // Get theme by name\n\n    if (typeof theme === 'string') {\n      theme = themeStorage[theme];\n    }\n\n    _this._dom = dom;\n    var defaultRenderer = 'canvas';\n    var defaultUseDirtyRect = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var root =\n      /* eslint-disable-next-line */\n      hasWindow ? window : global;\n      defaultRenderer = root.__ECHARTS__DEFAULT__RENDERER__ || defaultRenderer;\n      var devUseDirtyRect = root.__ECHARTS__DEFAULT__USE_DIRTY_RECT__;\n      defaultUseDirtyRect = devUseDirtyRect == null ? defaultUseDirtyRect : devUseDirtyRect;\n    }\n\n    var zr = _this._zr = zrender.init(dom, {\n      renderer: opts.renderer || defaultRenderer,\n      devicePixelRatio: opts.devicePixelRatio,\n      width: opts.width,\n      height: opts.height,\n      useDirtyRect: opts.useDirtyRect == null ? defaultUseDirtyRect : opts.useDirtyRect\n    }); // Expect 60 fps.\n\n    _this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n    theme = zrUtil.clone(theme);\n    theme && backwardCompat(theme, true);\n    _this._theme = theme;\n    _this._locale = createLocaleObject(opts.locale || SYSTEM_LANG);\n    _this._coordSysMgr = new CoordinateSystemManager();\n    var api = _this._api = createExtensionAPI(_this); // Sort on demand\n\n    function prioritySortFunc(a, b) {\n      return a.__prio - b.__prio;\n    }\n\n    timsort(visualFuncs, prioritySortFunc);\n    timsort(dataProcessorFuncs, prioritySortFunc);\n    _this._scheduler = new Scheduler(_this, api, dataProcessorFuncs, visualFuncs);\n    _this._messageCenter = new MessageCenter();\n    _this._labelManager = new LabelManager(); // Init mouse events\n\n    _this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n    _this.resize = zrUtil.bind(_this.resize, _this);\n    zr.animation.on('frame', _this._onframe, _this);\n    bindRenderedEvent(zr, _this);\n    bindMouseEvent(zr, _this); // ECharts instance can be used as value.\n\n    zrUtil.setAsPrimitive(_this);\n    return _this;\n  }\n\n  ECharts.prototype._onframe = function () {\n    if (this._disposed) {\n      return;\n    }\n\n    applyChangedStates(this);\n    var scheduler = this._scheduler; // Lazy update\n\n    if (this[OPTION_UPDATED_KEY]) {\n      var silent = this[OPTION_UPDATED_KEY].silent;\n      this[IN_MAIN_PROCESS_KEY] = true;\n      prepare(this);\n      updateMethods.update.call(this); // At present, in each frame, zrender performs:\n      //   (1) animation step forward.\n      //   (2) trigger('frame') (where this `_onframe` is called)\n      //   (3) zrender flush (render).\n      // If we do nothing here, since we use `setToFinal: true`, the step (3) above\n      // will render the final state of the elements before the real animation started.\n\n      this._zr.flush();\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n      this[OPTION_UPDATED_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    } // Avoid do both lazy update and progress in one frame.\n    else if (scheduler.unfinished) {\n        // Stream progress.\n        var remainTime = TEST_FRAME_REMAIN_TIME;\n        var ecModel = this._model;\n        var api = this._api;\n        scheduler.unfinished = false;\n\n        do {\n          var startTime = +new Date();\n          scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n          scheduler.performDataProcessorTasks(ecModel);\n          updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n          // each frame is not a good user experience. So we follow the rule that\n          // the extent of the coordinate system is determin in the first frame (the\n          // frame is executed immedietely after task reset.\n          // this._coordSysMgr.update(ecModel, api);\n          // console.log('--- ec frame visual ---', remainTime);\n\n          scheduler.performVisualTasks(ecModel);\n          renderSeries(this, this._model, api, 'remain');\n          remainTime -= +new Date() - startTime;\n        } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n        if (!scheduler.unfinished) {\n          this._zr.flush();\n        } // Else, zr flushing be ensue within the same frame,\n        // because zr flushing is after onframe event.\n\n      }\n  };\n\n  ECharts.prototype.getDom = function () {\n    return this._dom;\n  };\n\n  ECharts.prototype.getId = function () {\n    return this.id;\n  };\n\n  ECharts.prototype.getZr = function () {\n    return this._zr;\n  };\n  /* eslint-disable-next-line */\n\n\n  ECharts.prototype.setOption = function (option, notMerge, lazyUpdate) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`setOption` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var silent;\n    var replaceMerge;\n    var transitionOpt;\n\n    if (isObject(notMerge)) {\n      lazyUpdate = notMerge.lazyUpdate;\n      silent = notMerge.silent;\n      replaceMerge = notMerge.replaceMerge;\n      transitionOpt = notMerge.transition;\n      notMerge = notMerge.notMerge;\n    }\n\n    this[IN_MAIN_PROCESS_KEY] = true;\n\n    if (!this._model || notMerge) {\n      var optionManager = new OptionManager(this._api);\n      var theme = this._theme;\n      var ecModel = this._model = new GlobalModel();\n      ecModel.scheduler = this._scheduler;\n      ecModel.init(null, null, null, theme, this._locale, optionManager);\n    }\n\n    this._model.setOption(option, {\n      replaceMerge: replaceMerge\n    }, optionPreprocessorFuncs);\n\n    setTransitionOpt(this, transitionOpt);\n\n    if (lazyUpdate) {\n      this[OPTION_UPDATED_KEY] = {\n        silent: silent\n      };\n      this[IN_MAIN_PROCESS_KEY] = false; // `setOption(option, {lazyMode: true})` may be called when zrender has been slept.\n      // It should wake it up to make sure zrender start to render at the next frame.\n\n      this.getZr().wakeUp();\n    } else {\n      prepare(this);\n      updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n      // fetched after `setOption`.\n\n      this._zr.flush();\n\n      this[OPTION_UPDATED_KEY] = false;\n      this[IN_MAIN_PROCESS_KEY] = false;\n      flushPendingActions.call(this, silent);\n      triggerUpdatedEvent.call(this, silent);\n    }\n  };\n  /**\n   * @DEPRECATED\n   */\n\n\n  ECharts.prototype.setTheme = function () {\n    console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n  }; // We don't want developers to use getModel directly.\n\n\n  ECharts.prototype.getModel = function () {\n    return this._model;\n  };\n\n  ECharts.prototype.getOption = function () {\n    return this._model && this._model.getOption();\n  };\n\n  ECharts.prototype.getWidth = function () {\n    return this._zr.getWidth();\n  };\n\n  ECharts.prototype.getHeight = function () {\n    return this._zr.getHeight();\n  };\n\n  ECharts.prototype.getDevicePixelRatio = function () {\n    return this._zr.painter.dpr\n    /* eslint-disable-next-line */\n    || hasWindow && window.devicePixelRatio || 1;\n  };\n  /**\n   * Get canvas which has all thing rendered\n   */\n\n\n  ECharts.prototype.getRenderedCanvas = function (opts) {\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    opts = zrUtil.extend({}, opts || {});\n    opts.pixelRatio = opts.pixelRatio || this.getDevicePixelRatio();\n    opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n    var zr = this._zr; // let list = zr.storage.getDisplayList();\n    // Stop animations\n    // Never works before in init animation, so remove it.\n    // zrUtil.each(list, function (el) {\n    //     el.stopAnimation(true);\n    // });\n\n    return zr.painter.getRenderedCanvas(opts);\n  };\n  /**\n   * Get svg data url\n   */\n\n\n  ECharts.prototype.getSvgDataURL = function () {\n    if (!env.svgSupported) {\n      return;\n    }\n\n    var zr = this._zr;\n    var list = zr.storage.getDisplayList(); // Stop animations\n\n    zrUtil.each(list, function (el) {\n      el.stopAnimation(null, true);\n    });\n    return zr.painter.toDataURL();\n  };\n\n  ECharts.prototype.getDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    opts = opts || {};\n    var excludeComponents = opts.excludeComponents;\n    var ecModel = this._model;\n    var excludesComponentViews = [];\n    var self = this;\n    each(excludeComponents, function (componentType) {\n      ecModel.eachComponent({\n        mainType: componentType\n      }, function (component) {\n        var view = self._componentsMap[component.__viewId];\n\n        if (!view.group.ignore) {\n          excludesComponentViews.push(view);\n          view.group.ignore = true;\n        }\n      });\n    });\n    var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n    each(excludesComponentViews, function (view) {\n      view.group.ignore = false;\n    });\n    return url;\n  };\n\n  ECharts.prototype.getConnectedDataURL = function (opts) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!env.canvasSupported) {\n      return;\n    }\n\n    var isSvg = opts.type === 'svg';\n    var groupId = this.group;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var MAX_NUMBER = Infinity;\n\n    if (connectedGroups[groupId]) {\n      var left_1 = MAX_NUMBER;\n      var top_1 = MAX_NUMBER;\n      var right_1 = -MAX_NUMBER;\n      var bottom_1 = -MAX_NUMBER;\n      var canvasList_1 = [];\n      var dpr_1 = opts && opts.pixelRatio || this.getDevicePixelRatio();\n      zrUtil.each(instances, function (chart, id) {\n        if (chart.group === groupId) {\n          var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(zrUtil.clone(opts));\n          var boundingRect = chart.getDom().getBoundingClientRect();\n          left_1 = mathMin(boundingRect.left, left_1);\n          top_1 = mathMin(boundingRect.top, top_1);\n          right_1 = mathMax(boundingRect.right, right_1);\n          bottom_1 = mathMax(boundingRect.bottom, bottom_1);\n          canvasList_1.push({\n            dom: canvas,\n            left: boundingRect.left,\n            top: boundingRect.top\n          });\n        }\n      });\n      left_1 *= dpr_1;\n      top_1 *= dpr_1;\n      right_1 *= dpr_1;\n      bottom_1 *= dpr_1;\n      var width = right_1 - left_1;\n      var height = bottom_1 - top_1;\n      var targetCanvas = zrUtil.createCanvas();\n      var zr_1 = zrender.init(targetCanvas, {\n        renderer: isSvg ? 'svg' : 'canvas'\n      });\n      zr_1.resize({\n        width: width,\n        height: height\n      });\n\n      if (isSvg) {\n        var content_1 = '';\n        each(canvasList_1, function (item) {\n          var x = item.left - left_1;\n          var y = item.top - top_1;\n          content_1 += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n        });\n        zr_1.painter.getSvgRoot().innerHTML = content_1;\n\n        if (opts.connectedBackgroundColor) {\n          zr_1.painter.setBackgroundColor(opts.connectedBackgroundColor);\n        }\n\n        zr_1.refreshImmediately();\n        return zr_1.painter.toDataURL();\n      } else {\n        // Background between the charts\n        if (opts.connectedBackgroundColor) {\n          zr_1.add(new graphic.Rect({\n            shape: {\n              x: 0,\n              y: 0,\n              width: width,\n              height: height\n            },\n            style: {\n              fill: opts.connectedBackgroundColor\n            }\n          }));\n        }\n\n        each(canvasList_1, function (item) {\n          var img = new graphic.Image({\n            style: {\n              x: item.left * dpr_1 - left_1,\n              y: item.top * dpr_1 - top_1,\n              image: item.dom\n            }\n          });\n          zr_1.add(img);\n        });\n        zr_1.refreshImmediately();\n        return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n      }\n    } else {\n      return this.getDataURL(opts);\n    }\n  };\n\n  ECharts.prototype.convertToPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertToPixel', finder, value);\n  };\n\n  ECharts.prototype.convertFromPixel = function (finder, value) {\n    return doConvertPixel(this, 'convertFromPixel', finder, value);\n  };\n  /**\n   * Is the specified coordinate systems or components contain the given pixel point.\n   * @param {Array|number} value\n   * @return {boolean} result\n   */\n\n\n  ECharts.prototype.containPixel = function (finder, value) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var ecModel = this._model;\n    var result;\n    var findResult = modelUtil.parseFinder(ecModel, finder);\n    zrUtil.each(findResult, function (models, key) {\n      key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n        var coordSys = model.coordinateSystem;\n\n        if (coordSys && coordSys.containPoint) {\n          result = result || !!coordSys.containPoint(value);\n        } else if (key === 'seriesModels') {\n          var view = this._chartsMap[model.__viewId];\n\n          if (view && view.containPoint) {\n            result = result || view.containPoint(value, model);\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(key + ': ' + (view ? 'The found component do not support containPoint.' : 'No view mapping to the found component.'));\n            }\n          }\n        } else {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(key + ': containPoint is not supported');\n          }\n        }\n      }, this);\n    }, this);\n    return !!result;\n  };\n  /**\n   * Get visual from series or data.\n   * @param finder\n   *        If string, e.g., 'series', means {seriesIndex: 0}.\n   *        If Object, could contain some of these properties below:\n   *        {\n   *            seriesIndex / seriesId / seriesName,\n   *            dataIndex / dataIndexInside\n   *        }\n   *        If dataIndex is not specified, series visual will be fetched,\n   *        but not data item visual.\n   *        If all of seriesIndex, seriesId, seriesName are not specified,\n   *        visual will be fetched from first series.\n   * @param visualType 'color', 'symbol', 'symbolSize'\n   */\n\n\n  ECharts.prototype.getVisual = function (finder, visualType) {\n    var ecModel = this._model;\n    var parsedFinder = modelUtil.parseFinder(ecModel, finder, {\n      defaultMainType: 'series'\n    });\n    var seriesModel = parsedFinder.seriesModel;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!seriesModel) {\n        console.warn('There is no specified seires model');\n      }\n    }\n\n    var data = seriesModel.getData();\n    var dataIndexInside = parsedFinder.hasOwnProperty('dataIndexInside') ? parsedFinder.dataIndexInside : parsedFinder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(parsedFinder.dataIndex) : null;\n    return dataIndexInside != null ? getItemVisualFromData(data, dataIndexInside, visualType) : getVisualFromData(data, visualType);\n  };\n  /**\n   * Get view of corresponding component model\n   */\n\n\n  ECharts.prototype.getViewOfComponentModel = function (componentModel) {\n    return this._componentsMap[componentModel.__viewId];\n  };\n  /**\n   * Get view of corresponding series model\n   */\n\n\n  ECharts.prototype.getViewOfSeriesModel = function (seriesModel) {\n    return this._chartsMap[seriesModel.__viewId];\n  };\n\n  ECharts.prototype._initEvents = function () {\n    var _this = this;\n\n    each(MOUSE_EVENT_NAMES, function (eveName) {\n      var handler = function (e) {\n        var ecModel = _this.getModel();\n\n        var el = e.target;\n        var params;\n        var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n        if (isGlobalOut) {\n          params = {};\n        } else {\n          el && findEventDispatcher(el, function (parent) {\n            var ecData = getECData(parent);\n\n            if (ecData && ecData.dataIndex != null) {\n              var dataModel = ecData.dataModel || ecModel.getSeriesByIndex(ecData.seriesIndex);\n              params = dataModel && dataModel.getDataParams(ecData.dataIndex, ecData.dataType) || {};\n              return true;\n            } // If element has custom eventData of components\n            else if (ecData.eventData) {\n                params = zrUtil.extend({}, ecData.eventData);\n                return true;\n              }\n          }, true);\n        } // Contract: if params prepared in mouse event,\n        // these properties must be specified:\n        // {\n        //    componentType: string (component main type)\n        //    componentIndex: number\n        // }\n        // Otherwise event query can not work.\n\n\n        if (params) {\n          var componentType = params.componentType;\n          var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n          // markLine/markPoint/markArea, the componentType is\n          // 'markLine'/'markPoint'/'markArea', but we should better\n          // enable them to be queried by seriesIndex, since their\n          // option is set in each series.\n\n          if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n            componentType = 'series';\n            componentIndex = params.seriesIndex;\n          }\n\n          var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n          var view = model && _this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n\n          if (process.env.NODE_ENV !== 'production') {\n            // `event.componentType` and `event[componentTpype + 'Index']` must not\n            // be missed, otherwise there is no way to distinguish source component.\n            // See `dataFormat.getDataParams`.\n            if (!isGlobalOut && !(model && view)) {\n              console.warn('model or view can not be found by params');\n            }\n          }\n\n          params.event = e;\n          params.type = eveName;\n          _this._$eventProcessor.eventInfo = {\n            targetEl: el,\n            packedEvent: params,\n            model: model,\n            view: view\n          };\n\n          _this.trigger(eveName, params);\n        }\n      }; // Consider that some component (like tooltip, brush, ...)\n      // register zr event handler, but user event handler might\n      // do anything, such as call `setOption` or `dispatchAction`,\n      // which probably update any of the content and probably\n      // cause problem if it is called previous other inner handlers.\n\n\n      handler.zrEventfulCallAtLast = true;\n\n      _this._zr.on(eveName, handler, _this);\n    });\n    each(eventActionMap, function (actionType, eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    }); // Extra events\n    // TODO register?\n\n    each(['selectchanged'], function (eventType) {\n      _this._messageCenter.on(eventType, function (event) {\n        this.trigger(eventType, event);\n      }, _this);\n    });\n    handleLegacySelectEvents(this._messageCenter, this, this._api);\n  };\n\n  ECharts.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ECharts.prototype.clear = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this.setOption({\n      series: []\n    }, true);\n  };\n\n  ECharts.prototype.dispose = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._disposed = true;\n    modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n    var api = this._api;\n    var ecModel = this._model;\n    each(this._componentsViews, function (component) {\n      component.dispose(ecModel, api);\n    });\n    each(this._chartsViews, function (chart) {\n      chart.dispose(ecModel, api);\n    }); // Dispose after all views disposed\n\n    this._zr.dispose();\n\n    delete instances[this.id];\n  };\n  /**\n   * Resize the chart\n   */\n\n\n  ECharts.prototype.resize = function (opts) {\n    if (process.env.NODE_ENV !== 'production') {\n      assert(!this[IN_MAIN_PROCESS_KEY], '`resize` should not be called during main process.');\n    }\n\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._zr.resize(opts);\n\n    var ecModel = this._model; // Resize loading effect\n\n    this._loadingFX && this._loadingFX.resize();\n\n    if (!ecModel) {\n      return;\n    }\n\n    var optionChanged = ecModel.resetOption('media');\n    var silent = opts && opts.silent;\n    this[IN_MAIN_PROCESS_KEY] = true;\n    optionChanged && prepare(this);\n    updateMethods.update.call(this, {\n      type: 'resize',\n      animation: {\n        // Disable animation\n        duration: 0\n      }\n    });\n    this[IN_MAIN_PROCESS_KEY] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.showLoading = function (name, cfg) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (isObject(name)) {\n      cfg = name;\n      name = '';\n    }\n\n    name = name || 'default';\n    this.hideLoading();\n\n    if (!loadingEffects[name]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Loading effects ' + name + ' not exists.');\n      }\n\n      return;\n    }\n\n    var el = loadingEffects[name](this._api, cfg);\n    var zr = this._zr;\n    this._loadingFX = el;\n    zr.add(el);\n  };\n  /**\n   * Hide loading effect\n   */\n\n\n  ECharts.prototype.hideLoading = function () {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    this._loadingFX && this._zr.remove(this._loadingFX);\n    this._loadingFX = null;\n  };\n\n  ECharts.prototype.makeActionFromEvent = function (eventObj) {\n    var payload = zrUtil.extend({}, eventObj);\n    payload.type = eventActionMap[eventObj.type];\n    return payload;\n  };\n  /**\n   * @param opt If pass boolean, means opt.silent\n   * @param opt.silent Default `false`. Whether trigger events.\n   * @param opt.flush Default `undefined`.\n   *        true: Flush immediately, and then pixel in canvas can be fetched\n   *            immediately. Caution: it might affect performance.\n   *        false: Not flush.\n   *        undefined: Auto decide whether perform flush.\n   */\n\n\n  ECharts.prototype.dispatchAction = function (payload, opt) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    if (!isObject(opt)) {\n      opt = {\n        silent: !!opt\n      };\n    }\n\n    if (!actions[payload.type]) {\n      return;\n    } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n    if (!this._model) {\n      return;\n    } // May dispatchAction in rendering procedure\n\n\n    if (this[IN_MAIN_PROCESS_KEY]) {\n      this._pendingActions.push(payload);\n\n      return;\n    }\n\n    var silent = opt.silent;\n    doDispatchAction.call(this, payload, silent);\n    var flush = opt.flush;\n\n    if (flush) {\n      this._zr.flush();\n    } else if (flush !== false && env.browser.weChat) {\n      // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n      // hang when sliding page (on touch event), which cause that zr does not\n      // refresh util user interaction finished, which is not expected.\n      // But `dispatchAction` may be called too frequently when pan on touch\n      // screen, which impacts performance if do not throttle them.\n      this._throttledZrFlush();\n    }\n\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  };\n\n  ECharts.prototype.updateLabelLayout = function () {\n    var labelManager = this._labelManager;\n    labelManager.updateLayoutConfig(this._api);\n    labelManager.layout(this._api);\n    labelManager.processLabelsOverall();\n  };\n\n  ECharts.prototype.appendData = function (params) {\n    if (this._disposed) {\n      disposedWarning(this.id);\n      return;\n    }\n\n    var seriesIndex = params.seriesIndex;\n    var ecModel = this.getModel();\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (process.env.NODE_ENV !== 'production') {\n      assert(params.data && seriesModel);\n    }\n\n    seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n    // system, util some scenario require that. In the expected usage of\n    // `appendData`, the initial extent of coordinate system should better\n    // be fixed by axis `min`/`max` setting or initial data, otherwise if\n    // the extent changed while `appendData`, the location of the painted\n    // graphic elements have to be changed, which make the usage of\n    // `appendData` meaningless.\n\n    this._scheduler.unfinished = true;\n    this.getZr().wakeUp();\n  }; // A work around for no `internal` modifier in ts yet but\n  // need to strictly hide private methods to JS users.\n\n\n  ECharts.internalField = function () {\n    prepare = function (ecIns) {\n      var scheduler = ecIns._scheduler;\n      scheduler.restorePipelines(ecIns._model);\n      scheduler.prepareStageTasks();\n      prepareView(ecIns, true);\n      prepareView(ecIns, false);\n      scheduler.plan();\n    };\n    /**\n     * Prepare view instances of charts and components\n     */\n\n\n    prepareView = function (ecIns, isComponent) {\n      var ecModel = ecIns._model;\n      var scheduler = ecIns._scheduler;\n      var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n      var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n      var zr = ecIns._zr;\n      var api = ecIns._api;\n\n      for (var i = 0; i < viewList.length; i++) {\n        viewList[i].__alive = false;\n      }\n\n      isComponent ? ecModel.eachComponent(function (componentType, model) {\n        componentType !== 'series' && doPrepare(model);\n      }) : ecModel.eachSeries(doPrepare);\n\n      function doPrepare(model) {\n        // By defaut view will be reused if possible for the case that `setOption` with \"notMerge\"\n        // mode and need to enable transition animation. (Usually, when they have the same id, or\n        // especially no id but have the same type & name & index. See the `model.id` generation\n        // rule in `makeIdAndName` and `viewId` generation rule here).\n        // But in `replaceMerge` mode, this feature should be able to disabled when it is clear that\n        // the new model has nothing to do with the old model.\n        var requireNewView = model.__requireNewView; // This command should not work twice.\n\n        model.__requireNewView = false; // Consider: id same and type changed.\n\n        var viewId = '_ec_' + model.id + '_' + model.type;\n        var view = !requireNewView && viewMap[viewId];\n\n        if (!view) {\n          var classType = parseClassType(model.type);\n          var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : // FIXME:TS\n          // (ChartView as ChartViewConstructor).getClass('series', classType.sub)\n          // For backward compat, still support a chart type declared as only subType\n          // like \"liquidfill\", but recommend \"series.liquidfill\"\n          // But need a base class to make a type series.\n          ChartView.getClass(classType.sub);\n\n          if (process.env.NODE_ENV !== 'production') {\n            assert(Clazz, classType.sub + ' does not exist.');\n          }\n\n          view = new Clazz();\n          view.init(ecModel, api);\n          viewMap[viewId] = view;\n          viewList.push(view);\n          zr.add(view.group);\n        }\n\n        model.__viewId = view.__id = viewId;\n        view.__alive = true;\n        view.__model = model;\n        view.group.__ecComponentInfo = {\n          mainType: model.mainType,\n          index: model.componentIndex\n        };\n        !isComponent && scheduler.prepareView(view, model, ecModel, api);\n      }\n\n      for (var i = 0; i < viewList.length;) {\n        var view = viewList[i];\n\n        if (!view.__alive) {\n          !isComponent && view.renderTask.dispose();\n          zr.remove(view.group);\n          view.dispose(ecModel, api);\n          viewList.splice(i, 1);\n\n          if (viewMap[view.__id] === view) {\n            delete viewMap[view.__id];\n          }\n\n          view.__id = view.group.__ecComponentInfo = null;\n        } else {\n          i++;\n        }\n      }\n    };\n\n    updateDirectly = function (ecIns, method, payload, mainType, subType) {\n      var ecModel = ecIns._model;\n      ecModel.setUpdatePayload(payload); // broadcast\n\n      if (!mainType) {\n        // FIXME\n        // Chart will not be update directly here, except set dirty.\n        // But there is no such scenario now.\n        each([].concat(ecIns._componentsViews).concat(ecIns._chartsViews), callView);\n        return;\n      }\n\n      var query = {};\n      query[mainType + 'Id'] = payload[mainType + 'Id'];\n      query[mainType + 'Index'] = payload[mainType + 'Index'];\n      query[mainType + 'Name'] = payload[mainType + 'Name'];\n      var condition = {\n        mainType: mainType,\n        query: query\n      };\n      subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n      var excludeSeriesId = payload.excludeSeriesId;\n      var excludeSeriesIdMap;\n\n      if (excludeSeriesId != null) {\n        excludeSeriesIdMap = zrUtil.createHashMap();\n        each(modelUtil.normalizeToArray(excludeSeriesId), function (id) {\n          var modelId = modelUtil.convertOptionIdName(id, null);\n\n          if (modelId != null) {\n            excludeSeriesIdMap.set(modelId, true);\n          }\n        });\n      } // If dispatchAction before setOption, do nothing.\n\n\n      ecModel && ecModel.eachComponent(condition, function (model) {\n        if (!excludeSeriesIdMap || excludeSeriesIdMap.get(model.id) == null) {\n          if (isHighDownPayload(payload) && !payload.notBlur) {\n            if (model instanceof SeriesModel) {\n              toggleSeriesBlurStateFromPayload(model, payload, ecIns._api);\n            }\n          } else if (isSelectChangePayload(payload)) {\n            // TODO geo\n            if (model instanceof SeriesModel) {\n              toggleSelectionFromPayload(model, payload, ecIns._api);\n              updateSeriesElementSelection(model);\n              markStatusToUpdate(ecIns);\n            }\n          }\n\n          callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n        }\n      }, ecIns);\n\n      function callView(view) {\n        view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n      }\n    };\n\n    updateMethods = {\n      prepareAndUpdate: function (payload) {\n        prepare(this);\n        updateMethods.update.call(this, payload);\n      },\n      update: function (payload) {\n        // console.profile && console.profile('update');\n        var ecModel = this._model;\n        var api = this._api;\n        var zr = this._zr;\n        var coordSysMgr = this._coordSysMgr;\n        var scheduler = this._scheduler; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        scheduler.restoreData(ecModel, payload);\n        scheduler.performSeriesTasks(ecModel); // TODO\n        // Save total ecModel here for undo/redo (after restoring data and before processing data).\n        // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n        // Create new coordinate system each update\n        // In LineView may save the old coordinate system and use it to get the orignal point\n\n        coordSysMgr.create(ecModel, api);\n        scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n        // stream modes after data processing, where the filtered data is used to\n        // deteming whether use progressive rendering.\n\n        updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n        // can be fetched when coord sys updating (consider the barGrid extent fix). But\n        // the drawback is the full coord info can not be fetched. Fortunately this full\n        // coord is not requied in stream mode updater currently.\n\n        coordSysMgr.update(ecModel, api);\n        clearColorPalette(ecModel);\n        scheduler.performVisualTasks(ecModel, payload);\n        render(this, ecModel, api, payload); // Set background\n\n        var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n        var darkMode = ecModel.get('darkMode'); // In IE8\n\n        if (!env.canvasSupported) {\n          var colorArr = colorTool.parse(backgroundColor);\n          backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n          if (colorArr[3] === 0) {\n            backgroundColor = 'transparent';\n          }\n        } else {\n          zr.setBackgroundColor(backgroundColor); // Force set dark mode.\n\n          if (darkMode != null && darkMode !== 'auto') {\n            zr.setDarkMode(darkMode);\n          }\n        }\n\n        performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n      },\n      updateTransform: function (payload) {\n        var _this = this;\n\n        var ecModel = this._model;\n        var api = this._api; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n        var componentDirtyList = [];\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType === 'series') {\n            return;\n          }\n\n          var componentView = _this.getViewOfComponentModel(componentModel);\n\n          if (componentView && componentView.__alive) {\n            if (componentView.updateTransform) {\n              var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n              result && result.update && componentDirtyList.push(componentView);\n            } else {\n              componentDirtyList.push(componentView);\n            }\n          }\n        });\n        var seriesDirtyMap = zrUtil.createHashMap();\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n\n          if (chartView.updateTransform) {\n            var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n            result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n          } else {\n            seriesDirtyMap.set(seriesModel.uid, 1);\n          }\n        });\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n        // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true,\n          dirtyMap: seriesDirtyMap\n        }); // Currently, not call render of components. Geo render cost a lot.\n        // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n        renderSeries(this, ecModel, api, payload, seriesDirtyMap);\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateView: function (payload) {\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload);\n        ChartView.markUpdateMethod(payload, 'updateView');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          setDirty: true\n        });\n\n        render(this, this._model, this._api, payload);\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateVisual: function (payload) {\n        // updateMethods.update.call(this, payload);\n        var _this = this;\n\n        var ecModel = this._model; // update before setOption\n\n        if (!ecModel) {\n          return;\n        }\n\n        ecModel.setUpdatePayload(payload); // clear all visual\n\n        ecModel.eachSeries(function (seriesModel) {\n          seriesModel.getData().clearAllVisual();\n        }); // Perform visual\n\n        ChartView.markUpdateMethod(payload, 'updateVisual');\n        clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n        this._scheduler.performVisualTasks(ecModel, payload, {\n          visualType: 'visual',\n          setDirty: true\n        });\n\n        ecModel.eachComponent(function (componentType, componentModel) {\n          if (componentType !== 'series') {\n            var componentView = _this.getViewOfComponentModel(componentModel);\n\n            componentView && componentView.__alive && componentView.updateVisual(componentModel, ecModel, _this._api, payload);\n          }\n        });\n        ecModel.eachSeries(function (seriesModel) {\n          var chartView = _this._chartsMap[seriesModel.__viewId];\n          chartView.updateVisual(seriesModel, ecModel, _this._api, payload);\n        });\n        performPostUpdateFuncs(ecModel, this._api);\n      },\n      updateLayout: function (payload) {\n        updateMethods.update.call(this, payload);\n      }\n    };\n\n    doConvertPixel = function (ecIns, methodName, finder, value) {\n      if (ecIns._disposed) {\n        disposedWarning(ecIns.id);\n        return;\n      }\n\n      var ecModel = ecIns._model;\n\n      var coordSysList = ecIns._coordSysMgr.getCoordinateSystems();\n\n      var result;\n      var parsedFinder = modelUtil.parseFinder(ecModel, finder);\n\n      for (var i = 0; i < coordSysList.length; i++) {\n        var coordSys = coordSysList[i];\n\n        if (coordSys[methodName] && (result = coordSys[methodName](ecModel, parsedFinder, value)) != null) {\n          return result;\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('No coordinate system that supports ' + methodName + ' found by the given finder.');\n      }\n    };\n\n    updateStreamModes = function (ecIns, ecModel) {\n      var chartsMap = ecIns._chartsMap;\n      var scheduler = ecIns._scheduler;\n      ecModel.eachSeries(function (seriesModel) {\n        scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n      });\n    };\n\n    doDispatchAction = function (payload, silent) {\n      var _this = this;\n\n      var ecModel = this.getModel();\n      var payloadType = payload.type;\n      var escapeConnect = payload.escapeConnect;\n      var actionWrap = actions[payloadType];\n      var actionInfo = actionWrap.actionInfo;\n      var cptTypeTmp = (actionInfo.update || 'update').split(':');\n      var updateMethod = cptTypeTmp.pop();\n      var cptType = cptTypeTmp[0] != null && parseClassType(cptTypeTmp[0]);\n      this[IN_MAIN_PROCESS_KEY] = true;\n      var payloads = [payload];\n      var batched = false; // Batch action\n\n      if (payload.batch) {\n        batched = true;\n        payloads = zrUtil.map(payload.batch, function (item) {\n          item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n          item.batch = null;\n          return item;\n        });\n      }\n\n      var eventObjBatch = [];\n      var eventObj;\n      var isSelectChange = isSelectChangePayload(payload);\n      var isStatusChange = isHighDownPayload(payload) || isSelectChange;\n      each(payloads, function (batchItem) {\n        // Action can specify the event by return it.\n        eventObj = actionWrap.action(batchItem, _this._model, _this._api); // Emit event outside\n\n        eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n        eventObj.type = actionInfo.event || eventObj.type;\n        eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n        if (isStatusChange) {\n          // method, payload, mainType, subType\n          updateDirectly(_this, updateMethod, batchItem, 'series'); // Mark status to update\n\n          markStatusToUpdate(_this);\n        } else if (cptType) {\n          updateDirectly(_this, updateMethod, batchItem, cptType.main, cptType.sub);\n        }\n      });\n\n      if (updateMethod !== 'none' && !isStatusChange && !cptType) {\n        // Still dirty\n        if (this[OPTION_UPDATED_KEY]) {\n          prepare(this);\n          updateMethods.update.call(this, payload);\n          this[OPTION_UPDATED_KEY] = false;\n        } else {\n          updateMethods[updateMethod].call(this, payload);\n        }\n      } // Follow the rule of action batch\n\n\n      if (batched) {\n        eventObj = {\n          type: actionInfo.event || payloadType,\n          escapeConnect: escapeConnect,\n          batch: eventObjBatch\n        };\n      } else {\n        eventObj = eventObjBatch[0];\n      }\n\n      this[IN_MAIN_PROCESS_KEY] = false;\n\n      if (!silent) {\n        var messageCenter = this._messageCenter;\n        messageCenter.trigger(eventObj.type, eventObj); // Extra triggered 'selectchanged' event\n\n        if (isSelectChange) {\n          var newObj = {\n            type: 'selectchanged',\n            escapeConnect: escapeConnect,\n            selected: getAllSelectedIndices(ecModel),\n            isFromClick: payload.isFromClick || false,\n            fromAction: payload.type,\n            fromActionPayload: payload\n          };\n          messageCenter.trigger(newObj.type, newObj);\n        }\n      }\n    };\n\n    flushPendingActions = function (silent) {\n      var pendingActions = this._pendingActions;\n\n      while (pendingActions.length) {\n        var payload = pendingActions.shift();\n        doDispatchAction.call(this, payload, silent);\n      }\n    };\n\n    triggerUpdatedEvent = function (silent) {\n      !silent && this.trigger('updated');\n    };\n    /**\n     * Event `rendered` is triggered when zr\n     * rendered. It is useful for realtime\n     * snapshot (reflect animation).\n     *\n     * Event `finished` is triggered when:\n     * (1) zrender rendering finished.\n     * (2) initial animation finished.\n     * (3) progressive rendering finished.\n     * (4) no pending action.\n     * (5) no delayed setOption needs to be processed.\n     */\n\n\n    bindRenderedEvent = function (zr, ecIns) {\n      zr.on('rendered', function (params) {\n        ecIns.trigger('rendered', params); // The `finished` event should not be triggered repeatly,\n        // so it should only be triggered when rendering indeed happend\n        // in zrender. (Consider the case that dipatchAction is keep\n        // triggering when mouse move).\n\n        if ( // Although zr is dirty if initial animation is not finished\n        // and this checking is called on frame, we also check\n        // animation finished for robustness.\n        zr.animation.isFinished() && !ecIns[OPTION_UPDATED_KEY] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n          ecIns.trigger('finished');\n        }\n      });\n    };\n\n    bindMouseEvent = function (zr, ecIns) {\n      zr.on('mouseover', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          var ecData = getECData(dispatcher); // Try blur all in the related series. Then emphasis the hoverred.\n          // TODO. progressive mode.\n\n          toggleSeriesBlurState(ecData.seriesIndex, ecData.focus, ecData.blurScope, ecIns._api, true);\n          enterEmphasisWhenMouseOver(dispatcher, e);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('mouseout', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, isHighDownDispatcher);\n\n        if (dispatcher) {\n          var ecData = getECData(dispatcher);\n          toggleSeriesBlurState(ecData.seriesIndex, ecData.focus, ecData.blurScope, ecIns._api, false);\n          leaveEmphasisWhenMouseOut(dispatcher, e);\n          markStatusToUpdate(ecIns);\n        }\n      }).on('click', function (e) {\n        var el = e.target;\n        var dispatcher = findEventDispatcher(el, function (target) {\n          return getECData(target).dataIndex != null;\n        }, true);\n\n        if (dispatcher) {\n          var actionType = dispatcher.selected ? 'unselect' : 'select';\n          var ecData = getECData(dispatcher);\n\n          ecIns._api.dispatchAction({\n            type: actionType,\n            dataType: ecData.dataType,\n            dataIndexInside: ecData.dataIndex,\n            seriesIndex: ecData.seriesIndex,\n            isFromClick: true\n          });\n        }\n      });\n    };\n\n    clearColorPalette = function (ecModel) {\n      ecModel.clearColorPalette();\n      ecModel.eachSeries(function (seriesModel) {\n        seriesModel.clearColorPalette();\n      });\n    };\n\n    render = function (ecIns, ecModel, api, payload) {\n      renderComponents(ecIns, ecModel, api, payload);\n      each(ecIns._chartsViews, function (chart) {\n        chart.__alive = false;\n      });\n      renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n      each(ecIns._chartsViews, function (chart) {\n        if (!chart.__alive) {\n          chart.remove(ecModel, api);\n        }\n      });\n    };\n\n    renderComponents = function (ecIns, ecModel, api, payload, dirtyList) {\n      each(dirtyList || ecIns._componentsViews, function (componentView) {\n        var componentModel = componentView.__model;\n        clearStates(componentModel, componentView);\n        componentView.render(componentModel, ecModel, api, payload);\n        updateZ(componentModel, componentView);\n        updateStates(componentModel, componentView);\n      });\n    };\n    /**\n     * Render each chart and component\n     */\n\n\n    renderSeries = function (ecIns, ecModel, api, payload, dirtyMap) {\n      // Render all charts\n      var scheduler = ecIns._scheduler;\n      var labelManager = ecIns._labelManager;\n      labelManager.clearLabels();\n      var unfinished = false;\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId];\n        chartView.__alive = true;\n        var renderTask = chartView.renderTask;\n        scheduler.updatePayload(renderTask, payload); // TODO states on marker.\n\n        clearStates(seriesModel, chartView);\n\n        if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n          renderTask.dirty();\n        }\n\n        if (renderTask.perform(scheduler.getPerformArgs(renderTask))) {\n          unfinished = true;\n        }\n\n        seriesModel.__transientTransitionOpt = null;\n        chartView.group.silent = !!seriesModel.get('silent'); // Should not call markRedraw on group, because it will disable zrender\n        // increamental render (alway render from the __startIndex each frame)\n        // chartView.group.markRedraw();\n\n        updateBlend(seriesModel, chartView);\n        updateSeriesElementSelection(seriesModel); // Add labels.\n\n        labelManager.addLabelsOfSeries(chartView);\n      });\n      scheduler.unfinished = unfinished || scheduler.unfinished;\n      labelManager.updateLayoutConfig(api);\n      labelManager.layout(api);\n      labelManager.processLabelsOverall();\n      ecModel.eachSeries(function (seriesModel) {\n        var chartView = ecIns._chartsMap[seriesModel.__viewId]; // Update Z after labels updated. Before applying states.\n\n        updateZ(seriesModel, chartView); // NOTE: Update states after label is updated.\n        // label should be in normal status when layouting.\n\n        updateStates(seriesModel, chartView);\n      }); // If use hover layer\n\n      updateHoverLayerStatus(ecIns, ecModel);\n    };\n\n    performPostUpdateFuncs = function (ecModel, api) {\n      each(postUpdateFuncs, function (func) {\n        func(ecModel, api);\n      });\n    };\n\n    markStatusToUpdate = function (ecIns) {\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = true; // Wake up zrender if it's sleep. Let it update states in the next frame.\n\n      ecIns.getZr().wakeUp();\n    };\n\n    applyChangedStates = function (ecIns) {\n      if (!ecIns[STATUS_NEEDS_UPDATE_KEY]) {\n        return;\n      }\n\n      ecIns.getZr().storage.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        applyElementStates(el);\n      });\n      ecIns[STATUS_NEEDS_UPDATE_KEY] = false;\n    };\n\n    function applyElementStates(el) {\n      var newStates = [];\n      var oldStates = el.currentStates; // Keep other states.\n\n      for (var i = 0; i < oldStates.length; i++) {\n        var stateName = oldStates[i];\n\n        if (!(stateName === 'emphasis' || stateName === 'blur' || stateName === 'select')) {\n          newStates.push(stateName);\n        }\n      } // Only use states when it's exists.\n\n\n      if (el.selected && el.states.select) {\n        newStates.push('select');\n      }\n\n      if (el.hoverState === HOVER_STATE_EMPHASIS && el.states.emphasis) {\n        newStates.push('emphasis');\n      } else if (el.hoverState === HOVER_STATE_BLUR && el.states.blur) {\n        newStates.push('blur');\n      }\n\n      el.useStates(newStates);\n    }\n\n    function updateHoverLayerStatus(ecIns, ecModel) {\n      var zr = ecIns._zr;\n      var storage = zr.storage;\n      var elCount = 0;\n      storage.traverse(function (el) {\n        if (!el.isGroup) {\n          elCount++;\n        }\n      });\n\n      if (elCount > ecModel.get('hoverLayerThreshold') && !env.node && !env.worker) {\n        ecModel.eachSeries(function (seriesModel) {\n          if (seriesModel.preventUsingHoverLayer) {\n            return;\n          }\n\n          var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n          if (chartView.__alive) {\n            chartView.group.traverse(function (el) {\n              if (el.states.emphasis) {\n                el.states.emphasis.hoverLayer = true;\n              }\n            });\n          }\n        });\n      }\n    }\n\n    ;\n    /**\n     * Update chart and blend.\n     */\n\n    function updateBlend(seriesModel, chartView) {\n      var blendMode = seriesModel.get('blendMode') || null;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n          console.warn('Only canvas support blendMode');\n        }\n      }\n\n      chartView.group.traverse(function (el) {\n        // FIXME marker and other components\n        if (!el.isGroup) {\n          // DONT mark the element dirty. In case element is incremental and don't wan't to rerender.\n          el.style.blend = blendMode;\n        }\n\n        if (el.eachPendingDisplayable) {\n          el.eachPendingDisplayable(function (displayable) {\n            displayable.style.blend = blendMode;\n          });\n        }\n      });\n    }\n\n    ;\n\n    function updateZ(model, view) {\n      if (model.preventAutoZ) {\n        return;\n      }\n\n      var z = model.get('z');\n      var zlevel = model.get('zlevel'); // Set z and zlevel\n\n      view.group.traverse(function (el) {\n        if (!el.isGroup) {\n          z != null && (el.z = z);\n          zlevel != null && (el.zlevel = zlevel); // TODO if textContent is on group.\n\n          var label = el.getTextContent();\n          var labelLine = el.getTextGuideLine();\n\n          if (label) {\n            label.z = el.z;\n            label.zlevel = el.zlevel; // lift z2 of text content\n            // TODO if el.emphasis.z2 is spcefied, what about textContent.\n\n            label.z2 = el.z2 + 2;\n          }\n\n          if (labelLine) {\n            var showAbove = el.textGuideLineConfig && el.textGuideLineConfig.showAbove;\n            labelLine.z = el.z;\n            labelLine.zlevel = el.zlevel;\n            labelLine.z2 = el.z2 + (showAbove ? 1 : -1);\n          }\n        }\n      });\n    }\n\n    ; // Clear states without animation.\n    // TODO States on component.\n\n    function clearStates(model, view) {\n      view.group.traverse(function (el) {\n        // Not applied on removed elements, it may still in fading.\n        if (graphic.isElementRemoved(el)) {\n          return;\n        }\n\n        var textContent = el.getTextContent();\n        var textGuide = el.getTextGuideLine();\n\n        if (el.stateTransition) {\n          el.stateTransition = null;\n        }\n\n        if (textContent && textContent.stateTransition) {\n          textContent.stateTransition = null;\n        }\n\n        if (textGuide && textGuide.stateTransition) {\n          textGuide.stateTransition = null;\n        } // TODO If el is incremental.\n\n\n        if (el.hasState()) {\n          el.prevStates = el.currentStates;\n          el.clearStates();\n        } else if (el.prevStates) {\n          el.prevStates = null;\n        }\n      });\n    }\n\n    function updateStates(model, view) {\n      var stateAnimationModel = model.getModel('stateAnimation');\n      var enableAnimation = model.isAnimationEnabled();\n      var duration = stateAnimationModel.get('duration');\n      var stateTransition = duration > 0 ? {\n        duration: duration,\n        delay: stateAnimationModel.get('delay'),\n        easing: stateAnimationModel.get('easing') // additive: stateAnimationModel.get('additive')\n\n      } : null;\n      view.group.traverse(function (el) {\n        if (el.states && el.states.emphasis) {\n          // Not applied on removed elements, it may still in fading.\n          if (graphic.isElementRemoved(el)) {\n            return;\n          }\n\n          if (el instanceof graphic.Path) {\n            savePathStates(el);\n          } // Only updated on changed element. In case element is incremental and don't wan't to rerender.\n          // TODO, a more proper way?\n\n\n          if (el.__dirty) {\n            var prevStates = el.prevStates; // Restore states without animation\n\n            if (prevStates) {\n              el.useStates(prevStates);\n            }\n          } // Update state transition and enable animation again.\n\n\n          if (enableAnimation) {\n            el.stateTransition = stateTransition;\n            var textContent = el.getTextContent();\n            var textGuide = el.getTextGuideLine(); // TODO Is it necessary to animate label?\n\n            if (textContent) {\n              textContent.stateTransition = stateTransition;\n            }\n\n            if (textGuide) {\n              textGuide.stateTransition = stateTransition;\n            }\n          } // The use higlighted and selected flag to toggle states.\n\n\n          if (el.__dirty) {\n            applyElementStates(el);\n          }\n        }\n      });\n    }\n\n    ;\n\n    createExtensionAPI = function (ecIns) {\n      return new (\n      /** @class */\n      function (_super) {\n        __extends(class_1, _super);\n\n        function class_1() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        class_1.prototype.getCoordinateSystems = function () {\n          return ecIns._coordSysMgr.getCoordinateSystems();\n        };\n\n        class_1.prototype.getComponentByElement = function (el) {\n          while (el) {\n            var modelInfo = el.__ecComponentInfo;\n\n            if (modelInfo != null) {\n              return ecIns._model.getComponent(modelInfo.mainType, modelInfo.index);\n            }\n\n            el = el.parent;\n          }\n        };\n\n        class_1.prototype.enterEmphasis = function (el, highlightDigit) {\n          enterEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveEmphasis = function (el, highlightDigit) {\n          leaveEmphasis(el, highlightDigit);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterBlur = function (el) {\n          enterBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveBlur = function (el) {\n          leaveBlur(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.enterSelect = function (el) {\n          enterSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.leaveSelect = function (el) {\n          leaveSelect(el);\n          markStatusToUpdate(ecIns);\n        };\n\n        class_1.prototype.getModel = function () {\n          return ecIns.getModel();\n        };\n\n        class_1.prototype.getViewOfComponentModel = function (componentModel) {\n          return ecIns.getViewOfComponentModel(componentModel);\n        };\n\n        class_1.prototype.getViewOfSeriesModel = function (seriesModel) {\n          return ecIns.getViewOfSeriesModel(seriesModel);\n        };\n\n        return class_1;\n      }(ExtensionAPI))(ecIns);\n    };\n\n    enableConnect = function (chart) {\n      function updateConnectedChartsStatus(charts, status) {\n        for (var i = 0; i < charts.length; i++) {\n          var otherChart = charts[i];\n          otherChart[CONNECT_STATUS_KEY] = status;\n        }\n      }\n\n      each(eventActionMap, function (actionType, eventType) {\n        chart._messageCenter.on(eventType, function (event) {\n          if (connectedGroups[chart.group] && chart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_PENDING) {\n            if (event && event.escapeConnect) {\n              return;\n            }\n\n            var action_1 = chart.makeActionFromEvent(event);\n            var otherCharts_1 = [];\n            each(instances, function (otherChart) {\n              if (otherChart !== chart && otherChart.group === chart.group) {\n                otherCharts_1.push(otherChart);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_PENDING);\n            each(otherCharts_1, function (otherChart) {\n              if (otherChart[CONNECT_STATUS_KEY] !== CONNECT_STATUS_UPDATING) {\n                otherChart.dispatchAction(action_1);\n              }\n            });\n            updateConnectedChartsStatus(otherCharts_1, CONNECT_STATUS_UPDATED);\n          }\n        });\n      });\n    };\n\n    setTransitionOpt = function (chart, transitionOpt) {\n      var ecModel = chart._model;\n      zrUtil.each(modelUtil.normalizeToArray(transitionOpt), function (transOpt) {\n        var errMsg;\n        var fromOpt = transOpt.from;\n        var toOpt = transOpt.to;\n\n        if (toOpt == null) {\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition.to` must be specified.';\n          }\n\n          throwError(errMsg);\n        }\n\n        var finderOpt = {\n          includeMainTypes: ['series'],\n          enableAll: false,\n          enableNone: false\n        };\n        var fromResult = fromOpt ? modelUtil.parseFinder(ecModel, fromOpt, finderOpt) : null;\n        var toResult = modelUtil.parseFinder(ecModel, toOpt, finderOpt);\n        var toSeries = toResult.seriesModel;\n\n        if (toSeries == null) {\n          errMsg = '';\n\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition` is only supported on series.';\n          }\n        }\n\n        if (fromResult && fromResult.seriesModel !== toSeries) {\n          errMsg = '';\n\n          if (process.env.NODE_ENV !== 'production') {\n            errMsg = '`transition.from` and `transition.to` must be specified to the same series.';\n          }\n        }\n\n        if (errMsg != null) {\n          throwError(errMsg);\n        } // Just a temp solution: mount them on series.\n\n\n        toSeries.__transientTransitionOpt = {\n          from: fromOpt ? fromOpt.dimension : null,\n          to: toOpt.dimension,\n          dividingMethod: transOpt.dividingMethod\n        };\n      });\n    };\n  }();\n\n  return ECharts;\n}(Eventful);\n\nvar echartsProto = ECharts.prototype;\nechartsProto.on = createRegisterEventWithLowercaseECharts('on');\nechartsProto.off = createRegisterEventWithLowercaseECharts('off');\n/**\n * @deprecated\n */\n// @ts-ignore\n\nechartsProto.one = function (eventName, cb, ctx) {\n  var self = this;\n  deprecateLog('ECharts#one is deprecated.');\n\n  function wrapped() {\n    var args2 = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args2[_i] = arguments[_i];\n    }\n\n    cb && cb.apply && cb.apply(this, args2); // @ts-ignore\n\n    self.off(eventName, wrapped);\n  }\n\n  ; // @ts-ignore\n\n  this.on.call(this, eventName, wrapped, ctx);\n}; // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         let isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n\nfunction disposedWarning(id) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn('Instance ' + id + ' has been disposed');\n  }\n}\n\nvar actions = {};\n/**\n * Map eventType to actionType\n */\n\nvar eventActionMap = {};\nvar dataProcessorFuncs = [];\nvar optionPreprocessorFuncs = [];\nvar postInitFuncs = [];\nvar postUpdateFuncs = [];\nvar visualFuncs = [];\nvar themeStorage = {};\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = +new Date() - 0;\nvar groupIdBase = +new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n/**\n * @param opts.devicePixelRatio Use window.devicePixelRatio by default\n * @param opts.renderer Can choose 'canvas' or 'svg' to render the chart.\n * @param opts.width Use clientWidth of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n * @param opts.height Use clientHeight of the input `dom` by default.\n *        Can be 'auto' (the same as null/undefined)\n */\n\nexport function init(dom, theme, opts) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!dom) {\n      throw new Error('Initialize failed: invalid dom.');\n    }\n  }\n\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('There is a chart instance already initialized on the dom.');\n    }\n\n    return existInstance;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth && (!opts || opts.width == null) || !dom.clientHeight && (!opts || opts.height == null))) {\n      console.warn('Can\\'t get DOM width or height. Please check ' + 'dom.clientWidth and dom.clientHeight. They should not be 0.' + 'For example, you may need to call this in the callback ' + 'of window.onload.');\n    }\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  each(postInitFuncs, function (postInitFunc) {\n    postInitFunc(chart);\n  });\n  return chart;\n}\n/**\n * @usage\n * (A)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * chart1.group = 'xxx';\n * chart2.group = 'xxx';\n * echarts.connect('xxx');\n * ```\n * (B)\n * ```js\n * let chart1 = echarts.init(dom1);\n * let chart2 = echarts.init(dom2);\n * echarts.connect('xxx', [chart1, chart2]);\n * ```\n */\n\nexport function connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @deprecated\n */\n\nexport function disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * Alias and backword compat\n */\n\nexport var disconnect = disConnect;\n/**\n * Dispose a chart instance\n */\n\nexport function dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\nexport function getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\nexport function getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\nexport function registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n */\n\nexport function registerPreprocessor(preprocessorFunc) {\n  if (indexOf(optionPreprocessorFuncs, preprocessorFunc) < 0) {\n    optionPreprocessorFuncs.push(preprocessorFunc);\n  }\n}\nexport function registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_DEFAULT);\n}\n/**\n * Register postIniter\n * @param {Function} postInitFunc\n */\n\nexport function registerPostInit(postInitFunc) {\n  if (indexOf(postInitFuncs, postInitFunc) < 0) {\n    postInitFunc && postInitFuncs.push(postInitFunc);\n  }\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\nexport function registerPostUpdate(postUpdateFunc) {\n  if (indexOf(postUpdateFuncs, postUpdateFunc) < 0) {\n    postUpdateFunc && postUpdateFuncs.push(postUpdateFunc);\n  }\n}\nexport function registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event;\n\n  if (eventActionMap[eventName]) {\n    // Already registered.\n    return;\n  } // Validate action type and event name.\n\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\nexport function registerCoordinateSystem(type, coordSysCreator) {\n  CoordinateSystemManager.register(type, coordSysCreator);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\nexport function getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\nexport { registerLocale } from './locale';\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n\nexport { registerLayout, registerVisual };\nvar registeredTasks = [];\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isNaN(priority) || priority == null) {\n      throw new Error('Illegal priority');\n    } // Check duplicate\n\n\n    each(targetList, function (wrap) {\n      assert(wrap.__raw !== fn);\n    });\n  } // Already registered\n\n\n  if (indexOf(registeredTasks, fn) >= 0) {\n    return;\n  }\n\n  registeredTasks.push(fn);\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n}\n\nexport function registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @example\n *     let Canvas = require('canvas');\n *     let echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\nexport function setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * The parameters and usage: see `mapDataStorage.registerMap`.\n * Compatible with previous `echarts.registerMap`.\n */\n\nexport function registerMap(mapName, geoJson, specialAreas) {\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\n}\nexport function getMap(mapName) {\n  // For backward compatibility, only return the first one.\n  var records = mapDataStorage.retrieveMap(mapName); // FIXME support SVG, where return not only records[0].\n\n  return records && records[0] && {\n    // @ts-ignore\n    geoJson: records[0].geoJSON,\n    specialAreas: records[0].specialAreas\n  };\n}\nexport var registerTransform = registerExternalTransform;\n/**\n * Globa dispatchAction to a specified chart instance.\n */\n// export function dispatchAction(payload: { chartId: string } & Payload, opt?: Parameters<ECharts['dispatchAction']>[1]) {\n//     if (!payload || !payload.chartId) {\n//         // Must have chartId to find chart\n//         return;\n//     }\n//     const chart = instances[payload.chartId];\n//     if (chart) {\n//         chart.dispatchAction(payload, opt);\n//     }\n// }\n// Buitlin global visual\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataStyleTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataColorPaletteTask);\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesSymbolTask);\nregisterVisual(PRIORITY_VISUAL_CHART_DATA_CUSTOM, dataSymbolTask);\nregisterVisual(PRIORITY_VISUAL_DECAL, decal);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: HIGHLIGHT_ACTION_TYPE,\n  event: HIGHLIGHT_ACTION_TYPE,\n  update: HIGHLIGHT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: DOWNPLAY_ACTION_TYPE,\n  event: DOWNPLAY_ACTION_TYPE,\n  update: DOWNPLAY_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: SELECT_ACTION_TYPE,\n  event: SELECT_ACTION_TYPE,\n  update: SELECT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: UNSELECT_ACTION_TYPE,\n  event: UNSELECT_ACTION_TYPE,\n  update: UNSELECT_ACTION_TYPE\n}, zrUtil.noop);\nregisterAction({\n  type: TOGGLE_SELECT_ACTION_TYPE,\n  event: TOGGLE_SELECT_ACTION_TYPE,\n  update: TOGGLE_SELECT_ACTION_TYPE\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nexport var dataTool = {};"]},"metadata":{},"sourceType":"module"}