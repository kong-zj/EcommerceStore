{"ast":null,"code":"import \"antd/es/timeline/style\";\nimport _Timeline from \"antd/es/timeline\";\nimport \"antd/es/empty/style\";\nimport _Empty from \"antd/es/empty\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nvar _jsxFileName = \"/home/kzj/project/finalize/B-S-/\\u6E90\\u7801/react_code/src/pages/queryMessage/index.jsx\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport { CheckCircleOutlined, StopOutlined } from \"@ant-design/icons\";\nimport OnlineChart from \"../../components/OnlineChart\";\nimport CityChart from \"../../components/CityChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = _DatePicker;\nconst {\n  Option\n} = _Select;\n\nclass queryMessages extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deviceArray: [],\n      messages: {},\n      targetDevice: '',\n      startTime: '',\n      endTime: '',\n      isFirst: true,\n      onlineTimeInterval: {},\n      onlineTimePoint: {},\n      cities: {},\n      isLoading: true,\n      isEmpty: true\n    };\n\n    this.handleDeviceChange = value => {\n      console.log(`selected ${value}`);\n      this.setState({\n        targetDevice: value,\n        isFirst: false\n      });\n    };\n\n    this.onChange = (value, dateString) => {\n      console.log('Selected Time: ', value);\n      console.log('Formatted Selected Time: ', dateString);\n      console.log(new Date(dateString[0]).getTime());\n\n      if (dateString[0] !== undefined) {\n        this.setState({\n          startTime: new Date(dateString[0]).getTime(),\n          isFirst: false\n        });\n      }\n\n      if (dateString[1] !== undefined) {\n        this.setState({\n          endTime: new Date(dateString[1]).getTime(),\n          isFirst: false\n        });\n      }\n\n      const {\n        messages,\n        targetDevice\n      } = this.state;\n\n      if (dateString[0] !== undefined && dateString[1] !== undefined) {\n        const data = messages[targetDevice];\n        let flag = 0;\n        data.forEach(item => {\n          if (item.timestamp >= dateString[0] && item.timestamp <= dateString[1]) {\n            flag = 1;\n          }\n        });\n        if (flag) this.setState({\n          isEmpty: false\n        }, () => {\n          console.log(this.state.isEmpty);\n        });\n      }\n    };\n\n    this.onOk = value => {\n      console.log('onOk: ', value);\n      const {\n        messages,\n        targetDevice\n      } = this.state;\n      let flag = 0;\n\n      if (value[0] !== undefined && value[1] !== undefined) {\n        const data = messages[targetDevice];\n        data.forEach(item => {\n          if (item.timestamp >= value[0] && item.timestamp <= value[1]) {\n            flag = 1;\n          }\n        });\n      }\n\n      if (flag) this.setState({\n        isEmpty: false\n      }, () => {\n        console.log(this.state.isEmpty);\n      });\n    };\n\n    this.getTypeColor = number => {\n      if (number === 0 || number === 2) return 'green';\n      if (number === 1 || number === 3) return 'red';\n    };\n\n    this.getTypeAvatar = number => {\n      if (number === 2) return /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n        style: {\n          fontSize: '18px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 33\n      }, this);\n      if (number === 3) return /*#__PURE__*/_jsxDEV(StopOutlined, {\n        style: {\n          fontSize: '18px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }, this);\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data\n    } = await axios.post(\"/getPersonalInfo\", {\n      username: cookie.load('username')\n    });\n\n    if (data.code === \"success\") {\n      let array = data.deviceArray.map((item, index) => {\n        return {\n          key: index + 1,\n          deviceName: item.deviceName,\n          deviceID: item.deviceID,\n          deviceStatus: item.isOnline\n        };\n      });\n      this.setState({\n        deviceArray: array,\n        targetDevice: array.length > 0 ? array[0].deviceID : ''\n      });\n      let length = array.length;\n      let messages = {};\n      let timeInterval = {};\n      let point = {};\n      let city = {};\n\n      for (let i = 0; i < length; i++) {\n        let onlineTime = [];\n        let onlineTimePoint = [];\n        let start = 0;\n        let online = '';\n        let cities = {};\n        let messageArray = [];\n        const deviceID = array[i].deviceID;\n        let data1 = (await axios.post('/getDeviceInfo', {\n          deviceID: deviceID\n        })).data;\n        const message = data1.deviceMessage;\n\n        if (data1.status === 'failed') {\n          message.warning(\"获取设备信息失败\");\n        } else if (data1.status === 'notExist') {\n          message.warning('设备不存在');\n        } else {\n          for (let j = 0, len2 = message.length; j < len2; j++) {\n            const obj = JSON.parse(message[j].content);\n\n            if (obj.alert === 2) {\n              start = obj.timestamp;\n              online = new Date(parseInt(start)).toLocaleDateString();\n            }\n\n            if (obj.alert === 3) {\n              if (start !== 0) {\n                onlineTime = [...onlineTime, ((obj.timestamp - start) / (1000 * 60)).toFixed(2)];\n                onlineTimePoint = [...onlineTimePoint, online];\n              }\n            }\n\n            let infoItem = {\n              key: message[j].messageID,\n              messageID: message[j].messageID,\n              messageType: obj.alert,\n              messageContent: obj.info,\n              lat: obj.lat,\n              lng: obj.lng,\n              timestamp: obj.timestamp,\n              time: new Date(parseInt(obj.timestamp)).toLocaleDateString() + ' ' + new Date(parseInt(obj.timestamp)).toLocaleTimeString(),\n              location: \"\"\n            };\n\n            if (obj.lat !== undefined && obj.lng !== undefined) {\n              let data2 = (await axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n                                    \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)).data; // console.log(data2);\n\n              infoItem.location = data2.regeocode.addressComponent.city;\n\n              if (cities[infoItem.location] === undefined && infoItem.location !== \"\") {\n                cities[infoItem.location] = {\n                  value: 0,\n                  name: infoItem.location\n                };\n              } else if (cities[infoItem.location] !== undefined) {\n                cities[infoItem.location].value++;\n              }\n            }\n\n            messageArray = [...messageArray, infoItem];\n          }\n\n          messages[deviceID] = messageArray;\n          timeInterval[deviceID] = onlineTime;\n          point[deviceID] = onlineTimePoint;\n          city[deviceID] = Object.values(cities);\n        }\n      }\n\n      this.setState({\n        messages: messages,\n        onlineTimeInterval: timeInterval,\n        onlineTimePoint: point,\n        cities: city,\n        isLoading: false\n      });\n    } else {\n      _message.warning(\"获取个人信息出错\").then(r => console.log(r));\n    }\n  }\n\n  render() {\n    const {\n      deviceArray,\n      messages,\n      targetDevice,\n      startTime,\n      endTime,\n      isFirst\n    } = this.state;\n    return this.state.deviceArray.length === 0 ? /*#__PURE__*/_jsxDEV(_Table, {\n      columns: [{\n        title: '您还未绑定设备'\n      }],\n      dataSource: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 51\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"queryShow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chooseDevice\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(_Card, {\n            title: \"\\u9009\\u62E9\\u8BBE\\u5907\",\n            bordered: false,\n            style: {\n              width: 300\n            },\n            children: /*#__PURE__*/_jsxDEV(_Select, {\n              defaultValue: deviceArray[0].deviceName,\n              style: {\n                width: 150\n              },\n              onChange: this.handleDeviceChange,\n              children: deviceArray.map(item => /*#__PURE__*/_jsxDEV(Option, {\n                value: item.deviceID,\n                children: item.deviceName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 58\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(_Card, {\n            title: \"\\u9009\\u62E9\\u65F6\\u95F4\\u8303\\u56F4\",\n            bordered: false,\n            style: {\n              width: 600\n            },\n            children: /*#__PURE__*/_jsxDEV(_Space, {\n              direction: \"vertical\",\n              size: 12,\n              children: /*#__PURE__*/_jsxDEV(RangePicker, {\n                showTime: {\n                  format: 'HH:mm'\n                },\n                format: \"YYYY-MM-DD HH:mm\",\n                onChange: this.onChange,\n                onOk: this.onOk\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '500px',\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(_Card, {\n          title: \"\\u65F6\\u957F\\u7EDF\\u8BA1\\u56FE\",\n          bordered: false,\n          style: {\n            width: '47%'\n          },\n          children: [this.state.isLoading ? /*#__PURE__*/_jsxDEV(_Spin, {\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 45\n          }, this) : '', /*#__PURE__*/_jsxDEV(OnlineChart, {\n            data: this.state.onlineTimeInterval[targetDevice],\n            onlineTimePoint: this.state.onlineTimePoint[targetDevice]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(_Card, {\n          title: \"\\u6D88\\u606F\\u4F4D\\u7F6E\\u7EDF\\u8BA1\\u56FE\",\n          bordered: false,\n          style: {\n            width: '47%'\n          },\n          children: [this.state.isLoading ? /*#__PURE__*/_jsxDEV(_Spin, {\n            size: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 45\n          }, this) : '', /*#__PURE__*/_jsxDEV(CityChart, {\n            data: this.state.cities[targetDevice],\n            device: targetDevice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"myTimeline\",\n        children: /*#__PURE__*/_jsxDEV(_Card, {\n          title: \"\\u8BBE\\u5907\\u4FE1\\u606F\\u65F6\\u95F4\\u8F74\",\n          bordered: false,\n          style: {\n            width: '100%'\n          },\n          children: [this.state.isEmpty ? /*#__PURE__*/_jsxDEV(_Empty, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 43\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(_Timeline, {\n            mode: \"right\",\n            style: {\n              marginTop: '20px'\n            },\n            children: messages[targetDevice] === undefined ? \"\" : messages[targetDevice].map((item, index) => {\n              if (isFirst) {\n                if (index >= 15) return \"\";\n              } else {\n                if (item.timestamp >= startTime && item.timestamp <= endTime) {\n                  return /*#__PURE__*/_jsxDEV(_Timeline.Item, {\n                    dot: this.getTypeAvatar(item.messageType),\n                    color: this.getTypeColor(item.messageType),\n                    label: item.time,\n                    children: [item.location, item.location === '' ? '' : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 93\n                    }, this), item.messageContent]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 53\n                  }, this);\n                } else return \"\";\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default queryMessages;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/src/pages/queryMessage/index.jsx"],"names":["React","Component","axios","cookie","CheckCircleOutlined","StopOutlined","OnlineChart","CityChart","RangePicker","Option","queryMessages","state","deviceArray","messages","targetDevice","startTime","endTime","isFirst","onlineTimeInterval","onlineTimePoint","cities","isLoading","isEmpty","handleDeviceChange","value","console","log","setState","onChange","dateString","Date","getTime","undefined","data","flag","forEach","item","timestamp","onOk","getTypeColor","number","getTypeAvatar","fontSize","componentDidMount","post","username","load","code","array","map","index","key","deviceName","deviceID","deviceStatus","isOnline","length","timeInterval","point","city","i","onlineTime","start","online","messageArray","data1","message","deviceMessage","status","warning","j","len2","obj","JSON","parse","content","alert","parseInt","toLocaleDateString","toFixed","infoItem","messageID","messageType","messageContent","info","lat","lng","time","toLocaleTimeString","location","data2","get","regeocode","addressComponent","name","Object","values","then","r","render","title","width","format","height","display","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {message, Timeline, Select, Table, Empty} from 'antd';\nimport './index.css'\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport { DatePicker, Space, Spin } from 'antd';\nimport {CheckCircleOutlined, StopOutlined} from \"@ant-design/icons\";\nimport { Card } from 'antd';\nimport OnlineChart from \"../../components/OnlineChart\";\nimport CityChart from \"../../components/CityChart\";\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nclass queryMessages extends Component {\n\n    state = {deviceArray:[], messages:{}, targetDevice:'', startTime:'', endTime:'', isFirst:true, onlineTimeInterval:{},\n            onlineTimePoint:{}, cities:{}, isLoading:true, isEmpty:true}\n\n    handleDeviceChange = value => {\n        console.log(`selected ${value}`);\n        this.setState({targetDevice:value, isFirst: false});\n    }\n\n    onChange = (value, dateString) => {\n        console.log('Selected Time: ', value);\n        console.log('Formatted Selected Time: ', dateString);\n        console.log(new Date(dateString[0]).getTime())\n        if(dateString[0] !== undefined){\n            this.setState({startTime:new Date(dateString[0]).getTime(), isFirst: false});\n        }\n        if(dateString[1] !== undefined){\n            this.setState({endTime:new Date(dateString[1]).getTime(), isFirst: false});\n        }\n        const {messages, targetDevice} = this.state;\n        if(dateString[0] !== undefined && dateString[1] !== undefined){\n            const data = messages[targetDevice];\n            let flag = 0;\n            data.forEach(item => {\n                if (item.timestamp >= dateString[0] && item.timestamp <= dateString[1]){\n                    flag = 1;\n                }\n            })\n            if(flag) this.setState({isEmpty: false}, () => {console.log(this.state.isEmpty)});\n        }\n    }\n\n    onOk = (value) => {\n        console.log('onOk: ', value);\n        const {messages, targetDevice} = this.state;\n        let flag = 0;\n        if(value[0] !== undefined && value[1] !== undefined){\n            const data = messages[targetDevice];\n            data.forEach(item => {\n                if (item.timestamp >= value[0] && item.timestamp <= value[1]){\n                    flag = 1;\n                }\n            })\n        }\n        if(flag) this.setState({isEmpty: false}, () => {console.log(this.state.isEmpty)});\n    }\n\n    async componentDidMount () {\n        const {data} = await axios.post(\"/getPersonalInfo\", {\n            username:cookie.load('username')\n        });\n        if(data.code === \"success\"){\n            let array = data.deviceArray.map((item, index) => {\n                return {\n                    key: index + 1,\n                    deviceName: item.deviceName,\n                    deviceID: item.deviceID,\n                    deviceStatus: item.isOnline\n                }\n            });\n            this.setState({deviceArray:array, targetDevice:array.length > 0 ? array[0].deviceID:''});\n            let length = array.length;\n            let messages = {};\n            let timeInterval = {};\n            let point = {};\n            let city = {};\n\n            for(let i = 0;i < length; i++){\n                let onlineTime = [];\n                let onlineTimePoint = [];\n                let start = 0;\n                let online = '';\n                let cities = {};\n                let messageArray = [];\n                const deviceID = array[i].deviceID;\n                let data1 = (await axios.post ('/getDeviceInfo', {\n                    deviceID: deviceID\n                })).data;\n                const message = data1.deviceMessage;\n                if(data1.status === 'failed'){\n                    message.warning(\"获取设备信息失败\")\n                }\n                else if(data1.status === 'notExist'){\n                    message.warning('设备不存在')\n                }\n                else{\n                    for(let j = 0, len2 = message.length; j < len2; j++){\n                        const obj = JSON.parse(message[j].content);\n                        if(obj.alert === 2){\n                            start = obj.timestamp;\n                            online = new Date(parseInt(start)).toLocaleDateString();\n                        }\n                        if(obj.alert === 3){\n                            if(start !== 0){\n                                onlineTime = [...onlineTime, ((obj.timestamp - start) / (1000 * 60)).toFixed(2)];\n                                onlineTimePoint = [...onlineTimePoint, online];\n                            }\n                        }\n                        let infoItem = {\n                            key: message[j].messageID,\n                            messageID: message[j].messageID,\n                            messageType: obj.alert,\n                            messageContent: obj.info,\n                            lat:obj.lat,\n                            lng:obj.lng,\n                            timestamp:obj.timestamp,\n                            time:(new Date(parseInt(obj.timestamp))).toLocaleDateString() + ' '+ (new Date(parseInt(obj.timestamp))).toLocaleTimeString(),\n                            location: \"\"\n                        }\n                        if(obj.lat !== undefined && obj.lng !== undefined) {\n                            let data2 = (await axios.get (`https://restapi.amap.com/v3/geocode/regeo?\" +\n                                    \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)).data;\n                            // console.log(data2);\n                            infoItem.location = data2.regeocode.addressComponent.city;\n                            if(cities[infoItem.location] === undefined && infoItem.location !== \"\"){\n                                cities[infoItem.location] = {value:0, name:infoItem.location};\n                            }\n                            else if(cities[infoItem.location] !== undefined){\n                                cities[infoItem.location].value++;\n                            }\n                        }\n                        messageArray = [...messageArray, infoItem];\n                    }\n                    messages[deviceID] = messageArray;\n                    timeInterval[deviceID] = onlineTime;\n                    point[deviceID] = onlineTimePoint;\n                    city[deviceID] = Object.values(cities);\n                }\n            }\n            this.setState({messages:messages, onlineTimeInterval:timeInterval,onlineTimePoint:point, cities:city, isLoading:false});\n        }\n        else{\n            message.warning (\"获取个人信息出错\").then (r  => console.log(r));\n        }\n    }\n\n    getTypeColor = number => {\n        if(number === 0 || number === 2) return 'green';\n        if(number === 1 || number === 3) return 'red';\n\n    }\n    getTypeAvatar = number => {\n        if(number === 2) return <CheckCircleOutlined style={{ fontSize: '18px' }}/>;\n        if(number === 3) return <StopOutlined style={{ fontSize: '18px' }}/>;\n    }\n\n    render () {\n        const {deviceArray, messages, targetDevice, startTime, endTime, isFirst} = this.state;\n        return (\n            this.state.deviceArray.length === 0 ? <Table columns={[\n                    {\n                        title: '您还未绑定设备'\n                    }\n                ]} dataSource={[]} /> :\n                <div id={\"queryShow\"}>\n            <div id=\"chooseDevice\">\n                <div>\n                    <Card title=\"选择设备\" bordered={false} style={{ width: 300 }}>\n                        <Select defaultValue={deviceArray[0].deviceName} style={{ width: 150 }} onChange={this.handleDeviceChange}>\n                            {\n                                deviceArray.map((item => <Option value={item.deviceID}>{item.deviceName}</Option>))\n                            }\n                        </Select>\n                    </Card>\n                </div>\n                <div>\n                    <Card title=\"选择时间范围\" bordered={false} style={{ width: 600 }}>\n                        <Space direction=\"vertical\" size={12}>\n                            <RangePicker\n                                showTime={{ format: 'HH:mm' }}\n                                format=\"YYYY-MM-DD HH:mm\"\n                                onChange={this.onChange}\n                                onOk={this.onOk}\n                            />\n                        </Space>\n                    </Card>\n                </div>\n            </div>\n            <div style={{height:'500px', display:'flex', justifyContent:'space-between'}}>\n                <Card title=\"时长统计图\" bordered={false} style={{ width: '47%' }}>\n                    {this.state.isLoading ? <Spin size=\"large\" /> : ''}\n                    <OnlineChart data={this.state.onlineTimeInterval[targetDevice]} onlineTimePoint={this.state.onlineTimePoint[targetDevice]}/>\n                </Card>\n                <Card title=\"消息位置统计图\" bordered={false} style={{ width: '47%' }}>\n                    {this.state.isLoading ? <Spin size=\"large\" /> : ''}\n                    <CityChart data={this.state.cities[targetDevice]} device={targetDevice}/>\n                </Card>\n            </div>\n            <div id=\"myTimeline\">\n                <Card title=\"设备信息时间轴\" bordered={false} style={{ width: '100%' }}>\n                    {this.state.isEmpty ? <Empty/> : <div/>}\n                    <Timeline mode={\"right\"} style={{marginTop:'20px'}}>\n                        {\n                            messages[targetDevice] === undefined ? \"\" : messages[targetDevice].map((item, index) => {\n                                    if(isFirst){\n                                        if(index >= 15) return \"\"\n                                    }\n                                    else{\n                                        if(item.timestamp >= startTime && item.timestamp <= endTime) {\n                                            return (<Timeline.Item dot={this.getTypeAvatar(item.messageType)}\n                                                                   color={this.getTypeColor(item.messageType)}\n                                                                   label={item.time}>\n                                                {item.location}{item.location === '' ? '' : <br/>}{item.messageContent}\n                                            </Timeline.Item>)\n                                        }\n                                        else return \"\";\n                                    }\n\n                                }\n                            )\n                        }\n                    </Timeline>\n                </Card>\n\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default queryMessages;"]},"metadata":{},"sourceType":"module"}