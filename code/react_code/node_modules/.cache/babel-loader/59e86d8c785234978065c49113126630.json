{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path';\nimport Group from 'zrender/lib/graphic/Group';\nimport { extend, defaults, each, map } from 'zrender/lib/core/util';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut } from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation } from '../../label/labelStyle';\nimport { throttle } from '../../util/throttle';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport Sausage from '../../util/shape/sausage';\nimport ChartView from '../../view/Chart';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { warn } from '../../util/log';\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth'];\nvar BAR_BORDER_RADIUS_QUERY = ['itemStyle', 'borderRadius'];\nvar _eventPos = [0, 0];\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView =\n/** @class */\nfunction (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n\n    this._removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel); // incremental also need to clip, otherwise might be overlow.\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\n\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\n\n    if (realtimeSortCfg) {\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        el = null;\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      } // Not change anything if only order changed.\n      // Especially not change label.\n\n\n      if (!isChangeOrder) {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    // Use clipPath in large mode.\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\n    var _this = this; // If no data in the first frame, wait for data to initSort\n\n\n    if (!data.count()) {\n      return;\n    }\n\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    if (this._isFirstFrame) {\n      this._dispatchInitSort(data, realtimeSortCfg, api);\n\n      this._isFirstFrame = false;\n    } else {\n      var orderMapping_1 = function (idx) {\n        var el = data.getItemGraphicEl(idx);\n\n        if (el) {\n          var shape = el.shape; // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\n\n          return (baseAxis.isHorizontal() // The result should be consistent with the initial sort by data value.\n          // Do not support the case that both positive and negative exist.\n          ? Math.abs(shape.height) : Math.abs(shape.width)) || 0;\n        } else {\n          return 0;\n        }\n      };\n\n      this._onRendered = function () {\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\n      };\n\n      api.getZr().on('rendered', this._onRendered);\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\n    var info = [];\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\n      var mappedValue = orderMapping(dataIdx);\n      mappedValue = mappedValue == null ? NaN : mappedValue;\n      info.push({\n        dataIndex: dataIdx,\n        mappedValue: mappedValue,\n        ordinalNumber: ordinalNumber\n      });\n    });\n    info.sort(function (a, b) {\n      // If NaN, it will be treated as min val.\n      return b.mappedValue - a.mappedValue;\n    });\n    return {\n      ordinalNumbers: map(info, function (item) {\n        return item.ordinalNumber;\n      })\n    };\n  };\n\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\n    var scale = baseAxis.scale;\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\n    var lastValue = Number.MAX_VALUE;\n\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\n      var value = rawIdx < 0 // If some tick have no bar, the tick will be treated as min.\n      ? Number.MIN_VALUE // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\n      : orderMapping(data.indexOfRawIndex(rawIdx));\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n  /*\n   * Consider the case when A and B changed order, whose representing\n   * bars are both out of sight, we don't wish to trigger reorder action\n   * as long as the order in the view doesn't change.\n   */\n\n\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\n    var scale = baseAxis.scale;\n    var extent = scale.getExtent();\n    var tickNum = Math.max(0, extent[0]);\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\n\n    for (; tickNum <= tickMax; ++tickNum) {\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\n        return true;\n      }\n    }\n  };\n\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\n      return;\n    }\n\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\n\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\n      this._removeOnRenderedListener(api);\n\n      api.dispatchAction({\n        type: 'changeAxisOrder',\n        componentType: baseAxis.dim + 'Axis',\n        axisId: baseAxis.index,\n        sortInfo: sortInfo\n      });\n    }\n  };\n\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\n    });\n\n    api.dispatchAction({\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: sortResult,\n      animation: {\n        // Update the axis label from the natural initial layout to\n        // sorted layout should has no animation.\n        duration: 0\n      }\n    });\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype._removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\n    var xClipped = x2 < x;\n    var yClipped = y2 < y; // When xClipped or yClipped, the element will be marked as `ignore`.\n    // But we should also place the element at the edge of the coord sys bounding rect.\n    // Beause if data changed and the bar show again, its transition animaiton\n    // will begin at this place.\n\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\n    layout.width = xClipped ? 0 : x2 - x;\n    layout.height = yClipped ? 0 : y2 - y; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return xClipped || yClipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\n\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction shouldRealtimeSort(seriesModel, coordSys) {\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\n  var baseAxis = coordSys.getBaseAxis();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (realtimeSortOption) {\n      if (baseAxis.type !== 'category') {\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\n      }\n\n      if (coordSys.type !== 'cartesian2d') {\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\n      }\n    }\n  }\n\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\n    return {\n      baseAxis: baseAxis,\n      otherAxis: coordSys.getOtherAxis(baseAxis)\n    };\n  }\n}\n\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  var seriesTarget;\n  var axisTarget;\n\n  if (isHorizontal) {\n    axisTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n    seriesTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n  } else {\n    axisTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n    seriesTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n  }\n\n  if (!isChangeOrder) {\n    // Keep the original growth animation if only axis order changed.\n    // Not start a new animation.\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: seriesTarget\n    }, seriesAnimationModel, newIndex, null);\n  }\n\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\n  (isUpdate ? updateProps : initProps)(el, {\n    shape: axisTarget\n  }, axisAnimationModel, newIndex);\n}\n\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(BAR_BORDER_RADIUS_QUERY) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n\n  if (!isPolar) {\n    var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n    var labelStatesModels = getLabelStatesModels(itemModel);\n    setLabelStyle(el, labelStatesModels, {\n      labelFetcher: seriesModel,\n      labelDataIndex: dataIndex,\n      defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n      inheritColor: style.fill,\n      defaultOpacity: style.opacity,\n      defaultOutsidePosition: labelPositionOutside\n    });\n    var label = el.getTextContent();\n    setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n      return getDefaultInterpolatedLabel(data, value);\n    });\n  }\n\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape =\n/** @class */\nfunction () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath =\n/** @class */\nfunction (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  ;\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.__startPoint = backgroundStartPoint;\n    bgEl.__baseDimIdx = baseDimIdx;\n    bgEl.__largeDataIndices = largeDataIndices;\n    bgEl.__barWidth = barWidth;\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental\n  });\n  el.__startPoint = startPoint;\n  el.__baseDimIdx = baseDimIdx;\n  el.__largeDataIndices = largeDataIndices;\n  el.__barWidth = barWidth;\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var globalStyle = data.getVisual('style');\n  el.useStyle(extend({}, globalStyle)); // Use stroke instead of fill.\n\n  el.style.fill = null;\n  el.style.stroke = globalStyle.fill;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle();\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nexport default BarView;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/前端/node_modules/echarts/lib/chart/bar/BarView.js"],"names":["__extends","Path","Group","extend","defaults","each","map","Rect","Sector","updateProps","initProps","removeElementWithFadeOut","getECData","enableHoverEmphasis","setStatesStylesFromModel","setLabelStyle","getLabelStatesModels","setLabelValueAnimation","throttle","createClipPath","Sausage","ChartView","isCoordinateSystemType","getDefaultLabel","getDefaultInterpolatedLabel","warn","BAR_BORDER_WIDTH_QUERY","BAR_BORDER_RADIUS_QUERY","_eventPos","mathMax","Math","max","mathMin","min","getClipArea","coord","data","coordSysClipArea","getArea","baseAxis","getBaseAxis","type","onBand","expandWidth","getLayout","isHorizontal","x","width","y","height","BarView","_super","_this","call","_isFirstFrame","prototype","render","seriesModel","ecModel","api","payload","_model","_removeOnRenderedListener","_updateDrawMode","coordinateSystemType","get","_isLargeDraw","_renderLarge","_renderNormal","process","env","NODE_ENV","incrementalPrepareRender","_clear","_updateLargeClip","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","large","group","getData","oldData","_data","coordinateSystem","isHorizontalOrRadial","dim","animationModel","isAnimationEnabled","realtimeSortCfg","shouldRealtimeSort","_enableRealtimeSort","needsClip","removeClipPath","roundCap","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","isInitSort","isChangeOrder","createBackground","dataIndex","bgLayout","bgEl","createBackgroundEl","useStyle","getItemStyle","setShape","diff","add","itemModel","getItemModel","layout","hasValue","isClipped","clip","el","elementCreator","model","updateStyle","attr","shape","updateRealtimeAnimation","setItemGraphicEl","ignore","update","newIndex","oldIndex","length","createBackgroundShape","getItemGraphicEl","remove","execute","bgGroup","_backgroundGroup","removeAll","i","createLarge","_removeBackground","clipPath","setClipPath","count","_dispatchInitSort","orderMapping_1","idx","abs","_onRendered","_updateSortWithinSameData","getZr","on","_dataSort","orderMapping","info","mapDimension","ordinalNumber","dataIdx","mappedValue","NaN","push","sort","a","b","ordinalNumbers","item","_isOrderChangedWithinSameData","scale","ordinalDataDim","lastValue","Number","MAX_VALUE","tickNum","len","getOrdinalMeta","categories","rawIdx","rawIndexOf","getRawOrdinalNumber","value","MIN_VALUE","indexOfRawIndex","_isOrderDifferentInView","orderInfo","extent","getExtent","tickMax","sortInfo","dispatchAction","componentType","axisId","index","sortResult","otherAxis","animation","duration","dispose","off","eachItemGraphicEl","cartesian2d","coordSysBoundingRect","signWidth","signHeight","coordSysX2","coordSysY2","x2","y2","xClipped","yClipped","polar","signR","r0","r","tmp","clipped","axisModel","isUpdate","rect","z2","__dataIndex","name","rectShape","animateProperty","isRadial","clockwise","startAngle","endAngle","ShapeClass","sector","sectorShape","animateTarget","coordSys","realtimeSortOption","getOtherAxis","seriesAnimationModel","seriesTarget","axisTarget","axisAnimationModel","getItemLayout","fixedLineWidth","getLineWidth","signX","signY","cx","cy","isZeroOnPolar","isPolar","style","getItemVisual","cursorStyle","getShallow","labelPositionOutside","labelStatesModels","labelFetcher","labelDataIndex","defaultText","inheritColor","fill","defaultOpacity","opacity","defaultOutsidePosition","label","getTextContent","getRawValue","emphasisModel","stroke","states","state","rawLayout","lineWidth","isNaN","LagePathShape","LargePath","opts","getDefaultShape","buildPath","ctx","points","startPoint","__startPoint","baseDimIdx","__baseDimIdx","moveTo","lineTo","incremental","largeDataIndices","barWidth","backgroundStartPoint","silent","__largeDataIndices","__barWidth","setLargeBackgroundStyle","setLargeStyle","seriesIndex","largePathUpdateDataIndex","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","ii","barBaseVal","barValueVal","globalStyle","getVisual","borderColor","itemStyle","coordLayout","PI","ElementClz"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path';\nimport Group from 'zrender/lib/graphic/Group';\nimport { extend, defaults, each, map } from 'zrender/lib/core/util';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut } from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation } from '../../label/labelStyle';\nimport { throttle } from '../../util/throttle';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport Sausage from '../../util/shape/sausage';\nimport ChartView from '../../view/Chart';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { warn } from '../../util/log';\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth'];\nvar BAR_BORDER_RADIUS_QUERY = ['itemStyle', 'borderRadius'];\nvar _eventPos = [0, 0];\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView =\n/** @class */\nfunction (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n\n    this._removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel); // incremental also need to clip, otherwise might be overlow.\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\n\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\n\n    if (realtimeSortCfg) {\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        el = null;\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      } // Not change anything if only order changed.\n      // Especially not change label.\n\n\n      if (!isChangeOrder) {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    // Use clipPath in large mode.\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\n    var _this = this; // If no data in the first frame, wait for data to initSort\n\n\n    if (!data.count()) {\n      return;\n    }\n\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    if (this._isFirstFrame) {\n      this._dispatchInitSort(data, realtimeSortCfg, api);\n\n      this._isFirstFrame = false;\n    } else {\n      var orderMapping_1 = function (idx) {\n        var el = data.getItemGraphicEl(idx);\n\n        if (el) {\n          var shape = el.shape; // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\n\n          return (baseAxis.isHorizontal() // The result should be consistent with the initial sort by data value.\n          // Do not support the case that both positive and negative exist.\n          ? Math.abs(shape.height) : Math.abs(shape.width)) || 0;\n        } else {\n          return 0;\n        }\n      };\n\n      this._onRendered = function () {\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\n      };\n\n      api.getZr().on('rendered', this._onRendered);\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\n    var info = [];\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\n      var mappedValue = orderMapping(dataIdx);\n      mappedValue = mappedValue == null ? NaN : mappedValue;\n      info.push({\n        dataIndex: dataIdx,\n        mappedValue: mappedValue,\n        ordinalNumber: ordinalNumber\n      });\n    });\n    info.sort(function (a, b) {\n      // If NaN, it will be treated as min val.\n      return b.mappedValue - a.mappedValue;\n    });\n    return {\n      ordinalNumbers: map(info, function (item) {\n        return item.ordinalNumber;\n      })\n    };\n  };\n\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\n    var scale = baseAxis.scale;\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\n    var lastValue = Number.MAX_VALUE;\n\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\n      var value = rawIdx < 0 // If some tick have no bar, the tick will be treated as min.\n      ? Number.MIN_VALUE // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\n      : orderMapping(data.indexOfRawIndex(rawIdx));\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n  /*\n   * Consider the case when A and B changed order, whose representing\n   * bars are both out of sight, we don't wish to trigger reorder action\n   * as long as the order in the view doesn't change.\n   */\n\n\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\n    var scale = baseAxis.scale;\n    var extent = scale.getExtent();\n    var tickNum = Math.max(0, extent[0]);\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\n\n    for (; tickNum <= tickMax; ++tickNum) {\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\n        return true;\n      }\n    }\n  };\n\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\n      return;\n    }\n\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\n\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\n      this._removeOnRenderedListener(api);\n\n      api.dispatchAction({\n        type: 'changeAxisOrder',\n        componentType: baseAxis.dim + 'Axis',\n        axisId: baseAxis.index,\n        sortInfo: sortInfo\n      });\n    }\n  };\n\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\n    });\n\n    api.dispatchAction({\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: sortResult,\n      animation: {\n        // Update the axis label from the natural initial layout to\n        // sorted layout should has no animation.\n        duration: 0\n      }\n    });\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype._removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\n    var xClipped = x2 < x;\n    var yClipped = y2 < y; // When xClipped or yClipped, the element will be marked as `ignore`.\n    // But we should also place the element at the edge of the coord sys bounding rect.\n    // Beause if data changed and the bar show again, its transition animaiton\n    // will begin at this place.\n\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\n    layout.width = xClipped ? 0 : x2 - x;\n    layout.height = yClipped ? 0 : y2 - y; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return xClipped || yClipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\n\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction shouldRealtimeSort(seriesModel, coordSys) {\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\n  var baseAxis = coordSys.getBaseAxis();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (realtimeSortOption) {\n      if (baseAxis.type !== 'category') {\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\n      }\n\n      if (coordSys.type !== 'cartesian2d') {\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\n      }\n    }\n  }\n\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\n    return {\n      baseAxis: baseAxis,\n      otherAxis: coordSys.getOtherAxis(baseAxis)\n    };\n  }\n}\n\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  var seriesTarget;\n  var axisTarget;\n\n  if (isHorizontal) {\n    axisTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n    seriesTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n  } else {\n    axisTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n    seriesTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n  }\n\n  if (!isChangeOrder) {\n    // Keep the original growth animation if only axis order changed.\n    // Not start a new animation.\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: seriesTarget\n    }, seriesAnimationModel, newIndex, null);\n  }\n\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\n  (isUpdate ? updateProps : initProps)(el, {\n    shape: axisTarget\n  }, axisAnimationModel, newIndex);\n}\n\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(BAR_BORDER_RADIUS_QUERY) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n\n  if (!isPolar) {\n    var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n    var labelStatesModels = getLabelStatesModels(itemModel);\n    setLabelStyle(el, labelStatesModels, {\n      labelFetcher: seriesModel,\n      labelDataIndex: dataIndex,\n      defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n      inheritColor: style.fill,\n      defaultOpacity: style.opacity,\n      defaultOutsidePosition: labelPositionOutside\n    });\n    var label = el.getTextContent();\n    setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n      return getDefaultInterpolatedLabel(data, value);\n    });\n  }\n\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape =\n/** @class */\nfunction () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath =\n/** @class */\nfunction (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  ;\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.__startPoint = backgroundStartPoint;\n    bgEl.__baseDimIdx = baseDimIdx;\n    bgEl.__largeDataIndices = largeDataIndices;\n    bgEl.__barWidth = barWidth;\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental\n  });\n  el.__startPoint = startPoint;\n  el.__baseDimIdx = baseDimIdx;\n  el.__largeDataIndices = largeDataIndices;\n  el.__barWidth = barWidth;\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var globalStyle = data.getVisual('style');\n  el.useStyle(extend({}, globalStyle)); // Use stroke instead of fill.\n\n  el.style.fill = null;\n  el.style.stroke = globalStyle.fill;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle();\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nexport default BarView;"]},"metadata":{},"sourceType":"module"}