{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport MapDraw from '../helper/MapDraw';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\n\nvar GeoView =\n/** @class */\nfunction (_super) {\n  __extends(GeoView, _super);\n\n  function GeoView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GeoView.type;\n    return _this;\n  }\n\n  GeoView.prototype.init = function (ecModel, api) {\n    var mapDraw = new MapDraw(api);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n    this._api = api;\n  };\n\n  GeoView.prototype.render = function (geoModel, ecModel, api, payload) {\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    mapDraw.group.on('click', this._handleRegionClick, this);\n    mapDraw.group.silent = geoModel.get('silent');\n    this._model = geoModel;\n    this.updateSelectStatus(geoModel, ecModel, api);\n  };\n\n  GeoView.prototype._handleRegionClick = function (e) {\n    var current = e.target;\n    var eventData; // TODO extract a util function\n\n    while (current && (eventData = getECData(current).eventData) == null) {\n      current = current.__hostTarget || current.parent;\n    }\n\n    if (eventData) {\n      this._api.dispatchAction({\n        type: 'geoToggleSelect',\n        geoId: this._model.id,\n        name: eventData.name\n      });\n    }\n  };\n\n  GeoView.prototype.updateSelectStatus = function (model, ecModel, api) {\n    var _this = this;\n\n    this._mapDraw.group.traverse(function (node) {\n      var eventData = getECData(node).eventData;\n\n      if (eventData) {\n        _this._model.isSelected(eventData.name) ? api.enterSelect(node) : api.leaveSelect(node); // No need to traverse children.\n\n        return true;\n      }\n    });\n  };\n\n  GeoView.prototype.dispose = function () {\n    this._mapDraw && this._mapDraw.remove();\n  };\n\n  GeoView.type = 'geo';\n  return GeoView;\n}(ComponentView);\n\nexport default GeoView;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/echarts/lib/component/geo/GeoView.js"],"names":["__extends","MapDraw","ComponentView","getECData","GeoView","_super","_this","apply","arguments","type","prototype","init","ecModel","api","mapDraw","_mapDraw","group","add","_api","render","geoModel","payload","get","draw","removeAll","on","_handleRegionClick","silent","_model","updateSelectStatus","e","current","target","eventData","__hostTarget","parent","dispatchAction","geoId","id","name","model","traverse","node","isSelected","enterSelect","leaveSelect","dispose","remove"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport MapDraw from '../helper/MapDraw';\nimport ComponentView from '../../view/Component';\nimport { getECData } from '../../util/innerStore';\n\nvar GeoView =\n/** @class */\nfunction (_super) {\n  __extends(GeoView, _super);\n\n  function GeoView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GeoView.type;\n    return _this;\n  }\n\n  GeoView.prototype.init = function (ecModel, api) {\n    var mapDraw = new MapDraw(api);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n    this._api = api;\n  };\n\n  GeoView.prototype.render = function (geoModel, ecModel, api, payload) {\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    mapDraw.group.on('click', this._handleRegionClick, this);\n    mapDraw.group.silent = geoModel.get('silent');\n    this._model = geoModel;\n    this.updateSelectStatus(geoModel, ecModel, api);\n  };\n\n  GeoView.prototype._handleRegionClick = function (e) {\n    var current = e.target;\n    var eventData; // TODO extract a util function\n\n    while (current && (eventData = getECData(current).eventData) == null) {\n      current = current.__hostTarget || current.parent;\n    }\n\n    if (eventData) {\n      this._api.dispatchAction({\n        type: 'geoToggleSelect',\n        geoId: this._model.id,\n        name: eventData.name\n      });\n    }\n  };\n\n  GeoView.prototype.updateSelectStatus = function (model, ecModel, api) {\n    var _this = this;\n\n    this._mapDraw.group.traverse(function (node) {\n      var eventData = getECData(node).eventData;\n\n      if (eventData) {\n        _this._model.isSelected(eventData.name) ? api.enterSelect(node) : api.leaveSelect(node); // No need to traverse children.\n\n        return true;\n      }\n    });\n  };\n\n  GeoView.prototype.dispose = function () {\n    this._mapDraw && this._mapDraw.remove();\n  };\n\n  GeoView.type = 'geo';\n  return GeoView;\n}(ComponentView);\n\nexport default GeoView;"]},"metadata":{},"sourceType":"module"}