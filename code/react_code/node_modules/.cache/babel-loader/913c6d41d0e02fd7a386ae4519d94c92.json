{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/components/Auction/EscrowInfo/index.jsx\";\nimport React, { Component } from \"react\";\nimport { UserOutlined, LaptopOutlined, FileSearchOutlined, HomeOutlined, EyeTwoTone, EyeInvisibleOutlined, RocketOutlined } from '@ant-design/icons';\nimport cookie from \"react-cookies\"; //接入web3\n\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\nimport openNotification from \"../../Notification\"; //this.props.hideButton用于在资金处理结束后，隐藏处理资金的按钮\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EscrowInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null,\n      truffleContract: null,\n      seller: \"\",\n      buyer: \"\",\n      arbiter: \"\",\n      escrowString: \"\"\n    };\n\n    this.componentDidMount = async () => {\n      console.log(\"生成EscrowInfo模块\");\n\n      if (await this.getBlockChainInfo()) {\n        console.log(\"获得合约信息成功\");\n        this.getInfoFromBlockchain();\n      } else {\n        console.log(\"获得合约信息失败\");\n      }\n    };\n\n    this.getBlockChainInfo = async () => {\n      try {\n        const web3 = await getWeb3();\n        const EcommerceStore = await getEcommerceStore(web3);\n        this.setState({\n          web3: web3,\n          truffleContract: EcommerceStore\n        });\n        console.log(\"EscrowInfo 的 web3 : \");\n        console.dir(web3);\n        console.log(\"EscrowInfo 的 EcommerceStore : \");\n        console.dir(this.state.truffleContract);\n        return true;\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`[ERROR]接入智能合约失败.`);\n        console.error(error);\n        return false;\n      }\n    };\n\n    this.getInfoFromBlockchain = () => {\n      let blockChainID = this.props.dataArray[0].ID;\n      console.log(\"竞拍商品ID : \" + blockChainID);\n      let that = this;\n      this.state.truffleContract.deployed().then(async i => {\n        console.log(\"进入 this.state.truffleContract.deployed() 的回调函数\"); //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n        //即时获取当前地址，用该地址发交易\n\n        let currentAccount = await that.state.web3.eth.getAccounts();\n        console.log(\"交易发起地址为: \" + currentAccount);\n\n        try {\n          //调用合约的 escrowInfo 方法\n          await i.escrowInfo(parseInt(blockChainID)).then(info => {\n            console.log(\"成功调用合约的escrowInfo方法，返回 : \");\n            console.dir(info);\n            let escrowString = \"\"; //合约中的钱已被转走\n\n            if (info[3] == true) {\n              escrowString = \"合约的资金托管已结束\"; //隐藏 release 和 refund 按钮\n\n              this.props.hideButton();\n            } //钱还在合约中\n            else {\n                escrowString = info[4] + \" of 3 participants have agreed to release funds\";\n                escrowString += info[5] + \" of 3 participants have agreed to refund the buyer\";\n              }\n\n            this.setState({\n              seller: info[0],\n              buyer: info[1],\n              arbiter: info[2],\n              escrowString: escrowString\n            });\n\n            _message.success(\"查询最终资金处理信息成功\", 2);\n          });\n        } catch (err) {\n          _message.error(\"查询最终资金处理信息失败\", 2);\n\n          console.log(\"调用合约的escrowInfo方法失败 \" + err);\n          return;\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u6700\\u7EC8\\u7684\\u8D44\\u91D1\\u5904\\u7406\\u4FE1\\u606F\\u6A21\\u5757\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"seller : \", this.state.seller]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"buyer : \", this.state.buyer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"arbiter : \", this.state.arbiter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.escrowString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EscrowInfo;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/components/Auction/EscrowInfo/index.jsx"],"names":["React","Component","UserOutlined","LaptopOutlined","FileSearchOutlined","HomeOutlined","EyeTwoTone","EyeInvisibleOutlined","RocketOutlined","cookie","getWeb3","getEcommerceStore","openNotification","EscrowInfo","state","web3","truffleContract","seller","buyer","arbiter","escrowString","componentDidMount","console","log","getBlockChainInfo","getInfoFromBlockchain","EcommerceStore","setState","dir","error","alert","blockChainID","props","dataArray","ID","that","deployed","then","i","currentAccount","eth","getAccounts","escrowInfo","parseInt","info","hideButton","success","err","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,kBAAvC,EAA2DC,YAA3D,EAAyEC,UAAzE,EAAqFC,oBAArF,EAA2GC,cAA3G,QAAiI,mBAAjI;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CAGA;;;;AAEA,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/Ba,KAF+B,GAEvB;AACJC,MAAAA,IAAI,EAAG,IADH;AAEJC,MAAAA,eAAe,EAAG,IAFd;AAGJC,MAAAA,MAAM,EAAG,EAHL;AAIJC,MAAAA,KAAK,EAAG,EAJJ;AAKJC,MAAAA,OAAO,EAAG,EALN;AAMJC,MAAAA,YAAY,EAAG;AANX,KAFuB;;AAAA,SAW/BC,iBAX+B,GAWX,YAAY;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,UAAG,MAAM,KAAKC,iBAAL,EAAT,EAAkC;AAC9BF,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,aAAKE,qBAAL;AACH,OAHD,MAGK;AACDH,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AACJ,KAnB8B;;AAAA,SAqBhCC,iBArBgC,GAqBZ,YAAW;AAC1B,UAAG;AACC,cAAMT,IAAI,GAAG,MAAML,OAAO,EAA1B;AACA,cAAMgB,cAAc,GAAG,MAAMf,iBAAiB,CAACI,IAAD,CAA9C;AACA,aAAKY,QAAL,CAAc;AACVZ,UAAAA,IAAI,EAAEA,IADI;AAEVC,UAAAA,eAAe,EAACU;AAFN,SAAd;AAIAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,QAAAA,OAAO,CAACM,GAAR,CAAYb,IAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAD,QAAAA,OAAO,CAACM,GAAR,CAAY,KAAKd,KAAL,CAAWE,eAAvB;AACA,eAAO,IAAP;AACH,OAZD,CAYC,OAAOa,KAAP,EAAc;AACX;AACAC,QAAAA,KAAK,CACF,kBADE,CAAL;AAGAR,QAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACA,eAAO,KAAP;AACD;AAEN,KA3C8B;;AAAA,SA6C/BJ,qBA7C+B,GA6CP,MAAM;AAC1B,UAAIM,YAAY,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAAwBC,EAA3C;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcQ,YAA1B;AAEA,UAAII,IAAI,GAAG,IAAX;AACA,WAAKrB,KAAL,CAAWE,eAAX,CAA2BoB,QAA3B,GAAsCC,IAAtC,CAA2C,MAAOC,CAAP,IAAa;AACpDhB,QAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ,EADoD,CAEpD;AACA;;AACA,YAAIgB,cAAc,GAAG,MAAMJ,IAAI,CAACrB,KAAL,CAAWC,IAAX,CAAgByB,GAAhB,CAAoBC,WAApB,EAA3B;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAYgB,cAAxB;;AAEA,YAAG;AACC;AACA,gBAAMD,CAAC,CAACI,UAAF,CAAaC,QAAQ,CAACZ,YAAD,CAArB,EAAqCM,IAArC,CAA0CO,IAAI,IAAI;AACpDtB,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAD,YAAAA,OAAO,CAACM,GAAR,CAAYgB,IAAZ;AAEA,gBAAIxB,YAAY,GAAG,EAAnB,CAJoD,CAKpD;;AACA,gBAAGwB,IAAI,CAAC,CAAD,CAAJ,IAAW,IAAd,EAAmB;AACfxB,cAAAA,YAAY,GAAG,YAAf,CADe,CAEf;;AACA,mBAAKY,KAAL,CAAWa,UAAX;AACH,aAJD,CAKA;AALA,iBAMI;AACAzB,gBAAAA,YAAY,GAAGwB,IAAI,CAAC,CAAD,CAAJ,GAAU,iDAAzB;AACAxB,gBAAAA,YAAY,IAAIwB,IAAI,CAAC,CAAD,CAAJ,GAAU,oDAA1B;AACH;;AAED,iBAAKjB,QAAL,CAAc;AACVV,cAAAA,MAAM,EAAG2B,IAAI,CAAC,CAAD,CADH;AAEV1B,cAAAA,KAAK,EAAG0B,IAAI,CAAC,CAAD,CAFF;AAGVzB,cAAAA,OAAO,EAAGyB,IAAI,CAAC,CAAD,CAHJ;AAIVxB,cAAAA,YAAY,EAAGA;AAJL,aAAd;;AAOA,qBAAQ0B,OAAR,CAAgB,cAAhB,EAA+B,CAA/B;AACH,WAzBK,CAAN;AA0BH,SA5BD,CA4BC,OAAMC,GAAN,EAAW;AACR,mBAAQlB,KAAR,CAAc,cAAd,EAA6B,CAA7B;;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBwB,GAArC;AACA;AACH;AACJ,OAxCD;AAyCH,KA3F8B;AAAA;;AAgG/BC,EAAAA,MAAM,GAAI;AACN,wBAII;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAAa,KAAKlC,KAAL,CAAWG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BAAY,KAAKH,KAAL,CAAWI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,iCAAc,KAAKJ,KAAL,CAAWK,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAI,KAAKL,KAAL,CAAWM;AAAf;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAeH;;AAhH8B;;AAmHnC,eAAeP,UAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { Menu, Layout, message, Drawer, Space, Button, Divider, Form, InputNumber, Input, Select } from 'antd';\nimport { UserOutlined, LaptopOutlined, FileSearchOutlined, HomeOutlined, EyeTwoTone, EyeInvisibleOutlined, RocketOutlined } from '@ant-design/icons';\nimport cookie from \"react-cookies\";\n//接入web3\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\nimport openNotification from \"../../Notification\";\n\n\n//this.props.hideButton用于在资金处理结束后，隐藏处理资金的按钮\n\nclass EscrowInfo extends Component {\n\n    state = {\n        web3 : null,\n        truffleContract : null,\n        seller : \"\",\n        buyer : \"\",\n        arbiter : \"\",\n        escrowString : \"\"\n    }\n\n    componentDidMount = async () => {\n        console.log(\"生成EscrowInfo模块\");\n        if(await this.getBlockChainInfo()){\n            console.log(\"获得合约信息成功\");\n            this.getInfoFromBlockchain();\n        }else{\n            console.log(\"获得合约信息失败\");\n        }  \n    }\n\n   getBlockChainInfo = async() => {\n        try{\n            const web3 = await getWeb3();\n            const EcommerceStore = await getEcommerceStore(web3);\n            this.setState({\n                web3: web3,\n                truffleContract:EcommerceStore\n            });\n            console.log(\"EscrowInfo 的 web3 : \");\n            console.dir(web3);\n            console.log(\"EscrowInfo 的 EcommerceStore : \");\n            console.dir(this.state.truffleContract);\n            return true;\n        }catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n              `[ERROR]接入智能合约失败.`,\n            );\n            console.error(error);\n            return false;\n          }\n        \n    }\n\n    getInfoFromBlockchain = () => {\n        let blockChainID = this.props.dataArray[0].ID;\n        console.log(\"竞拍商品ID : \" + blockChainID);\n\n        let that = this;\n        this.state.truffleContract.deployed().then(async (i) => {\n            console.log(\"进入 this.state.truffleContract.deployed() 的回调函数\");\n            //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n            //即时获取当前地址，用该地址发交易\n            let currentAccount = await that.state.web3.eth.getAccounts();\n            console.log(\"交易发起地址为: \"+currentAccount);\n\n            try{\n                //调用合约的 escrowInfo 方法\n                await i.escrowInfo(parseInt(blockChainID)).then(info => {\n                    console.log(\"成功调用合约的escrowInfo方法，返回 : \");\n                    console.dir(info);\n\n                    let escrowString = \"\";\n                    //合约中的钱已被转走\n                    if(info[3] == true){\n                        escrowString = \"合约的资金托管已结束\";\n                        //隐藏 release 和 refund 按钮\n                        this.props.hideButton();\n                    }\n                    //钱还在合约中\n                    else{\n                        escrowString = info[4] + \" of 3 participants have agreed to release funds\";\n                        escrowString += info[5] + \" of 3 participants have agreed to refund the buyer\";\n                    }\n\n                    this.setState({\n                        seller : info[0],\n                        buyer : info[1],\n                        arbiter : info[2],\n                        escrowString : escrowString\n                    })\n\n                    message.success(\"查询最终资金处理信息成功\",2);\n                });\n            }catch(err) {\n                message.error(\"查询最终资金处理信息失败\",2);\n                console.log(\"调用合约的escrowInfo方法失败 \" + err);\n                return;\n            }  \n        });\n    }\n   \n\n \n    \n    render () {\n        return (\n\n\n\n            <div>\n                <p>最终的资金处理信息模块</p>\n                <p>seller : {this.state.seller}</p>\n                <p>buyer : {this.state.buyer}</p>\n                <p>arbiter : {this.state.arbiter}</p>\n                <p>{this.state.escrowString}</p>\n            </div>\n\n            \n\n        );\n    }\n}\n\nexport default EscrowInfo;\n"]},"metadata":{},"sourceType":"module"}