{"ast":null,"code":"import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/components/ProductList/index.jsx\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'; // import './index.css';\n\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\nimport { setRawCookie } from \"react-cookies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IconText = ({\n  icon,\n  text\n}) => /*#__PURE__*/_jsxDEV(_Space, {\n  children: [/*#__PURE__*/React.createElement(icon), text]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n\n_c = IconText;\n\nclass ProductList extends Component {\n  //////////////////////重要\n  //this.props.productArray 为 promise\n  //promise需要解析才能使用\n  //要用.then拿promise的结果\n  // blockchainId (int)\n  // key\n  // name\n  // category\n  // descString\n  // imageUrl\n  // productCondition\n  // price\n  // processTime\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataArray: []\n    };\n\n    this.componentWillMount = () => {\n      // console.log(\"promise.then 前拿取的信息为 : \");\n      //这里输出一个 Promise\n      // console.dir(this.props.productArray);\n      this.props.productArray.then(res => {\n        // console.log(\"promise.then 后拿取的信息为 : \");\n        //这里输出多个 Promise, 一个 Product 就是一个 Promise\n        // console.dir(res);\n        //解析每个Promise\n        let resLen = res.length;\n\n        for (let promiseIndex = 0; promiseIndex < resLen; promiseIndex++) {\n          res[promiseIndex].then(productInfo => {\n            // console.log(\"其中一个要渲染的信息为 : \");\n            // console.dir(productInfo);\n            //得到每一个商品\n            //向 state 中的 dataArray 添加元素的方法\n            this.setState({\n              dataArray: [...this.state.dataArray, productInfo]\n            });\n          });\n        }\n      }).catch(err => {\n        _message.error(\"获得产品信息失败\", 2);\n\n        console.log(\"产品展示列表不能获得产品信息\" + err);\n      }); //模拟数据，用来测试\n      // for (let i = 0; i < 2; i++) {\n      //   this.productListData.push({\n      //     href: 'https://ant.design',\n      //     name: '商品名称',\n      //     avatar: 'https://joeschmoe.io/api/v1/random',\n      //     category:\n      //       '商品类型',\n      //     descString:\n      //       '商品介绍',\n      //     price:\n      //       '1 ETH',\n      //     processTime:\n      //       '时间',\n      //     productCondition:\n      //       '全新',\n      //   });\n      // }\n    };\n  } //用来测试的模拟数据\n  // productListData = [];\n  //应该在调用 ProductList 的函数中，将数据格式化好，在 ProductList 中将传入的promise，用then解析出res，直接将数据放入 render，让 render 自动刷新\n  //传入的是 Promise 的嵌套，所以要用 then 嵌套地解析两次\n\n\n  render() {\n    console.log(\"ProductList 进行了一次渲染\");\n    return /*#__PURE__*/_jsxDEV(_List, {\n      itemLayout: \"horizontal\",\n      size: \"large\",\n      pagination: {\n        onChange: page => {\n          console.log(page);\n        },\n        pageSize: 5\n      },\n      dataSource: this.state.dataArray,\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u5171 \", this.state.dataArray.length, \" \\u4E2A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this),\n      renderItem: item => /*#__PURE__*/_jsxDEV(_List.Item, {\n        actions: [/*#__PURE__*/_jsxDEV(IconText, {\n          icon: StarOutlined,\n          text: item.price\n        }, \"list-vertical-star-o\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconText, {\n          icon: LikeOutlined,\n          text: item.productCondition\n        }, \"list-vertical-like-o\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconText, {\n          icon: MessageOutlined,\n          text: item.processTime\n        }, \"list-vertical-message\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)],\n        extra: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: 130,\n          height: 130,\n          alt: \"\\u5546\\u54C1\\u56FE\\u7247\",\n          src: item.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(_List.Item.Meta, {\n          // avatar={<Avatar src={item.avatar} />}\n          title: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: '/index/productInfo/',\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 18\n          }, this),\n          description: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(_Tag, {\n              children: [\"ID: \", item.blockchainId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Tag, {\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Tag, {\n              children: item.productCondition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(_Tag, {\n              children: \"\\u533A\\u5757\\u94FE\\u5B58\\u8BC1\\u6280\\u672F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), item.descString]\n      }, item.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconText\");","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/components/ProductList/index.jsx"],"names":["React","Component","ReactDOM","MessageOutlined","LikeOutlined","StarOutlined","setRawCookie","IconText","icon","text","createElement","ProductList","constructor","props","state","dataArray","componentWillMount","productArray","then","res","resLen","length","promiseIndex","productInfo","setState","catch","err","error","console","log","render","onChange","page","pageSize","item","price","productCondition","processTime","imageUrl","name","blockchainId","category","descString","index"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n// import './index.css';\nimport { List, Avatar, Space, message, Tag } from 'antd';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\nimport { setRawCookie } from \"react-cookies\";\n\n\n\nconst IconText = ({ icon, text }) => (\n  <Space>\n    {React.createElement(icon)}\n    {text}\n  </Space>\n);\n\n\n\nclass ProductList extends Component {\n  state = {\n    dataArray : []\n  }\n\n  //////////////////////重要\n  //this.props.productArray 为 promise\n  //promise需要解析才能使用\n  //要用.then拿promise的结果\n  // blockchainId (int)\n  // key\n  // name\n  // category\n  // descString\n  // imageUrl\n  // productCondition\n  // price\n  // processTime\n  \n\n  constructor (props) {\n    super(props);\n  }\n\n  //用来测试的模拟数据\n  // productListData = [];\n\n\n  //应该在调用 ProductList 的函数中，将数据格式化好，在 ProductList 中将传入的promise，用then解析出res，直接将数据放入 render，让 render 自动刷新\n  //传入的是 Promise 的嵌套，所以要用 then 嵌套地解析两次\n  componentWillMount  = () => {\n\n    // console.log(\"promise.then 前拿取的信息为 : \");\n    //这里输出一个 Promise\n    // console.dir(this.props.productArray);\n\n    this.props.productArray.then( res =>{\n\n      // console.log(\"promise.then 后拿取的信息为 : \");\n      //这里输出多个 Promise, 一个 Product 就是一个 Promise\n      // console.dir(res);\n\n      //解析每个Promise\n      let resLen = res.length;\n      for(let promiseIndex = 0; promiseIndex < resLen; promiseIndex++){\n        res[promiseIndex].then(productInfo => {\n\n        // console.log(\"其中一个要渲染的信息为 : \");\n        // console.dir(productInfo);\n          //得到每一个商品\n          //向 state 中的 dataArray 添加元素的方法\n          this.setState({dataArray : [...this.state.dataArray, productInfo]});\n        })\n      }\n\n    }).catch( err =>{\n      message.error(\"获得产品信息失败\", 2);\n      console.log(\"产品展示列表不能获得产品信息\" + err);\n    })\n    \n\n    //模拟数据，用来测试\n    // for (let i = 0; i < 2; i++) {\n    //   this.productListData.push({\n    //     href: 'https://ant.design',\n    //     name: '商品名称',\n    //     avatar: 'https://joeschmoe.io/api/v1/random',\n    //     category:\n    //       '商品类型',\n    //     descString:\n    //       '商品介绍',\n    //     price:\n    //       '1 ETH',\n    //     processTime:\n    //       '时间',\n    //     productCondition:\n    //       '全新',\n    //   });\n    // }\n\n  }\n              \n\n    render () {\n\n      console.log(\"ProductList 进行了一次渲染\");\n\n        return (\n            <List\n    itemLayout=\"horizontal\"\n    size=\"large\"\n    pagination={{\n      onChange: page => {\n        console.log(page);\n      },\n      pageSize: 5,\n    }}\n    dataSource={this.state.dataArray}\n    footer={\n      <div>\n        共 {this.state.dataArray.length} 个\n      </div>\n    }\n    renderItem={item => (\n      <List.Item\n        key={item.index}\n        actions={[\n          <IconText icon={StarOutlined} text={item.price} key=\"list-vertical-star-o\" />,\n          <IconText icon={LikeOutlined} text={item.productCondition} key=\"list-vertical-like-o\" />,\n          <IconText icon={MessageOutlined} text={item.processTime} key=\"list-vertical-message\" />,\n        ]}\n        extra={\n          <img\n            width={130}\n            height={130}\n            alt=\"商品图片\"\n            src={item.imageUrl}\n          />\n        }\n        \n      >\n        <List.Item.Meta\n          // avatar={<Avatar src={item.avatar} />}\n          title={<a   href={'/index/productInfo/'}>{item.name}</a>}\n          description={\n            <>\n              <Tag>ID: {item.blockchainId}</Tag>\n              <Tag>{item.category}</Tag>\n              <Tag>{item.productCondition}</Tag>\n              <Tag>区块链存证技术</Tag>\n            </>\n          }\n        />\n        {item.descString}\n      </List.Item>\n    )}\n    />\n        );\n    }\n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}