{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/** @file httpprovider.js\n * @authors:\n *   Marek Kotewicz <marek@parity.io>\n *   Marian Oancea\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2015\n */\nvar errors = require('web3-core-helpers').errors;\n\nvar XHR2 = require('xhr2-cookies').XMLHttpRequest; // jshint ignore: line\n\n\nvar http = require('http');\n\nvar https = require('https');\n/**\n * HttpProvider should be used to send rpc calls over http\n */\n\n\nvar HttpProvider = function HttpProvider(host, options) {\n  options = options || {};\n  var keepAlive = options.keepAlive === true || options.keepAlive !== false ? true : false;\n  this.host = host || 'http://localhost:8545';\n\n  if (this.host.substring(0, 5) === \"https\") {\n    this.httpsAgent = new https.Agent({\n      keepAlive: keepAlive\n    });\n  } else {\n    this.httpAgent = new http.Agent({\n      keepAlive: keepAlive\n    });\n  }\n\n  this.timeout = options.timeout || 0;\n  this.headers = options.headers;\n  this.connected = false;\n};\n\nHttpProvider.prototype._prepareRequest = function () {\n  var request = new XHR2();\n  request.nodejsSet({\n    httpsAgent: this.httpsAgent,\n    httpAgent: this.httpAgent\n  });\n  request.open('POST', this.host, true);\n  request.setRequestHeader('Content-Type', 'application/json');\n  request.timeout = this.timeout && this.timeout !== 1 ? this.timeout : 0;\n  request.withCredentials = true;\n\n  if (this.headers) {\n    this.headers.forEach(function (header) {\n      request.setRequestHeader(header.name, header.value);\n    });\n  }\n\n  return request;\n};\n/**\n * Should be used to make async request\n *\n * @method send\n * @param {Object} payload\n * @param {Function} callback triggered on end with (err, result)\n */\n\n\nHttpProvider.prototype.send = function (payload, callback) {\n  var _this = this;\n\n  var request = this._prepareRequest();\n\n  request.onreadystatechange = function () {\n    if (request.readyState === 4 && request.timeout !== 1) {\n      var result = request.responseText;\n      var error = null;\n\n      try {\n        result = JSON.parse(result);\n      } catch (e) {\n        error = errors.InvalidResponse(request.responseText);\n      }\n\n      _this.connected = true;\n      callback(error, result);\n    }\n  };\n\n  request.ontimeout = function () {\n    _this.connected = false;\n    callback(errors.ConnectionTimeout(this.timeout));\n  };\n\n  try {\n    request.send(JSON.stringify(payload));\n  } catch (error) {\n    this.connected = false;\n    callback(errors.InvalidConnection(this.host));\n  }\n};\n\nHttpProvider.prototype.disconnect = function () {//NO OP\n};\n\nmodule.exports = HttpProvider;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/web3-providers-http/src/index.js"],"names":["errors","require","XHR2","XMLHttpRequest","http","https","HttpProvider","host","options","keepAlive","substring","httpsAgent","Agent","httpAgent","timeout","headers","connected","prototype","_prepareRequest","request","nodejsSet","open","setRequestHeader","withCredentials","forEach","header","name","value","send","payload","callback","_this","onreadystatechange","readyState","result","responseText","error","JSON","parse","e","InvalidResponse","ontimeout","ConnectionTimeout","stringify","InvalidConnection","disconnect","module","exports"],"mappings":"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","sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file httpprovider.js\n * @authors:\n *   Marek Kotewicz <marek@parity.io>\n *   Marian Oancea\n *   Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2015\n */\n\nvar errors = require('web3-core-helpers').errors;\nvar XHR2 = require('xhr2-cookies').XMLHttpRequest // jshint ignore: line\nvar http = require('http');\nvar https = require('https');\n\n\n/**\n * HttpProvider should be used to send rpc calls over http\n */\nvar HttpProvider = function HttpProvider(host, options) {\n    options = options || {};\n\n    var keepAlive =\n        (options.keepAlive === true || options.keepAlive !== false) ?\n            true :\n            false;\n    this.host = host || 'http://localhost:8545';\n    if (this.host.substring(0,5) === \"https\") {\n        this.httpsAgent = new https.Agent({ keepAlive: keepAlive });\n    }else{\n        this.httpAgent = new http.Agent({ keepAlive: keepAlive });\n    }\n    this.timeout = options.timeout || 0;\n    this.headers = options.headers;\n    this.connected = false;\n};\n\nHttpProvider.prototype._prepareRequest = function(){\n    var request = new XHR2();\n    request.nodejsSet({\n        httpsAgent:this.httpsAgent,\n        httpAgent:this.httpAgent\n    });\n\n    request.open('POST', this.host, true);\n    request.setRequestHeader('Content-Type','application/json');\n    request.timeout = this.timeout && this.timeout !== 1 ? this.timeout : 0;\n    request.withCredentials = true;\n\n    if(this.headers) {\n        this.headers.forEach(function(header) {\n            request.setRequestHeader(header.name, header.value);\n        });\n    }\n\n    return request;\n};\n\n/**\n * Should be used to make async request\n *\n * @method send\n * @param {Object} payload\n * @param {Function} callback triggered on end with (err, result)\n */\nHttpProvider.prototype.send = function (payload, callback) {\n    var _this = this;\n    var request = this._prepareRequest();\n\n    request.onreadystatechange = function() {\n        if (request.readyState === 4 && request.timeout !== 1) {\n            var result = request.responseText;\n            var error = null;\n\n            try {\n                result = JSON.parse(result);\n            } catch(e) {\n                error = errors.InvalidResponse(request.responseText);\n            }\n\n            _this.connected = true;\n            callback(error, result);\n        }\n    };\n\n    request.ontimeout = function() {\n        _this.connected = false;\n        callback(errors.ConnectionTimeout(this.timeout));\n    };\n\n    try {\n        request.send(JSON.stringify(payload));\n    } catch(error) {\n        this.connected = false;\n        callback(errors.InvalidConnection(this.host));\n    }\n};\n\nHttpProvider.prototype.disconnect = function () {\n    //NO OP\n};\n\n\nmodule.exports = HttpProvider;\n"]},"metadata":{},"sourceType":"script"}