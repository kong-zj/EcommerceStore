{"ast":null,"code":"var _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Trace/UploadInfo/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\n// import EditDeviceModal from \"../../EditDeviceModal\";\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\"; //从数据库拿商品信息\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UploadInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: cookie.load('username'),\n      web3: null,\n      truffleContract: null\n    };\n\n    this.getBlockChainInfo = async () => {\n      const web3 = await getWeb3();\n      const EcommerceStore = await getEcommerceStore(web3);\n      this.setState({\n        web3: web3,\n        currentContract: EcommerceStore\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"生成UploadInfo模块\");\n\n    if (this.getBlockChainInfo()) {\n      console.log(\"成功获得合约信息\");\n    } else {\n      console.log(\"获得合约信息失败\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"UploadInfo\\u6A21\\u5757\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UploadInfo; // import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n// class CreateDevice extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n// axios.post('/createDevice', {\n//     deviceID:values.deviceID,\n//     deviceName:values.deviceName,\n//     ownerName:cookie.load('username')\n// }).then(response => {\n//     const data = response.data;\n//     if(data.status === \"success\"){\n//         message.success(\"设备创建成功\", 2);\n//         let deviceArray = cookie.load('deviceArray');\n//         cookie.remove('deviceArray', {path:'/'});\n//         deviceArray = [...deviceArray, values.deviceID];\n//         cookie.save('deviceArray', deviceArray, {path:'/'});\n//     }\n//     else if(data.status === \"duplicated\"){\n//         message.warning(\"该设备已被绑定\", 2)\n//     }\n//     else{\n//         message.warning(\"创建设备失败\", 2)\n//     }\n// })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n// export default CreateDevice;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Trace/UploadInfo/index.jsx"],"names":["React","Component","axios","cookie","getWeb3","getEcommerceStore","UploadInfo","constructor","props","state","username","load","web3","truffleContract","getBlockChainInfo","EcommerceStore","setState","currentContract","componentDidMount","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA;AAEA;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CAGA;;;;AACA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAQ/BM,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AADgB,SANpBC,KAMoB,GANZ;AACJC,MAAAA,QAAQ,EAACP,MAAM,CAACQ,IAAP,CAAY,UAAZ,CADL;AAEJC,MAAAA,IAAI,EAAG,IAFH;AAGJC,MAAAA,eAAe,EAAG;AAHd,KAMY;;AAAA,SAIpBC,iBAJoB,GAIA,YAAW;AAC3B,YAAMF,IAAI,GAAG,MAAMR,OAAO,EAA1B;AACA,YAAMW,cAAc,GAAG,MAAMV,iBAAiB,CAACO,IAAD,CAA9C;AACA,WAAKI,QAAL,CAAc;AACVJ,QAAAA,IAAI,EAAEA,IADI;AAEVK,QAAAA,eAAe,EAACF;AAFN,OAAd;AAIH,KAXmB;AAEnB;;AAWDG,EAAAA,iBAAiB,GAAI;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAG,KAAKN,iBAAL,EAAH,EAA4B;AACxBK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KAFD,MAEK;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AACJ;;AAIDC,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AApC8B;;AAuCnC,eAAef,UAAf,C,CAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AACQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies'\nimport {Descriptions, message, Spin, Table, Tag} from \"antd\";\n// import EditDeviceModal from \"../../EditDeviceModal\";\n\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\n\n\n//从数据库拿商品信息\nclass UploadInfo extends Component {\n\n    state = {\n        username:cookie.load('username'),\n        web3 : null,\n        truffleContract : null\n    }\n\n    constructor (props) {\n        super(props);\n    }\n\n    getBlockChainInfo = async() => {\n        const web3 = await getWeb3();\n        const EcommerceStore = await getEcommerceStore(web3);\n        this.setState({\n            web3: web3,\n            currentContract:EcommerceStore\n        });\n    }\n\n    componentDidMount () {\n        console.log(\"生成UploadInfo模块\");\n        if(this.getBlockChainInfo()){\n            console.log(\"成功获得合约信息\");\n        }else{\n            console.log(\"获得合约信息失败\");\n        }\n    }\n\n\n    \n    render () {\n        return (\n            <div>UploadInfo模块</div>\n        );\n    }\n}\n\nexport default UploadInfo;\n\n\n\n\n\n\n\n\n\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\n// class CreateDevice extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n        // axios.post('/createDevice', {\n        //     deviceID:values.deviceID,\n        //     deviceName:values.deviceName,\n        //     ownerName:cookie.load('username')\n        // }).then(response => {\n        //     const data = response.data;\n        //     if(data.status === \"success\"){\n        //         message.success(\"设备创建成功\", 2);\n        //         let deviceArray = cookie.load('deviceArray');\n        //         cookie.remove('deviceArray', {path:'/'});\n        //         deviceArray = [...deviceArray, values.deviceID];\n        //         cookie.save('deviceArray', deviceArray, {path:'/'});\n\n        //     }\n        //     else if(data.status === \"duplicated\"){\n        //         message.warning(\"该设备已被绑定\", 2)\n        //     }\n        //     else{\n        //         message.warning(\"创建设备失败\", 2)\n        //     }\n        // })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n\n// export default CreateDevice;"]},"metadata":{},"sourceType":"module"}