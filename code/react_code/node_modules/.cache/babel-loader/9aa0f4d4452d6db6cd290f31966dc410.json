{"ast":null,"code":"//去mongodb中查询，而不是去区块链查询\nvar ecommerce_store_artifacts = require('../contracts/EcommerceStore.json');\n\nvar contract = require('truffle-contract'); //////////////////////////////////静态\n// //web3 作为参数传入\n// // var Web3 = require('web3');\n// //HttpProvider is deprecated，HttpProvider不支持事件机制\n// // var provider = new Web3.providers.HttpProvider('http://localhost:8545');\n// //New ，WebsocketProvider支持事件机制\n// var provider = new Web3.providers.WebsocketProvider('http://localhost:8545');\n// // console.log(\"provider : \");\n// // console.dir(provider);\n// var EcommerceStore = contract(ecommerce_store_artifacts);\n// EcommerceStore.setProvider(provider);\n/////////////////////////////////动态\n\n\nconst getEcommerceStore = web3 => new Promise((resolve, reject) => {\n  try {\n    var EcommerceStore = contract(ecommerce_store_artifacts);\n    EcommerceStore.setProvider(web3.currentProvider);\n    resolve(EcommerceStore);\n  } catch (err) {\n    reject(err);\n  }\n});\n\nexport default getEcommerceStore;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/utils/getEcommerceStore.js"],"names":["ecommerce_store_artifacts","require","contract","getEcommerceStore","web3","Promise","resolve","reject","EcommerceStore","setProvider","currentProvider","err"],"mappings":"AAAA;AACA,IAAIA,yBAAyB,GAAGC,OAAO,CAAC,kCAAD,CAAvC;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,kBAAD,CAAtB,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;;;AACA,MAAME,iBAAiB,GAAIC,IAAD,IAAU,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjE,MAAI;AACA,QAAIC,cAAc,GAAGN,QAAQ,CAACF,yBAAD,CAA7B;AACAQ,IAAAA,cAAc,CAACC,WAAf,CAA2BL,IAAI,CAACM,eAAhC;AACAJ,IAAAA,OAAO,CAACE,cAAD,CAAP;AACH,GAJD,CAIE,OAAOG,GAAP,EAAY;AACVJ,IAAAA,MAAM,CAACI,GAAD,CAAN;AACH;AAGJ,CAVmC,CAApC;;AAYA,eAAeR,iBAAf","sourcesContent":["//去mongodb中查询，而不是去区块链查询\nvar ecommerce_store_artifacts = require('../contracts/EcommerceStore.json');\nvar contract = require('truffle-contract');\n\n\n//////////////////////////////////静态\n// //web3 作为参数传入\n// // var Web3 = require('web3');\n\n// //HttpProvider is deprecated，HttpProvider不支持事件机制\n// // var provider = new Web3.providers.HttpProvider('http://localhost:8545');\n// //New ，WebsocketProvider支持事件机制\n// var provider = new Web3.providers.WebsocketProvider('http://localhost:8545');\n// // console.log(\"provider : \");\n// // console.dir(provider);\n\n// var EcommerceStore = contract(ecommerce_store_artifacts);\n// EcommerceStore.setProvider(provider);\n\n\n\n/////////////////////////////////动态\nconst getEcommerceStore = (web3) => new Promise((resolve, reject) => {\n    try {\n        var EcommerceStore = contract(ecommerce_store_artifacts);\n        EcommerceStore.setProvider(web3.currentProvider);\n        resolve(EcommerceStore);\n    } catch (err) {\n        reject(err);\n    }\n\n\n})\n\nexport default getEcommerceStore;"]},"metadata":{},"sourceType":"module"}