{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { useEffect, useRef } from 'react';\n\nfunction useMountMergeState(initialState, option) {\n  var mountRef = useRef(false);\n  var frame = useRef(undefined);\n  useEffect(function () {\n    mountRef.current = true;\n    return function () {\n      clearTimeout(frame.current);\n      mountRef.current = false;\n    };\n  }, []);\n\n  var _useMergedState = useMergedState(initialState, option),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      state = _useMergedState2[0],\n      setState = _useMergedState2[1];\n\n  var mountSetState = function mountSetState(prevState) {\n    clearTimeout(frame.current);\n    frame.current = window.setTimeout(function () {\n      if (mountRef.current) {\n        setState(prevState);\n      }\n    }, 16);\n  };\n\n  return [state, mountSetState];\n}\n\nexport default useMountMergeState;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/@ant-design/pro-card/node_modules/@ant-design/pro-utils/es/useMountMergeState/index.js"],"names":["_slicedToArray","useMergedState","useEffect","useRef","useMountMergeState","initialState","option","mountRef","frame","undefined","current","clearTimeout","_useMergedState","_useMergedState2","state","setState","mountSetState","prevState","window","setTimeout"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,MAA1C,EAAkD;AAChD,MAAIC,QAAQ,GAAGJ,MAAM,CAAC,KAAD,CAArB;AACA,MAAIK,KAAK,GAAGL,MAAM,CAACM,SAAD,CAAlB;AACAP,EAAAA,SAAS,CAAC,YAAY;AACpBK,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAnB;AACA,WAAO,YAAY;AACjBC,MAAAA,YAAY,CAACH,KAAK,CAACE,OAAP,CAAZ;AACAH,MAAAA,QAAQ,CAACG,OAAT,GAAmB,KAAnB;AACD,KAHD;AAID,GANQ,EAMN,EANM,CAAT;;AAQA,MAAIE,eAAe,GAAGX,cAAc,CAACI,YAAD,EAAeC,MAAf,CAApC;AAAA,MACIO,gBAAgB,GAAGb,cAAc,CAACY,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIE,KAAK,GAAGD,gBAAgB,CAAC,CAAD,CAF5B;AAAA,MAGIE,QAAQ,GAAGF,gBAAgB,CAAC,CAAD,CAH/B;;AAKA,MAAIG,aAAa,GAAG,SAASA,aAAT,CAAuBC,SAAvB,EAAkC;AACpDN,IAAAA,YAAY,CAACH,KAAK,CAACE,OAAP,CAAZ;AACAF,IAAAA,KAAK,CAACE,OAAN,GAAgBQ,MAAM,CAACC,UAAP,CAAkB,YAAY;AAC5C,UAAIZ,QAAQ,CAACG,OAAb,EAAsB;AACpBK,QAAAA,QAAQ,CAACE,SAAD,CAAR;AACD;AACF,KAJe,EAIb,EAJa,CAAhB;AAKD,GAPD;;AASA,SAAO,CAACH,KAAD,EAAQE,aAAR,CAAP;AACD;;AAED,eAAeZ,kBAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport { useEffect, useRef } from 'react';\n\nfunction useMountMergeState(initialState, option) {\n  var mountRef = useRef(false);\n  var frame = useRef(undefined);\n  useEffect(function () {\n    mountRef.current = true;\n    return function () {\n      clearTimeout(frame.current);\n      mountRef.current = false;\n    };\n  }, []);\n\n  var _useMergedState = useMergedState(initialState, option),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      state = _useMergedState2[0],\n      setState = _useMergedState2[1];\n\n  var mountSetState = function mountSetState(prevState) {\n    clearTimeout(frame.current);\n    frame.current = window.setTimeout(function () {\n      if (mountRef.current) {\n        setState(prevState);\n      }\n    }, 16);\n  };\n\n  return [state, mountSetState];\n}\n\nexport default useMountMergeState;"]},"metadata":{},"sourceType":"module"}