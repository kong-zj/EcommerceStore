{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { Rect } from '../../util/graphic';\nimport * as formatUtil from '../../util/format';\nimport * as layout from '../../util/layout';\nimport VisualMapping from '../../visual/VisualMapping';\nimport ComponentView from '../../view/Component';\n\nvar VisualMapView =\n/** @class */\nfunction (_super) {\n  __extends(VisualMapView, _super);\n\n  function VisualMapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = VisualMapView.type;\n    _this.autoPositionValues = {\n      left: 1,\n      right: 1,\n      top: 1,\n      bottom: 1\n    };\n    return _this;\n  }\n\n  VisualMapView.prototype.init = function (ecModel, api) {\n    this.ecModel = ecModel;\n    this.api = api;\n  };\n  /**\n   * @protected\n   */\n\n\n  VisualMapView.prototype.render = function (visualMapModel, ecModel, api, payload // TODO: TYPE\n  ) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender(visualMapModel, ecModel, api, payload);\n  };\n  /**\n   * @protected\n   */\n\n\n  VisualMapView.prototype.renderBackground = function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new Rect({\n      z2: -1,\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  };\n  /**\n   * @protected\n   * @param targetValue can be Infinity or -Infinity\n   * @param visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param opts\n   * @param opts.forceState Specify state, instead of using getValueState method.\n   * @param opts.convertOpacityToAlpha For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n\n\n  VisualMapView.prototype.getControllerVisual = function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  };\n\n  VisualMapView.prototype.positionGroup = function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  VisualMapView.prototype.doRender = function (visualMapModel, ecModel, api, payload) {};\n\n  VisualMapView.type = 'visualMap';\n  return VisualMapView;\n}(ComponentView);\n\nexport default VisualMapView;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/前端/node_modules/echarts/lib/component/visualMap/VisualMapView.js"],"names":["__extends","zrUtil","Rect","formatUtil","layout","VisualMapping","ComponentView","VisualMapView","_super","_this","apply","arguments","type","autoPositionValues","left","right","top","bottom","prototype","init","ecModel","api","render","visualMapModel","payload","get","group","removeAll","doRender","renderBackground","padding","normalizeCssArray","rect","getBoundingRect","add","z2","silent","shape","x","y","width","height","style","fill","stroke","lineWidth","getControllerVisual","targetValue","visualCluster","opts","forceState","visualObj","symbol","defaultColor","color","getter","key","setter","value","mappings","controllerVisuals","getValueState","visualTypes","prepareVisualTypes","each","visualMapping","convertOpacityToAlpha","__alphaForOpacity","dependsOn","applyVisual","positionGroup","model","positionElement","getBoxLayoutParams","getWidth","getHeight"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { Rect } from '../../util/graphic';\nimport * as formatUtil from '../../util/format';\nimport * as layout from '../../util/layout';\nimport VisualMapping from '../../visual/VisualMapping';\nimport ComponentView from '../../view/Component';\n\nvar VisualMapView =\n/** @class */\nfunction (_super) {\n  __extends(VisualMapView, _super);\n\n  function VisualMapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = VisualMapView.type;\n    _this.autoPositionValues = {\n      left: 1,\n      right: 1,\n      top: 1,\n      bottom: 1\n    };\n    return _this;\n  }\n\n  VisualMapView.prototype.init = function (ecModel, api) {\n    this.ecModel = ecModel;\n    this.api = api;\n  };\n  /**\n   * @protected\n   */\n\n\n  VisualMapView.prototype.render = function (visualMapModel, ecModel, api, payload // TODO: TYPE\n  ) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender(visualMapModel, ecModel, api, payload);\n  };\n  /**\n   * @protected\n   */\n\n\n  VisualMapView.prototype.renderBackground = function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new Rect({\n      z2: -1,\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  };\n  /**\n   * @protected\n   * @param targetValue can be Infinity or -Infinity\n   * @param visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param opts\n   * @param opts.forceState Specify state, instead of using getValueState method.\n   * @param opts.convertOpacityToAlpha For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n\n\n  VisualMapView.prototype.getControllerVisual = function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  };\n\n  VisualMapView.prototype.positionGroup = function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  VisualMapView.prototype.doRender = function (visualMapModel, ecModel, api, payload) {};\n\n  VisualMapView.type = 'visualMap';\n  return VisualMapView;\n}(ComponentView);\n\nexport default VisualMapView;"]},"metadata":{},"sourceType":"module"}