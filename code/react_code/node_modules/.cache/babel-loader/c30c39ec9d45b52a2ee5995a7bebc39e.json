{"ast":null,"code":"import \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/components/Auction/EscrowInfo/index.jsx\";\nimport React, { Component } from \"react\";\nimport { UserOutlined, LaptopOutlined, FileSearchOutlined, HomeOutlined, EyeTwoTone, EyeInvisibleOutlined, RocketOutlined } from '@ant-design/icons';\nimport cookie from \"react-cookies\"; //接入web3\n\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\nimport openNotification from \"../../Notification\"; //this.props.showButton用于在资金处理中，显示处理资金的按钮\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EscrowInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seller: \"NULL\",\n      buyer: \"NULL\",\n      arbiter: \"NULL\",\n      escrowString: \"NULL\"\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"生成EscrowInfo模块\");\n    };\n\n    this.getInfoFromBlockchain = () => {\n      let blockChainID = this.props.dataArray[0].ID;\n      console.log(\"竞拍商品ID : \" + blockChainID);\n      let that = this;\n      this.props.truffleContract.deployed().then(async i => {\n        console.log(\"进入 this.props.truffleContract.deployed() 的回调函数\"); //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n        //即时获取当前地址，用该地址发交易\n\n        let currentAccount = await that.state.web3.eth.getAccounts();\n        console.log(\"交易发起地址为: \" + currentAccount);\n\n        try {\n          //调用合约的 escrowInfo 方法\n          await i.escrowInfo(parseInt(blockChainID), {\n            from: currentAccount.toString()\n          }).then(info => {\n            console.log(\"成功调用合约的escrowInfo方法，返回 : \");\n            console.dir(info);\n            let escrowString = \"\"; //合约中的钱已被转走\n\n            if (info[3] == true) {\n              escrowString = \"合约的资金托管已结束\";\n            } //钱还在合约中\n            else {\n                //启用 release 和 refund 按钮\n                this.props.showButton();\n                escrowString = info[4] + \" of 3 participants have agreed to release funds\";\n                escrowString += info[5] + \" of 3 participants have agreed to refund the buyer\";\n              }\n\n            this.setState({\n              seller: info[0],\n              buyer: info[1],\n              arbiter: info[2],\n              escrowString: escrowString\n            });\n\n            _message.success(\"查询最终资金处理信息成功\", 2);\n          });\n        } catch (err) {\n          _message.error(\"查询最终资金处理信息失败\", 2);\n\n          console.log(\"调用合约的escrowInfo方法失败 \" + err);\n          return;\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u6700\\u7EC8\\u7684\\u8D44\\u91D1\\u5904\\u7406\\u4FE1\\u606F\\u6A21\\u5757\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"seller : \", this.state.seller]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"buyer : \", this.state.buyer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"arbiter : \", this.state.arbiter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.escrowString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EscrowInfo;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/components/Auction/EscrowInfo/index.jsx"],"names":["React","Component","UserOutlined","LaptopOutlined","FileSearchOutlined","HomeOutlined","EyeTwoTone","EyeInvisibleOutlined","RocketOutlined","cookie","getWeb3","getEcommerceStore","openNotification","EscrowInfo","state","seller","buyer","arbiter","escrowString","componentDidMount","console","log","getInfoFromBlockchain","blockChainID","props","dataArray","ID","that","truffleContract","deployed","then","i","currentAccount","web3","eth","getAccounts","escrowInfo","parseInt","from","toString","info","dir","showButton","setState","success","err","error","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport { Menu, Layout, message, Drawer, Space, Button, Divider, Form, InputNumber, Input, Select } from 'antd';\nimport { UserOutlined, LaptopOutlined, FileSearchOutlined, HomeOutlined, EyeTwoTone, EyeInvisibleOutlined, RocketOutlined } from '@ant-design/icons';\nimport cookie from \"react-cookies\";\n//接入web3\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\nimport openNotification from \"../../Notification\";\n\n\n//this.props.showButton用于在资金处理中，显示处理资金的按钮\n\nclass EscrowInfo extends Component {\n\n    state = {\n        seller : \"NULL\",\n        buyer : \"NULL\",\n        arbiter : \"NULL\",\n        escrowString : \"NULL\"\n    }\n\n    componentDidMount = () => {\n        console.log(\"生成EscrowInfo模块\");\n    }\n\n    getInfoFromBlockchain = () => {\n        let blockChainID = this.props.dataArray[0].ID;\n        console.log(\"竞拍商品ID : \" + blockChainID);\n\n        let that = this;\n        this.props.truffleContract.deployed().then(async (i) => {\n            console.log(\"进入 this.props.truffleContract.deployed() 的回调函数\");\n            //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n            //即时获取当前地址，用该地址发交易\n            let currentAccount = await that.state.web3.eth.getAccounts();\n            console.log(\"交易发起地址为: \"+currentAccount);\n\n            try{\n                //调用合约的 escrowInfo 方法\n                await i.escrowInfo(parseInt(blockChainID), { from: currentAccount.toString() }).then(info => {\n                    console.log(\"成功调用合约的escrowInfo方法，返回 : \");\n                    console.dir(info);\n\n                    let escrowString = \"\";\n                    //合约中的钱已被转走\n                    if(info[3] == true){\n                        escrowString = \"合约的资金托管已结束\";\n                    }\n                    //钱还在合约中\n                    else{\n                        //启用 release 和 refund 按钮\n                        this.props.showButton();\n                        escrowString = info[4] + \" of 3 participants have agreed to release funds\";\n                        escrowString += info[5] + \" of 3 participants have agreed to refund the buyer\";\n                    }\n\n                    this.setState({\n                        seller : info[0],\n                        buyer : info[1],\n                        arbiter : info[2],\n                        escrowString : escrowString\n                    })\n\n                    message.success(\"查询最终资金处理信息成功\",2);\n                });\n            }catch(err) {\n                message.error(\"查询最终资金处理信息失败\",2);\n                console.log(\"调用合约的escrowInfo方法失败 \" + err);\n                return;\n            }  \n        });\n    }\n   \n\n \n    \n    render () {\n        return (\n\n            <div>\n \n                        <p>最终的资金处理信息模块</p>\n                <p>seller : {this.state.seller}</p>\n                <p>buyer : {this.state.buyer}</p>\n                <p>arbiter : {this.state.arbiter}</p>\n                <p>{this.state.escrowString}</p>\n\n\n            </div>\n\n        );\n    }\n}\n\nexport default EscrowInfo;\n"]},"metadata":{},"sourceType":"module"}