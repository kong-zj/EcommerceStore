{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/descriptions/style\";\nimport _Descriptions from \"antd/es/descriptions\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/PersonalInfo/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from \"react-cookies\";\nimport { Link } from \"react-router-dom\";\nimport timeDuration from \"../../utils/timeDuration\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PersonalInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: cookie.load('username'),\n      email: cookie.load('email'),\n      accountAndLastTimeArray: []\n    };\n    this.columns = [// {\n    //     title: '设备ID',\n    //     dataIndex: 'deviceID',\n    //     key: 'id',\n    //     render: text => <Link to={{pathname:'/index/editDevice', state:{deviceID:text}}} >{text}</Link>,\n    // },\n    {\n      title: '地址',\n      dataIndex: 'accountString',\n      key: 'accountString'\n    }, {\n      title: '最后上线时间',\n      dataIndex: 'lastTime',\n      key: 'lastTime'\n    }, {\n      title: '状态',\n      key: 'accountStatus',\n      dataIndex: 'accountStatus',\n      render: tag => /*#__PURE__*/_jsxDEV(_Tag, {\n        color: tag === 0 ? 'red' : 'green',\n        children: tag === 0 ? '非活跃' : '活跃'\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }, this)\n    }];\n  }\n\n  componentDidMount() {\n    const deleteSuccess = cookie.load('deleteSuccess');\n\n    if (deleteSuccess !== undefined) {\n      cookie.remove('deleteSuccess', {\n        path: '/'\n      });\n\n      _message.success('删除地址成功', 2);\n    }\n\n    console.log(\"向后端发起获取所有曾用地址的请求\");\n    axios.post(\"/account/showAll\", {\n      username: this.state.username\n    }).then(response => {\n      const data = response.data;\n\n      if (data.status === \"success\") {\n        console.log(\"获取该用户所有曾用地址成功\"); //data.accountAndLastTime 是外层是数组，每个数组元素是字典类型\n        //map 方法，数组映射\n\n        let array = data.accountAndLastTime.map((item, index) => {\n          //计算时间差，判断是否活跃\n          //注意mysql返回的 timestamp 与js中的 Date 的区别，以及相互转换\n          let timeDifference = new Date() - new Date(item.lastTime);\n          console.log(\"这个日期距离现在已经 \" + timeDuration(timeDifference)); //小于一天时间的是活跃账户\n\n          let tag = timeDifference > 24 * 60 * 60 * 1000 ? true : false;\n          return {\n            key: index + 1,\n            accountString: item.accountString,\n            accountStatus: tag ? 0 : 1,\n            //moment库，格式化时间\n            lastTime: moment(item.lastTime).format('yy年M月 D, h:mm:ss a')\n          };\n        });\n        console.log(\"map映射后的要放到列表中的数据 array 为 : \");\n        console.dir(array);\n        this.setState({\n          accountAndLastTimeArray: array\n        });\n      } else {\n        console.log(\"获取该用户所有曾用地址出错\");\n\n        _message.warning(\"获取地址信息出错\").then(r => console.log(r));\n      }\n    });\n  }\n\n  render() {\n    const {\n      username,\n      email,\n      accountAndLastTimeArray\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u4E2A\\u4EBA\\u4FE1\\u606F\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(_Descriptions.Item, {\n          label: \"\\u7528\\u6237\\u540D\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Descriptions.Item, {\n          label: \"\\u90AE\\u7BB1\",\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u66FE\\u7528\\u5730\\u5740\\u4FE1\\u606F\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        },\n        style: {\n          marginTop: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Table, {\n        columns: this.columns,\n        dataSource: accountAndLastTimeArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PersonalInfo;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/PersonalInfo/index.jsx"],"names":["React","Component","axios","cookie","Link","timeDuration","moment","PersonalInfo","state","username","load","email","accountAndLastTimeArray","columns","title","dataIndex","key","render","tag","componentDidMount","deleteSuccess","undefined","remove","path","success","console","log","post","then","response","data","status","array","accountAndLastTime","map","item","index","timeDifference","Date","lastTime","accountString","accountStatus","format","dir","setState","warning","r","xxl","xl","lg","md","sm","xs","marginTop"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEjCO,KAFiC,GAEzB;AAACC,MAAAA,QAAQ,EAACN,MAAM,CAACO,IAAP,CAAY,UAAZ,CAAV;AAAmCC,MAAAA,KAAK,EAACR,MAAM,CAACO,IAAP,CAAY,OAAZ,CAAzC;AAA+DE,MAAAA,uBAAuB,EAAC;AAAvF,KAFyB;AAAA,SAGjCC,OAHiC,GAGvB,CACN;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,KAAK,EAAE,IADX;AAEIC,MAAAA,SAAS,EAAE,eAFf;AAGIC,MAAAA,GAAG,EAAE;AAHT,KAPM,EAYN;AACIF,MAAAA,KAAK,EAAE,QADX;AAEIC,MAAAA,SAAS,EAAE,UAFf;AAGIC,MAAAA,GAAG,EAAE;AAHT,KAZM,EAiBN;AACIF,MAAAA,KAAK,EAAE,IADX;AAEIE,MAAAA,GAAG,EAAE,eAFT;AAGID,MAAAA,SAAS,EAAE,eAHf;AAIIE,MAAAA,MAAM,EAAEC,GAAG,iBAAI;AAAK,QAAA,KAAK,EAAEA,GAAG,KAAK,CAAR,GAAY,KAAZ,GAAoB,OAAhC;AAAA,kBAAoDA,GAAG,KAAK,CAAR,GAAY,KAAZ,GAAoB;AAAxE,SAA8CA,GAA9C;AAAA;AAAA;AAAA;AAAA;AAJnB,KAjBM,CAHuB;AAAA;;AA4BjCC,EAAAA,iBAAiB,GAAI;AACjB,UAAMC,aAAa,GAAGjB,MAAM,CAACO,IAAP,CAAY,eAAZ,CAAtB;;AACA,QAAGU,aAAa,KAAKC,SAArB,EAA+B;AAC3BlB,MAAAA,MAAM,CAACmB,MAAP,CAAc,eAAd,EAA+B;AAACC,QAAAA,IAAI,EAAC;AAAN,OAA/B;;AACA,eAAQC,OAAR,CAAgB,QAAhB,EAAyB,CAAzB;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAxB,IAAAA,KAAK,CAACyB,IAAN,CAAW,kBAAX,EAA+B;AAC3BlB,MAAAA,QAAQ,EAAC,KAAKD,KAAL,CAAWC;AADO,KAA/B,EAEGmB,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAMC,IAAI,GAAID,QAAQ,CAACC,IAAvB;;AACA,UAAGA,IAAI,CAACC,MAAL,KAAgB,SAAnB,EAA6B;AACzBN,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADyB,CAEzB;AACA;;AACA,YAAIM,KAAK,GAAGF,IAAI,CAACG,kBAAL,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrD;AACA;AACA,cAAIC,cAAc,GAAG,IAAIC,IAAJ,KAAa,IAAIA,IAAJ,CAASH,IAAI,CAACI,QAAd,CAAlC;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBrB,YAAY,CAACgC,cAAD,CAAxC,EAJqD,CAKrD;;AACA,cAAInB,GAAG,GAAKmB,cAAc,GAAE,KAAG,EAAH,GAAM,EAAN,GAAS,IAA3B,GAAmC,IAAnC,GAA0C,KAApD;AACA,iBAAO;AACHrB,YAAAA,GAAG,EAAEoB,KAAK,GAAG,CADV;AAEHI,YAAAA,aAAa,EAAEL,IAAI,CAACK,aAFjB;AAGHC,YAAAA,aAAa,EAAEvB,GAAG,GAAG,CAAH,GAAK,CAHpB;AAIH;AACAqB,YAAAA,QAAQ,EAAEjC,MAAM,CAAC6B,IAAI,CAACI,QAAN,CAAN,CAAsBG,MAAtB,CAA6B,oBAA7B;AALP,WAAP;AAOH,SAdW,CAAZ;AAeAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,QAAAA,OAAO,CAACkB,GAAR,CAAYX,KAAZ;AACA,aAAKY,QAAL,CAAc;AAAChC,UAAAA,uBAAuB,EAACoB;AAAzB,SAAd;AAEH,OAvBD,MAwBI;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,iBAAQmB,OAAR,CAAiB,UAAjB,EAA6BjB,IAA7B,CAAmCkB,CAAC,IAAKrB,OAAO,CAACC,GAAR,CAAYoB,CAAZ,CAAzC;AACH;AACJ,KAhCD;AAiCH;;AAED7B,EAAAA,MAAM,GAAI;AACN,UAAM;AAACR,MAAAA,QAAD;AAAWE,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA6C,KAAKJ,KAAxD;AACA,wBACI;AAAA,8BACI;AACI,QAAA,KAAK,EAAC,0BADV;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,MAAM,EAAE;AAAEuC,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,EAAE,EAAE,CAAd;AAAiBC,UAAAA,EAAE,EAAE,CAArB;AAAwBC,UAAAA,EAAE,EAAE,CAA5B;AAA+BC,UAAAA,EAAE,EAAE,CAAnC;AAAsCC,UAAAA,EAAE,EAAE;AAA1C,SAHZ;AAAA,gCAKI,sBAAc,IAAd;AAAmB,UAAA,KAAK,EAAC,oBAAzB;AAAA,oBAAgC3C;AAAhC;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,sBAAc,IAAd;AAAmB,UAAA,KAAK,EAAC,cAAzB;AAAA,oBAA+BE;AAA/B;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AACI,QAAA,KAAK,EAAC,sCADV;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,MAAM,EAAE;AAAEoC,UAAAA,GAAG,EAAE,CAAP;AAAUC,UAAAA,EAAE,EAAE,CAAd;AAAiBC,UAAAA,EAAE,EAAE,CAArB;AAAwBC,UAAAA,EAAE,EAAE,CAA5B;AAA+BC,UAAAA,EAAE,EAAE,CAAnC;AAAsCC,UAAAA,EAAE,EAAE;AAA1C,SAHZ;AAII,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX;AAJX;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI;AAAO,QAAA,OAAO,EAAE,KAAKxC,OAArB;AAA8B,QAAA,UAAU,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AA3FgC;;AA8FrC,eAAeL,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Descriptions, message} from 'antd';\nimport axios from \"axios\";\nimport cookie from \"react-cookies\";\nimport { Table, Tag } from 'antd';\nimport {Link} from \"react-router-dom\";\nimport timeDuration from \"../../utils/timeDuration\";\nimport moment from 'moment';\n\n\nclass PersonalInfo extends Component {\n\n    state = {username:cookie.load('username'), email:cookie.load('email'), accountAndLastTimeArray:[]}\n    columns = [\n        // {\n        //     title: '设备ID',\n        //     dataIndex: 'deviceID',\n        //     key: 'id',\n        //     render: text => <Link to={{pathname:'/index/editDevice', state:{deviceID:text}}} >{text}</Link>,\n        // },\n        {\n            title: '地址',\n            dataIndex: 'accountString',\n            key: 'accountString',\n        },\n        {\n            title: '最后上线时间',\n            dataIndex: 'lastTime',\n            key: 'lastTime',\n        },\n        {\n            title: '状态',\n            key: 'accountStatus',\n            dataIndex: 'accountStatus',\n            render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '非活跃' : '活跃'}</Tag>\n        }\n    ];\n\n    componentDidMount () {\n        const deleteSuccess = cookie.load('deleteSuccess');\n        if(deleteSuccess !== undefined){\n            cookie.remove('deleteSuccess', {path:'/'});\n            message.success('删除地址成功',2);\n        }\n        console.log(\"向后端发起获取所有曾用地址的请求\");\n        axios.post(\"/account/showAll\", {\n            username:this.state.username\n        }).then(response => {\n            const data =  response.data;\n            if(data.status === \"success\"){\n                console.log(\"获取该用户所有曾用地址成功\");\n                //data.accountAndLastTime 是外层是数组，每个数组元素是字典类型\n                //map 方法，数组映射\n                let array = data.accountAndLastTime.map((item, index) => {\n                    //计算时间差，判断是否活跃\n                    //注意mysql返回的 timestamp 与js中的 Date 的区别，以及相互转换\n                    let timeDifference = new Date() - new Date(item.lastTime);\n                    console.log(\"这个日期距离现在已经 \" + timeDuration(timeDifference));\n                    //小于一天时间的是活跃账户\n                    let tag = ( timeDifference> 24*60*60*1000) ? true : false;\n                    return {\n                        key: index + 1,\n                        accountString: item.accountString,\n                        accountStatus: tag ? 0:1,\n                        //moment库，格式化时间\n                        lastTime: moment(item.lastTime).format('yy年M月 D, h:mm:ss a')\n                    }\n                });\n                console.log(\"map映射后的要放到列表中的数据 array 为 : \");\n                console.dir(array);\n                this.setState({accountAndLastTimeArray:array});\n\n            }\n            else{\n                console.log(\"获取该用户所有曾用地址出错\");\n                message.warning (\"获取地址信息出错\").then (r  => console.log(r));\n            }\n        })\n    }\n\n    render () {\n        const {username, email, accountAndLastTimeArray} = this.state;\n        return (\n            <div>\n                <Descriptions\n                    title=\"个人信息\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                >\n                    <Descriptions.Item label=\"用户名\">{username}</Descriptions.Item>\n                    <Descriptions.Item label=\"邮箱\">{email}</Descriptions.Item>\n                </Descriptions>\n                <Descriptions\n                    title=\"曾用地址信息\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    style={{marginTop:'30px'}}\n                />\n                <Table columns={this.columns} dataSource={accountAndLastTimeArray} />\n            </div>\n        );\n    }\n}\n\nexport default PersonalInfo;\n\n\n\n"]},"metadata":{},"sourceType":"module"}