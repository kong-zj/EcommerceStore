{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/UserOrAccount/AlterPwd/index.jsx\";\nimport React, { Component } from 'react';\nimport { LockOutlined, MailOutlined, SendOutlined } from \"@ant-design/icons\";\nimport cookie from \"react-cookies\";\nimport axios from \"axios\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AlterPwd extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      oldPassword: '',\n      newPassword: '',\n      email: '',\n      securityCode: '',\n      emailHelp: null,\n      sendPermit: true,\n      //重新发送验证码倒计时\n      leftTime: 0,\n      hasSend: false,\n      username: cookie.load('username')\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n      const email = e.target.value;\n      const reg = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n\n      if (!reg.test(email)) {\n        this.setState({\n          emailStyle: 'warning',\n          emailHelp: '请输入正确的邮箱格式'\n        });\n      } else {\n        this.setState({\n          emailStyle: 'success',\n          emailHelp: null\n        });\n      }\n    };\n\n    this.repeatPwd = (rule, value) => {\n      if (value && value !== this.state.newPassword) return Promise.reject('两次密码不一致');\n      return Promise.resolve();\n    };\n\n    this.handleOldPassword = e => {\n      this.setState({\n        oldPassword: e.target.value\n      });\n    };\n\n    this.handleNewPassword = e => {\n      this.setState({\n        newPassword: e.target.value\n      });\n    };\n\n    this.handleSecurityCode = e => {\n      this.setState({\n        securityCode: e.target.value\n      });\n    };\n\n    this.handleSubmit1 = () => {\n      let that = this;\n      const {\n        oldPassword,\n        newPassword,\n        email\n      } = that.state;\n      const reg1 = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/;\n      const reg2 = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n\n      if (oldPassword === '' || newPassword === '' || email === '' || !reg1.test(newPassword) || !reg2.test(email) || this.verifyPwd !== newPassword) {\n        console.log(\"修改密码的前置条件不符\");\n        return;\n      }\n\n      axios.post('/alterPwd', {\n        oldPassword,\n        newPassword,\n        email\n      }).then(function (response) {\n        const data = response.data;\n        const result = data.status;\n\n        if (result === 'success') {\n          cookie.save('changeSuccess', true, {\n            path: '/'\n          });\n          cookie.remove('username', {\n            path: '/'\n          });\n          cookie.remove('email', {\n            path: '/'\n          });\n          window.location.href = '/login';\n        } else {\n          _message.warning('邮箱或密码错误', 10);\n        }\n      }).catch(err => {\n        console.log(\"修改密码请求失败, ERR : \" + err);\n      });\n    };\n\n    this.handleSubmit3 = () => {\n      const {\n        securityCode\n      } = this.state;\n      let that = this;\n      const {\n        newPassword,\n        email\n      } = that.state;\n      const reg1 = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/;\n      const reg2 = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n\n      if (newPassword === '' || email === '' || securityCode === '' || !reg1.test(newPassword) || !reg2.test(email) || this.verifyPwd !== newPassword) {\n        console.log(\"修改密码的前置条件不符\");\n        return;\n      } else {\n        axios.post('/forgetPwd', {\n          newPassword: newPassword,\n          email: email,\n          securityCode: securityCode\n        }).then(response => {\n          console.log(response);\n          const data = response.data;\n\n          if (data.status === 'wrong') {\n            _message.warning('验证码错误，请重试', 10);\n          } else if (data.status === 'success') {\n            _message.success('密码更改成功，请登录', 10);\n          } else if (data.status === 'unRegister') {\n            _message.warning('该邮箱未注册，请先注册', 10);\n          } else {\n            _message.warning('服务器繁忙，请稍后再试', 10);\n          }\n        }).catch(err => {\n          console.log(\"通过邮箱验证码改密码失败, ERR : \" + err);\n        });\n      }\n    };\n\n    this.sendSecurityCode = () => {\n      const {\n        email\n      } = this.state;\n      const reg2 = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n      if (email === '' || !reg2.test(email)) return;else {\n        axios.post('/sendSecurityCode', {\n          email: email\n        }).then(response => {\n          this.setState({\n            sendPermit: false\n          }); //验证码有效时间60s\n\n          setTimeout(() => this.setState({\n            sendPermit: true\n          }), 60000); //倒计时60s，每秒刷新一次\n\n          this.setState({\n            leftTime: 60\n          });\n          let id = setInterval(() => {\n            const number = this.state.leftTime;\n            this.setState({\n              leftTime: number - 1\n            });\n\n            if (number === 1) {\n              clearInterval(id);\n            }\n          }, 1000);\n          const data = response.data;\n\n          if (data.status === 'success') {\n            _message.success('验证码已发送至您的邮箱，请注意查收', 10);\n          } else {\n            _message.warning('验证码发送失败，请稍后再试', 10);\n          }\n        }).catch(err => {\n          console.log(\"发送验证码请求失败, ERR : \" + err);\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      username\n    } = this.state; //用户名未定义\n\n    if (username === undefined) {\n      return /*#__PURE__*/_jsxDEV(_Form, {\n        style: {\n          width: this.state.username === undefined ? \"100%\" : \"40%\"\n        },\n        className: 'trueForm',\n        children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"email\",\n          rules: [{\n            required: true,\n            message: '请输入您的邮箱地址',\n            trigger: 'blur'\n          }],\n          validateStatus: this.state.emailStyle,\n          hasFeedback: true,\n          help: this.state.emailHelp,\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 44\n            }, this),\n            placeholder: \"\\u90AE\\u7BB1\",\n            onChange: this.handleEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"newPassword\",\n          rules: [{\n            required: true,\n            message: '请输入您的密码'\n          }, {\n            min: 6,\n            max: 24,\n            message: '密码长度应为8-16个字符',\n            trigger: 'blur'\n          }, {\n            pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/,\n            message: '密码应包含数字和字母，不能有特殊字符'\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 41\n            }, this),\n            type: \"password\",\n            placeholder: \"\\u65B0\\u5BC6\\u7801\",\n            onChange: this.handleNewPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"password2\",\n          rules: [{\n            required: true,\n            message: '请再次确认密码'\n          }, {\n            validator: this.repeatPwd\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n            prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 41\n            }, this),\n            type: \"password\",\n            placeholder: \"\\u786E\\u8BA4\\u65B0\\u5BC6\\u7801\",\n            onChange: e => this.verifyPwd = e.target.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          name: \"securityCode\",\n          rules: [{\n            required: true,\n            message: '请输入验证码'\n          }],\n          children: /*#__PURE__*/_jsxDEV(_Input, {\n            prefix: /*#__PURE__*/_jsxDEV(SendOutlined, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 41\n            }, this),\n            placeholder: \"\\u9A8C\\u8BC1\\u7801\",\n            onChange: this.handleSecurityCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n          id: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"myBtn\",\n            children: [this.state.sendPermit ? /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              className: \"login-form-button\",\n              onClick: this.sendSecurityCode,\n              children: \"\\u53D1\\u9001\\u9A8C\\u8BC1\\u7801\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 61\n            }, this) : /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-form-button\",\n              onClick: this.sendSecurityCode,\n              disabled: true,\n              children: `${this.state.leftTime}s后再次发送`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-form-button\",\n              onClick: this.handleSubmit3,\n              children: \"\\u4FEE\\u6539\\u5BC6\\u7801\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this);\n    } //用户名已定义\n    else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(_Card, {\n            title: \"\\u4FEE\\u6539\\u5BC6\\u7801\",\n            bordered: false,\n            style: {\n              width: '50%'\n            },\n            headStyle: {\n              display: 'flex',\n              justifyContent: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(_Form, {\n              style: {\n                width: \"60%\",\n                marginTop: \"15px\"\n              },\n              id: \"forgetPwd\",\n              children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n                name: \"email\",\n                rules: [{\n                  required: true,\n                  message: '请输入您的邮箱地址',\n                  trigger: 'blur'\n                }],\n                validateStatus: this.state.emailStyle,\n                hasFeedback: true,\n                help: this.state.emailHelp,\n                children: /*#__PURE__*/_jsxDEV(_Input, {\n                  prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {\n                    className: \"site-form-item-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 48\n                  }, this),\n                  placeholder: \"\\u90AE\\u7BB1\",\n                  onChange: this.handleEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n                name: \"oldPassword\",\n                rules: [{\n                  required: true,\n                  message: '请输入旧密码'\n                }],\n                children: /*#__PURE__*/_jsxDEV(_Input, {\n                  prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                    className: \"site-form-item-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 45\n                  }, this),\n                  type: \"password\",\n                  placeholder: \"\\u65E7\\u5BC6\\u7801\",\n                  onChange: this.handleOldPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n                name: \"newPassword\",\n                rules: [{\n                  required: true,\n                  message: '请输入您的密码'\n                }, {\n                  min: 6,\n                  max: 24,\n                  message: '密码长度应为8-16个字符',\n                  trigger: 'blur'\n                }, {\n                  pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/,\n                  message: '密码应包含数字和字母，不能有特殊字符'\n                }],\n                children: /*#__PURE__*/_jsxDEV(_Input, {\n                  prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                    className: \"site-form-item-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 45\n                  }, this),\n                  type: \"password\",\n                  placeholder: \"\\u65B0\\u5BC6\\u7801\",\n                  onChange: this.handleNewPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n                name: \"password2\",\n                rules: [{\n                  required: true,\n                  message: '请再次确认密码'\n                }, {\n                  validator: this.repeatPwd\n                }],\n                children: /*#__PURE__*/_jsxDEV(_Input, {\n                  prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                    className: \"site-form-item-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 45\n                  }, this),\n                  type: \"password\",\n                  placeholder: \"\\u786E\\u8BA4\\u65B0\\u5BC6\\u7801\",\n                  onChange: e => this.verifyPwd = e.target.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n                id: \"buttons\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"myBtn\",\n                  children: /*#__PURE__*/_jsxDEV(_Button, {\n                    type: \"primary\",\n                    htmlType: \"submit\",\n                    className: \"login-form-button\",\n                    onClick: this.handleSubmit1,\n                    children: \"\\u4FEE\\u6539\\u5BC6\\u7801\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }, this);\n      }\n  }\n\n}\n\nexport default AlterPwd;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/UserOrAccount/AlterPwd/index.jsx"],"names":["React","Component","LockOutlined","MailOutlined","SendOutlined","cookie","axios","AlterPwd","state","oldPassword","newPassword","email","securityCode","emailHelp","sendPermit","leftTime","hasSend","username","load","handleEmail","e","setState","target","value","reg","test","emailStyle","repeatPwd","rule","Promise","reject","resolve","handleOldPassword","handleNewPassword","handleSecurityCode","handleSubmit1","that","reg1","reg2","verifyPwd","console","log","post","then","response","data","result","status","save","path","remove","window","location","href","warning","catch","err","handleSubmit3","success","sendSecurityCode","setTimeout","id","setInterval","number","clearInterval","render","undefined","width","required","message","trigger","min","max","pattern","validator","display","justifyContent","marginTop"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,YAAR,EAAsBC,YAAtB,EAAoCC,YAApC,QAAuD,mBAAvD;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BO,KAF6B,GAErB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,WAAW,EAAC,EAFR;AAGJC,MAAAA,KAAK,EAAC,EAHF;AAIJC,MAAAA,YAAY,EAAC,EAJT;AAKJC,MAAAA,SAAS,EAAC,IALN;AAMJC,MAAAA,UAAU,EAAC,IANP;AAOJ;AACAC,MAAAA,QAAQ,EAAC,CARL;AASJC,MAAAA,OAAO,EAAC,KATJ;AAUJC,MAAAA,QAAQ,EAACZ,MAAM,CAACa,IAAP,CAAY,UAAZ;AAVL,KAFqB;;AAAA,SAgB7BC,WAhB6B,GAgBfC,CAAC,IAAI;AACf,WAAKC,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAES,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd;AACA,YAAMZ,KAAK,GAAGS,CAAC,CAACE,MAAF,CAASC,KAAvB;AACA,YAAMC,GAAG,GAAG,qEAAZ;;AACA,UAAI,CAACA,GAAG,CAACC,IAAJ,CAASd,KAAT,CAAL,EAAsB;AAClB,aAAKU,QAAL,CAAc;AAACK,UAAAA,UAAU,EAAC,SAAZ;AAAuBb,UAAAA,SAAS,EAAC;AAAjC,SAAd;AACH,OAFD,MAGI;AACA,aAAKQ,QAAL,CAAc;AAACK,UAAAA,UAAU,EAAC,SAAZ;AAAuBb,UAAAA,SAAS,EAAC;AAAjC,SAAd;AACH;AACJ,KA1B4B;;AAAA,SA4B7Bc,SA5B6B,GA4BjB,CAACC,IAAD,EAAOL,KAAP,KAAiB;AACzB,UAAIA,KAAK,IAAIA,KAAK,KAAK,KAAKf,KAAL,CAAWE,WAAlC,EAA+C,OAAOmB,OAAO,CAACC,MAAR,CAAe,SAAf,CAAP;AAC/C,aAAOD,OAAO,CAACE,OAAR,EAAP;AACH,KA/B4B;;AAAA,SAiC7BC,iBAjC6B,GAiCTZ,CAAC,IAAI;AACrB,WAAKC,QAAL,CAAc;AAACZ,QAAAA,WAAW,EAAEW,CAAC,CAACE,MAAF,CAASC;AAAvB,OAAd;AACH,KAnC4B;;AAAA,SAoC7BU,iBApC6B,GAoCTb,CAAC,IAAI;AACrB,WAAKC,QAAL,CAAc;AAACX,QAAAA,WAAW,EAAEU,CAAC,CAACE,MAAF,CAASC;AAAvB,OAAd;AACH,KAtC4B;;AAAA,SAuC7BW,kBAvC6B,GAuCRd,CAAC,IAAI;AACtB,WAAKC,QAAL,CAAc;AAACT,QAAAA,YAAY,EAAEQ,CAAC,CAACE,MAAF,CAASC;AAAxB,OAAd;AACH,KAzC4B;;AAAA,SA4C7BY,aA5C6B,GA4Cb,MAAM;AAClB,UAAIC,IAAI,GAAG,IAAX;AACA,YAAM;AAAC3B,QAAAA,WAAD;AAAcC,QAAAA,WAAd;AAA2BC,QAAAA;AAA3B,UAAoCyB,IAAI,CAAC5B,KAA/C;AACA,YAAM6B,IAAI,GAAE,8CAAZ;AACA,YAAMC,IAAI,GAAG,qEAAb;;AACA,UAAI7B,WAAW,KAAK,EAAhB,IAAsBC,WAAW,KAAK,EAAtC,IAA4CC,KAAK,KAAK,EAAtD,IAA4D,CAAC0B,IAAI,CAACZ,IAAL,CAAUf,WAAV,CAA7D,IAAuF,CAAC4B,IAAI,CAACb,IAAL,CAAUd,KAAV,CAAxF,IACA,KAAK4B,SAAL,KAAmB7B,WADvB,EACoC;AAChC8B,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;AACH;;AACDnC,MAAAA,KAAK,CAACoC,IAAN,CAAW,WAAX,EAAwB;AACpBjC,QAAAA,WADoB;AAEpBC,QAAAA,WAFoB;AAGpBC,QAAAA;AAHoB,OAAxB,EAKKgC,IALL,CAKU,UAAUC,QAAV,EAAoB;AACtB,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,cAAMC,MAAM,GAAGD,IAAI,CAACE,MAApB;;AACA,YAAID,MAAM,KAAK,SAAf,EAAyB;AACrBzC,UAAAA,MAAM,CAAC2C,IAAP,CAAY,eAAZ,EAA6B,IAA7B,EAAmC;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAnC;AACA5C,UAAAA,MAAM,CAAC6C,MAAP,CAAc,UAAd,EAA0B;AAACD,YAAAA,IAAI,EAAC;AAAN,WAA1B;AACA5C,UAAAA,MAAM,CAAC6C,MAAP,CAAc,OAAd,EAAuB;AAACD,YAAAA,IAAI,EAAC;AAAN,WAAvB;AACAE,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH,SALD,MAMI;AACA,mBAAQC,OAAR,CAAgB,SAAhB,EAA2B,EAA3B;AACH;AACJ,OAjBL,EAkBKC,KAlBL,CAkBWC,GAAG,IAAI;AACVhB,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBe,GAAjC;AACH,OApBL;AAqBH,KA3E4B;;AAAA,SA8E7BC,aA9E6B,GA8Eb,MAAM;AAClB,YAAM;AAAC7C,QAAAA;AAAD,UAAiB,KAAKJ,KAA5B;AACA,UAAI4B,IAAI,GAAG,IAAX;AACA,YAAM;AAAC1B,QAAAA,WAAD;AAAcC,QAAAA;AAAd,UAAuByB,IAAI,CAAC5B,KAAlC;AACA,YAAM6B,IAAI,GAAE,8CAAZ;AACA,YAAMC,IAAI,GAAG,qEAAb;;AACA,UAAI5B,WAAW,KAAK,EAAhB,IAAsBC,KAAK,KAAK,EAAhC,IAAsCC,YAAY,KAAK,EAAvD,IAA6D,CAACyB,IAAI,CAACZ,IAAL,CAAUf,WAAV,CAA9D,IAAwF,CAAC4B,IAAI,CAACb,IAAL,CAAUd,KAAV,CAAzF,IACA,KAAK4B,SAAL,KAAmB7B,WADvB,EACoC;AAChC8B,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;AACH,OAJD,MAKI;AACAnC,QAAAA,KAAK,CAACoC,IAAN,CAAW,YAAX,EAAyB;AAAChC,UAAAA,WAAW,EAAEA,WAAd;AAA2BC,UAAAA,KAAK,EAAEA,KAAlC;AAAyCC,UAAAA,YAAY,EAAEA;AAAvD,SAAzB,EACK+B,IADL,CACUC,QAAQ,IAAI;AACdJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,gBAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;;AACA,cAAGA,IAAI,CAACE,MAAL,KAAgB,OAAnB,EAA2B;AACvB,qBAAQO,OAAR,CAAgB,WAAhB,EAA6B,EAA7B;AACH,WAFD,MAGK,IAAGT,IAAI,CAACE,MAAL,KAAgB,SAAnB,EAA6B;AAC9B,qBAAQW,OAAR,CAAgB,YAAhB,EAA8B,EAA9B;AACH,WAFI,MAGA,IAAGb,IAAI,CAACE,MAAL,KAAgB,YAAnB,EAAgC;AACjC,qBAAQO,OAAR,CAAgB,aAAhB,EAA+B,EAA/B;AACH,WAFI,MAGD;AACA,qBAAQA,OAAR,CAAgB,aAAhB,EAA+B,EAA/B;AACH;AACJ,SAhBL,EAgBOC,KAhBP,CAgBcC,GAAG,IAAI;AACbhB,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBe,GAArC;AACH,SAlBL;AAmBH;AACJ,KA9G4B;;AAAA,SAgH7BG,gBAhH6B,GAgHV,MAAM;AACrB,YAAM;AAAChD,QAAAA;AAAD,UAAU,KAAKH,KAArB;AACA,YAAM8B,IAAI,GAAG,qEAAb;AACA,UAAG3B,KAAK,KAAK,EAAV,IAAgB,CAAC2B,IAAI,CAACb,IAAL,CAAUd,KAAV,CAApB,EAAsC,OAAtC,KACI;AACAL,QAAAA,KAAK,CAACoC,IAAN,CAAW,mBAAX,EAAgC;AAAC/B,UAAAA,KAAK,EAAEA;AAAR,SAAhC,EACKgC,IADL,CACUC,QAAQ,IAAI;AACd,eAAKvB,QAAL,CAAc;AAACP,YAAAA,UAAU,EAAC;AAAZ,WAAd,EADc,CAEd;;AACA8C,UAAAA,UAAU,CAAC,MAAM,KAAKvC,QAAL,CAAc;AAACP,YAAAA,UAAU,EAAC;AAAZ,WAAd,CAAP,EAAyC,KAAzC,CAAV,CAHc,CAId;;AACA,eAAKO,QAAL,CAAc;AAACN,YAAAA,QAAQ,EAAC;AAAV,WAAd;AACA,cAAI8C,EAAE,GAAGC,WAAW,CAAC,MAAM;AACvB,kBAAMC,MAAM,GAAG,KAAKvD,KAAL,CAAWO,QAA1B;AACA,iBAAKM,QAAL,CAAc;AAACN,cAAAA,QAAQ,EAACgD,MAAM,GAAG;AAAnB,aAAd;;AACA,gBAAGA,MAAM,KAAK,CAAd,EAAgB;AACZC,cAAAA,aAAa,CAACH,EAAD,CAAb;AACH;AACJ,WANmB,EAMjB,IANiB,CAApB;AAOA,gBAAMhB,IAAI,GAAGD,QAAQ,CAACC,IAAtB;;AACA,cAAGA,IAAI,CAACE,MAAL,KAAgB,SAAnB,EAA6B;AACzB,qBAAQW,OAAR,CAAgB,mBAAhB,EAAqC,EAArC;AACH,WAFD,MAGI;AACA,qBAAQJ,OAAR,CAAgB,eAAhB,EAAiC,EAAjC;AACH;AACJ,SArBL,EAqBOC,KArBP,CAqBcC,GAAG,IAAI;AACbhB,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBe,GAAlC;AACH,SAvBL;AAwBH;AACJ,KA9I4B;AAAA;;AAgJ7BS,EAAAA,MAAM,GAAI;AACN,UAAM;AAAChD,MAAAA;AAAD,QAAa,KAAKT,KAAxB,CADM,CAEN;;AACA,QAAGS,QAAQ,KAAKiD,SAAhB,EAA0B;AACtB,0BACI;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,KAAK3D,KAAL,CAAWS,QAAX,KAAwBiD,SAAxB,GAAoC,MAApC,GAA6C;AAArD,SAAb;AAA0E,QAAA,SAAS,EAAE,UAArF;AAAA,gCACQ,cAAM,IAAN;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,KAAK,EAAE,CACH;AACIE,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE,WAFb;AAGIC,YAAAA,OAAO,EAAE;AAHb,WADG,CAFX;AASI,UAAA,cAAc,EAAE,KAAK9D,KAAL,CAAWkB,UAT/B;AAUI,UAAA,WAAW,MAVf;AAWI,UAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWK,SAXrB;AAAA,iCAaI;AAAO,YAAA,MAAM,eAAE,QAAC,YAAD;AAAc,cAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAAf;AAAiE,YAAA,WAAW,EAAC,cAA7E;AAAkF,YAAA,QAAQ,EAAE,KAAKM;AAAjG;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,gBADR,eAiBQ,cAAM,IAAN;AACI,UAAA,IAAI,EAAC,aADT;AAEI,UAAA,KAAK,EAAE,CACH;AACIiD,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG,EAKH;AACIE,YAAAA,GAAG,EAAE,CADT;AAEIC,YAAAA,GAAG,EAAE,EAFT;AAGIH,YAAAA,OAAO,EAAE,eAHb;AAIIC,YAAAA,OAAO,EAAE;AAJb,WALG,EAWH;AACIG,YAAAA,OAAO,EAAC,8CADZ;AAEIJ,YAAAA,OAAO,EAAE;AAFb,WAXG,CAFX;AAAA,iCAmBI,eAAO,QAAP;AACI,YAAA,MAAM,eAAE,QAAC,YAAD;AAAc,cAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,WAAW,EAAC,oBAHhB;AAII,YAAA,QAAQ,EAAE,KAAKpC;AAJnB;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,gBAjBR,eA4CQ,cAAM,IAAN;AACI,UAAA,IAAI,EAAC,WADT;AAEI,UAAA,KAAK,EAAE,CACH;AACImC,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG,EAKH;AACIK,YAAAA,SAAS,EAAE,KAAK/C;AADpB,WALG,CAFX;AAAA,iCAYI,eAAO,QAAP;AACI,YAAA,MAAM,eAAE,QAAC,YAAD;AAAc,cAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,WAAW,EAAC,gCAHhB;AAII,YAAA,QAAQ,EAAEP,CAAC,IAAI,KAAKmB,SAAL,GAAiBnB,CAAC,CAACE,MAAF,CAASC;AAJ7C;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,gBA5CR,eAgEQ,cAAM,IAAN;AACI,UAAA,IAAI,EAAC,cADT;AAEI,UAAA,KAAK,EAAE,CACH;AACI6C,YAAAA,QAAQ,EAAE,IADd;AAEIC,YAAAA,OAAO,EAAE;AAFb,WADG,CAFX;AAAA,iCASI;AACI,YAAA,MAAM,eAAE,QAAC,YAAD;AAAc,cAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADZ;AAEI,YAAA,WAAW,EAAC,oBAFhB;AAGI,YAAA,QAAQ,EAAE,KAAKnC;AAHnB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,gBAhER,eAiFQ,cAAM,IAAN;AAAW,UAAA,EAAE,EAAC,SAAd;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,uBAEQ,KAAK1B,KAAL,CAAWM,UAAX,gBAAwB;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,SAAS,EAAC,mBAAjC;AAAqD,cAAA,OAAO,EAAE,KAAK6C,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxB,gBAGI;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,QAAQ,EAAC,QAAhC;AAAyC,cAAA,SAAS,EAAC,mBAAnD;AAAuE,cAAA,OAAO,EAAE,KAAKA,gBAArF;AAAuG,cAAA,QAAQ,MAA/G;AAAA,wBACM,GAAE,KAAKnD,KAAL,CAAWO,QAAS;AAD5B;AAAA;AAAA;AAAA;AAAA,oBALZ,eAWI;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,QAAQ,EAAC,QAAhC;AAAyC,cAAA,SAAS,EAAC,mBAAnD;AAAuE,cAAA,OAAO,EAAE,KAAK0C,aAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAqGH,KAtGD,CAuGA;AAvGA,SAwGI;AACA,4BACI;AAAK,UAAA,KAAK,EAAE;AAACkB,YAAAA,OAAO,EAAC,MAAT;AAAiBC,YAAAA,cAAc,EAAC;AAAhC,WAAZ;AAAA,iCACI;AAAM,YAAA,KAAK,EAAC,0BAAZ;AAAmB,YAAA,QAAQ,EAAE,KAA7B;AAAoC,YAAA,KAAK,EAAE;AAAET,cAAAA,KAAK,EAAE;AAAT,aAA3C;AAA6D,YAAA,SAAS,EAAE;AAACQ,cAAAA,OAAO,EAAC,MAAT;AAAiBC,cAAAA,cAAc,EAAC;AAAhC,aAAxE;AAAA,mCACI;AAAM,cAAA,KAAK,EAAE;AAACT,gBAAAA,KAAK,EAAE,KAAR;AAAeU,gBAAAA,SAAS,EAAC;AAAzB,eAAb;AAA+C,cAAA,EAAE,EAAE,WAAnD;AAAA,sCACI,cAAM,IAAN;AACI,gBAAA,IAAI,EAAC,OADT;AAEI,gBAAA,KAAK,EAAE,CACH;AACIT,kBAAAA,QAAQ,EAAE,IADd;AAEIC,kBAAAA,OAAO,EAAE,WAFb;AAGIC,kBAAAA,OAAO,EAAE;AAHb,iBADG,CAFX;AASI,gBAAA,cAAc,EAAE,KAAK9D,KAAL,CAAWkB,UAT/B;AAUI,gBAAA,WAAW,MAVf;AAWI,gBAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWK,SAXrB;AAAA,uCAaI;AAAO,kBAAA,MAAM,eAAE,QAAC,YAAD;AAAc,oBAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,0BAAf;AAAiE,kBAAA,WAAW,EAAC,cAA7E;AAAkF,kBAAA,QAAQ,EAAE,KAAKM;AAAjG;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAiBI,cAAM,IAAN;AACI,gBAAA,IAAI,EAAC,aADT;AAEI,gBAAA,KAAK,EAAE,CACH;AACIiD,kBAAAA,QAAQ,EAAE,IADd;AAEIC,kBAAAA,OAAO,EAAE;AAFb,iBADG,CAFX;AAAA,uCASI;AACI,kBAAA,MAAM,eAAE,QAAC,YAAD;AAAc,oBAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,0BADZ;AAEI,kBAAA,IAAI,EAAC,UAFT;AAGI,kBAAA,WAAW,EAAC,oBAHhB;AAII,kBAAA,QAAQ,EAAE,KAAKrC;AAJnB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,sBAjBJ,eAkCI,cAAM,IAAN;AACI,gBAAA,IAAI,EAAC,aADT;AAEI,gBAAA,KAAK,EAAE,CACH;AACIoC,kBAAAA,QAAQ,EAAE,IADd;AAEIC,kBAAAA,OAAO,EAAE;AAFb,iBADG,EAKH;AACIE,kBAAAA,GAAG,EAAE,CADT;AAEIC,kBAAAA,GAAG,EAAE,EAFT;AAGIH,kBAAAA,OAAO,EAAE,eAHb;AAIIC,kBAAAA,OAAO,EAAE;AAJb,iBALG,EAWH;AACIG,kBAAAA,OAAO,EAAC,8CADZ;AAEIJ,kBAAAA,OAAO,EAAE;AAFb,iBAXG,CAFX;AAAA,uCAmBI;AACI,kBAAA,MAAM,eAAE,QAAC,YAAD;AAAc,oBAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,0BADZ;AAEI,kBAAA,IAAI,EAAC,UAFT;AAGI,kBAAA,WAAW,EAAC,oBAHhB;AAII,kBAAA,QAAQ,EAAE,KAAKpC;AAJnB;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,sBAlCJ,eA6DI,cAAM,IAAN;AACI,gBAAA,IAAI,EAAC,WADT;AAEI,gBAAA,KAAK,EAAE,CACH;AACImC,kBAAAA,QAAQ,EAAE,IADd;AAEIC,kBAAAA,OAAO,EAAE;AAFb,iBADG,EAKH;AACIK,kBAAAA,SAAS,EAAE,KAAK/C;AADpB,iBALG,CAFX;AAAA,uCAYI;AACI,kBAAA,MAAM,eAAE,QAAC,YAAD;AAAc,oBAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,0BADZ;AAEI,kBAAA,IAAI,EAAC,UAFT;AAGI,kBAAA,WAAW,EAAC,gCAHhB;AAII,kBAAA,QAAQ,EAAEP,CAAC,IAAI,KAAKmB,SAAL,GAAiBnB,CAAC,CAACE,MAAF,CAASC;AAJ7C;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,sBA7DJ,eAkFI,cAAM,IAAN;AAAW,gBAAA,EAAE,EAAC,SAAd;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,OAAf;AAAA,yCACI;AAAQ,oBAAA,IAAI,EAAC,SAAb;AAAuB,oBAAA,QAAQ,EAAC,QAAhC;AAAyC,oBAAA,SAAS,EAAC,mBAAnD;AAAuE,oBAAA,OAAO,EAAE,KAAKY,aAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAlFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAgGH;AACJ;;AA7V4B;;AAgWjC,eAAe5B,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Card, Form, Input, message} from \"antd\";\nimport {LockOutlined, MailOutlined, SendOutlined} from \"@ant-design/icons\";\nimport cookie from \"react-cookies\";\nimport axios from \"axios\";\nimport \"./index.css\"\n\nclass AlterPwd extends Component {\n\n    state = {\n        oldPassword: '',\n        newPassword:'',\n        email:'',\n        securityCode:'',\n        emailHelp:null,\n        sendPermit:true,\n        //重新发送验证码倒计时\n        leftTime:0,\n        hasSend:false,\n        username:cookie.load('username')\n    }\n\n    //修改密码的页面不需要验证邮箱是否存在\n    handleEmail = e => {\n        this.setState({email: e.target.value});\n        const email = e.target.value;\n        const reg = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n        if (!reg.test(email)) {\n            this.setState({emailStyle:'warning', emailHelp:'请输入正确的邮箱格式'});\n        }\n        else{\n            this.setState({emailStyle:'success', emailHelp:null});\n        }\n    }\n\n    repeatPwd = (rule, value) => {\n        if (value && value !== this.state.newPassword) return Promise.reject('两次密码不一致');\n        return Promise.resolve();\n    }\n\n    handleOldPassword = e => {\n        this.setState({oldPassword: e.target.value});\n    }\n    handleNewPassword = e => {\n        this.setState({newPassword: e.target.value});\n    }\n    handleSecurityCode = e => {\n        this.setState({securityCode: e.target.value});\n    }\n\n    //修改密码(已登录)，需要旧密码\n    handleSubmit1 = () => {\n        let that = this;\n        const {oldPassword, newPassword, email} = that.state;\n        const reg1 =/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/;\n        const reg2 = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n        if (oldPassword === '' || newPassword === '' || email === '' || !reg1.test(newPassword) || !reg2.test(email) ||\n            this.verifyPwd !== newPassword) {\n            console.log(\"修改密码的前置条件不符\");\n            return;\n        }\n        axios.post('/alterPwd', {\n            oldPassword,\n            newPassword,\n            email\n        })\n            .then(function (response) {\n                const data = response.data;\n                const result = data.status;\n                if (result === 'success'){\n                    cookie.save('changeSuccess', true, { path: '/' });\n                    cookie.remove('username', {path:'/'});\n                    cookie.remove('email', {path:'/'});\n                    window.location.href = '/login';\n                }\n                else{\n                    message.warning('邮箱或密码错误', 10);\n                }\n            })\n            .catch(err => {\n                console.log(\"修改密码请求失败, ERR : \" + err);\n            });\n    }\n\n    //修改密码(用户忘记密码)，需要邮箱验证码\n    handleSubmit3 = () => {\n        const {securityCode} = this.state;\n        let that = this;\n        const {newPassword, email} = that.state;\n        const reg1 =/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/;\n        const reg2 = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n        if (newPassword === '' || email === '' || securityCode === '' || !reg1.test(newPassword) || !reg2.test(email) ||\n            this.verifyPwd !== newPassword) {\n            console.log(\"修改密码的前置条件不符\");\n            return;\n        }\n        else{\n            axios.post('/forgetPwd', {newPassword: newPassword, email: email, securityCode: securityCode})\n                .then(response => {\n                    console.log(response);\n                    const data = response.data;\n                    if(data.status === 'wrong'){\n                        message.warning('验证码错误，请重试', 10);\n                    }\n                    else if(data.status === 'success'){\n                        message.success('密码更改成功，请登录', 10);\n                    }\n                    else if(data.status === 'unRegister'){\n                        message.warning('该邮箱未注册，请先注册', 10);\n                    }\n                    else{\n                        message.warning('服务器繁忙，请稍后再试', 10);\n                    }\n                }).catch( err => {\n                    console.log(\"通过邮箱验证码改密码失败, ERR : \" + err);\n                })\n        }\n    }\n\n    sendSecurityCode = () => {\n        const {email} = this.state;\n        const reg2 = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n        if(email === '' || !reg2.test(email)) return;\n        else{\n            axios.post('/sendSecurityCode', {email: email})\n                .then(response => {\n                    this.setState({sendPermit:false});\n                    //验证码有效时间60s\n                    setTimeout(() => this.setState({sendPermit:true}), 60000);\n                    //倒计时60s，每秒刷新一次\n                    this.setState({leftTime:60});\n                    let id = setInterval(() => {\n                        const number = this.state.leftTime;\n                        this.setState({leftTime:number - 1});\n                        if(number === 1){\n                            clearInterval(id);\n                        }\n                    }, 1000);\n                    const data = response.data;\n                    if(data.status === 'success'){\n                        message.success('验证码已发送至您的邮箱，请注意查收', 10);\n                    }\n                    else{\n                        message.warning('验证码发送失败，请稍后再试', 10);\n                    }\n                }).catch( err => {\n                    console.log(\"发送验证码请求失败, ERR : \" + err);\n                })\n        }\n    }\n\n    render () {\n        const {username} = this.state\n        //用户名未定义\n        if(username === undefined){\n            return (\n                <Form style={{width: this.state.username === undefined ? \"100%\" : \"40%\"}} className={'trueForm'}>\n                        <Form.Item\n                            name=\"email\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入您的邮箱地址',\n                                    trigger: 'blur'\n                                }\n                            ]}\n                            validateStatus={this.state.emailStyle}\n                            hasFeedback\n                            help={this.state.emailHelp}\n                        >\n                            <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"邮箱\" onChange={this.handleEmail}/>\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"newPassword\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入您的密码',\n                                },\n                                {\n                                    min: 6,\n                                    max: 24,\n                                    message: '密码长度应为8-16个字符',\n                                    trigger: 'blur'\n                                },\n                                {\n                                    pattern:/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/,\n                                    message: '密码应包含数字和字母，不能有特殊字符'\n                                }\n                            ]}\n                        >\n                            <Input.Password\n                                prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                type=\"password\"\n                                placeholder=\"新密码\"\n                                onChange={this.handleNewPassword}\n                            />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"password2\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请再次确认密码',\n                                },\n                                {\n                                    validator: this.repeatPwd\n                                }\n                            ]}\n                        >\n                            <Input.Password\n                                prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                type=\"password\"\n                                placeholder=\"确认新密码\"\n                                onChange={e => this.verifyPwd = e.target.value}\n                            />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"securityCode\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入验证码',\n                                }\n                            ]}\n                        >\n                            <Input\n                                prefix={<SendOutlined className=\"site-form-item-icon\"/>}\n                                placeholder=\"验证码\"\n                                onChange={this.handleSecurityCode}\n                            />\n                        </Form.Item>\n\n\n                        <Form.Item id='buttons'>\n                            <div className='myBtn'>\n                                {\n                                    this.state.sendPermit ? <Button type=\"primary\" className=\"login-form-button\" onClick={this.sendSecurityCode}>\n                                            发送验证码\n                                        </Button>:\n                                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.sendSecurityCode} disabled>\n                                            {`${this.state.leftTime}s后再次发送`}\n                                    </Button>\n\n                                }\n\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.handleSubmit3}>\n                                    修改密码\n                                </Button>\n                            </div>\n                        </Form.Item>\n                    </Form>\n            )\n        }\n        //用户名已定义\n        else{\n            return (\n                <div style={{display:'flex', justifyContent:'center'}}>\n                    <Card title=\"修改密码\" bordered={false} style={{ width: '50%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n                        <Form style={{width: \"60%\", marginTop:\"15px\"}} id={\"forgetPwd\"}>\n                            <Form.Item\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请输入您的邮箱地址',\n                                        trigger: 'blur'\n                                    }\n                                ]}\n                                validateStatus={this.state.emailStyle}\n                                hasFeedback\n                                help={this.state.emailHelp}\n                            >\n                                <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"邮箱\" onChange={this.handleEmail}/>\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"oldPassword\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请输入旧密码',\n                                    }\n                                ]}\n                            >\n                                <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                    type=\"password\"\n                                    placeholder=\"旧密码\"\n                                    onChange={this.handleOldPassword}\n                                />\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"newPassword\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请输入您的密码',\n                                    },\n                                    {\n                                        min: 6,\n                                        max: 24,\n                                        message: '密码长度应为8-16个字符',\n                                        trigger: 'blur'\n                                    },\n                                    {\n                                        pattern:/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/,\n                                        message: '密码应包含数字和字母，不能有特殊字符'\n                                    }\n                                ]}\n                            >\n                                <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                    type=\"password\"\n                                    placeholder=\"新密码\"\n                                    onChange={this.handleNewPassword}\n                                />\n                            </Form.Item>\n\n                            <Form.Item\n                                name=\"password2\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: '请再次确认密码',\n                                    },\n                                    {\n                                        validator: this.repeatPwd\n                                    }\n                                ]}\n                            >\n                                <Input\n                                    prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                    type=\"password\"\n                                    placeholder=\"确认新密码\"\n                                    onChange={e => this.verifyPwd = e.target.value}\n                                />\n                            </Form.Item>\n\n\n                            <Form.Item id='buttons'>\n                                <div className='myBtn'>\n                                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.handleSubmit1}>\n                                        修改密码\n                                    </Button>\n                                </div>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </div>\n            );\n        }\n    }\n}\n\nexport default AlterPwd;"]},"metadata":{},"sourceType":"module"}