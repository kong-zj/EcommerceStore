{"ast":null,"code":"import \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nimport React from 'react';\n\nvar isNeedTranText = function isNeedTranText(item) {\n  var _item$valueType;\n\n  if (item === null || item === void 0 ? void 0 : (_item$valueType = item.valueType) === null || _item$valueType === void 0 ? void 0 : _item$valueType.toString().startsWith('date')) {\n    return true;\n  }\n\n  if ((item === null || item === void 0 ? void 0 : item.valueType) === 'select' || (item === null || item === void 0 ? void 0 : item.valueEnum)) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * 生成 Copyable 或 Ellipsis 的 dom\n *\n * @param dom\n * @param item\n * @param text\n */\n\n\nexport var genCopyable = function genCopyable(dom, item, text) {\n  if (item.copyable || item.ellipsis) {\n    var copyable = item.copyable && text ? {\n      text: text,\n      tooltips: ['', '']\n    } : undefined;\n    /** 有些 valueType 需要设置copy的为string */\n\n    var needTranText = isNeedTranText(item);\n    var ellipsis = item.ellipsis && text ? {\n      tooltip: needTranText ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-table-tooltip-text\"\n      }, dom) : text\n    } : false;\n    return /*#__PURE__*/React.createElement(_Typography.Text, {\n      style: {\n        width: '100%',\n        margin: 0,\n        padding: 0\n      },\n      title: \"\",\n      copyable: copyable,\n      ellipsis: ellipsis\n    }, dom);\n  }\n\n  return dom;\n};","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/@ant-design/pro-card/node_modules/@ant-design/pro-utils/es/genCopyable/index.js"],"names":["_Typography","React","isNeedTranText","item","_item$valueType","valueType","toString","startsWith","valueEnum","genCopyable","dom","text","copyable","ellipsis","tooltips","undefined","needTranText","tooltip","createElement","className","Text","style","width","margin","padding","title"],"mappings":"AAAA,OAAO,0BAAP;AACA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AACjD,MAAIC,eAAJ;;AAEA,MAAID,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4C,CAACC,eAAe,GAAGD,IAAI,CAACE,SAAxB,MAAuC,IAAvC,IAA+CD,eAAe,KAAK,KAAK,CAAxE,GAA4E,KAAK,CAAjF,GAAqFA,eAAe,CAACE,QAAhB,GAA2BC,UAA3B,CAAsC,MAAtC,CAArI,EAAoL;AAClL,WAAO,IAAP;AACD;;AAED,MAAI,CAACJ,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACE,SAAlD,MAAiE,QAAjE,KAA8EF,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmC,KAAK,CAAxC,GAA4CA,IAAI,CAACK,SAA/H,CAAJ,EAA+I;AAC7I,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD,CAZD;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,GAArB,EAA0BP,IAA1B,EAAgCQ,IAAhC,EAAsC;AAC7D,MAAIR,IAAI,CAACS,QAAL,IAAiBT,IAAI,CAACU,QAA1B,EAAoC;AAClC,QAAID,QAAQ,GAAGT,IAAI,CAACS,QAAL,IAAiBD,IAAjB,GAAwB;AACrCA,MAAAA,IAAI,EAAEA,IAD+B;AAErCG,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAF2B,KAAxB,GAGXC,SAHJ;AAIA;;AAEA,QAAIC,YAAY,GAAGd,cAAc,CAACC,IAAD,CAAjC;AACA,QAAIU,QAAQ,GAAGV,IAAI,CAACU,QAAL,IAAiBF,IAAjB,GAAwB;AACrCM,MAAAA,OAAO,EAAED,YAAY,GAAG,aAAaf,KAAK,CAACiB,aAAN,CAAoB,KAApB,EAA2B;AAC9DC,QAAAA,SAAS,EAAE;AADmD,OAA3B,EAElCT,GAFkC,CAAhB,GAEXC;AAH2B,KAAxB,GAIX,KAJJ;AAKA,WAAO,aAAaV,KAAK,CAACiB,aAAN,CAAoBlB,WAAW,CAACoB,IAAhC,EAAsC;AACxDC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,MAAM,EAAE,CAFH;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OADiD;AAMxDC,MAAAA,KAAK,EAAE,EANiD;AAOxDb,MAAAA,QAAQ,EAAEA,QAP8C;AAQxDC,MAAAA,QAAQ,EAAEA;AAR8C,KAAtC,EASjBH,GATiB,CAApB;AAUD;;AAED,SAAOA,GAAP;AACD,CA3BM","sourcesContent":["import \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nimport React from 'react';\n\nvar isNeedTranText = function isNeedTranText(item) {\n  var _item$valueType;\n\n  if (item === null || item === void 0 ? void 0 : (_item$valueType = item.valueType) === null || _item$valueType === void 0 ? void 0 : _item$valueType.toString().startsWith('date')) {\n    return true;\n  }\n\n  if ((item === null || item === void 0 ? void 0 : item.valueType) === 'select' || (item === null || item === void 0 ? void 0 : item.valueEnum)) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * 生成 Copyable 或 Ellipsis 的 dom\n *\n * @param dom\n * @param item\n * @param text\n */\n\n\nexport var genCopyable = function genCopyable(dom, item, text) {\n  if (item.copyable || item.ellipsis) {\n    var copyable = item.copyable && text ? {\n      text: text,\n      tooltips: ['', '']\n    } : undefined;\n    /** 有些 valueType 需要设置copy的为string */\n\n    var needTranText = isNeedTranText(item);\n    var ellipsis = item.ellipsis && text ? {\n      tooltip: needTranText ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-table-tooltip-text\"\n      }, dom) : text\n    } : false;\n    return /*#__PURE__*/React.createElement(_Typography.Text, {\n      style: {\n        width: '100%',\n        margin: 0,\n        padding: 0\n      },\n      title: \"\",\n      copyable: copyable,\n      ellipsis: ellipsis\n    }, dom);\n  }\n\n  return dom;\n};"]},"metadata":{},"sourceType":"module"}