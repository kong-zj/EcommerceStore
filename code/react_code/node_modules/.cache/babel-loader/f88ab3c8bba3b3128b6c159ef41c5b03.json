{"ast":null,"code":"import \"antd/es/timeline/style\";\nimport _Timeline from \"antd/es/timeline\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/components/Tracing/index.jsx\";\nimport React, { Component } from \"react\";\nimport { SmileOutlined } from '@ant-design/icons'; //接入web3\n// import getWeb3 from \"../../../utils/getWeb3\";\n// import getEcommerceStore from \"../../../utils/getEcommerceStore\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Tracing extends Component {\n  // 父组件传入\n  // web3={this.state.web3}\n  // tracingContract={this.state.tracingContract}\n  // class={1}\n  // id={productData.ID}\n  constructor(props) {\n    super(props);\n    this.state = {\n      //存储该商品的溯源时间轴数据\n      Lines: []\n    };\n\n    this.renderTracingDetails = () => {\n      if (this.props.tracingContract === null || this.props.web3 === null) {\n        _message.error(\"连接溯源合约失败\", 2);\n\n        console.log(\"[ERROR]web3 或者 tracingContract 为 null\");\n        return;\n      }\n\n      console.log(\"用来查询的信息 : \");\n      console.log(\"class : \" + this.props.class);\n      console.log(\"id : \" + this.props.id);\n      console.log(\"合约为 : \");\n      console.dir(this.props.tracingContract); //注意回调函数中的this，和外界的this不同，如果向使用外界的this，要赋值成that传过去\n      //注意要使用async，确保先拿到地址，用await关键字确保运行的先后顺序，再用这个地址调用合约方法\n\n      let that = this;\n      this.props.tracingContract.deployed().then(i => {\n        console.log(\"进入 this.state.tracingContract.deployed() 的回调函数\");\n\n        try {\n          i.getInfoLine(this.props.class, this.props.id).then(res => {\n            //可能返回为空，要判断是否真的取到了数据，如果不判断，直接调用，可能出错\n            console.log(\"getInfoLine 取到的原始数据为 : \");\n            console.dir(res);\n            this.setState({\n              Lines: res\n            });\n            console.log(\"this.state.Lines : \");\n            console.dir(this.state.Lines);\n          });\n        } catch (err) {\n          _message.error(\"商品溯源失败\", 2);\n\n          console.log(\"调用合约的getInfoLine方法失败 \" + err);\n        }\n      });\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"生成Tracing模块\"); //从区块链拿数据\n\n    this.renderTracingDetails();\n  } //调用区块链方法，得到该商品的溯源信息\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Timeline, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.Lines.map((item, i) => {\n            {\n              // 0, 1, 2, 3\n              //blue、red、green、gray\n              let iM4 = i % 4;\n              var colorString = iM4 == 0 ? \"blue\" : iM4 == 1 ? \"red\" : iM4 == 2 ? \"green\" : \"gray\";\n            } //item中的信息\n            // 信息发布人\n            // address publisher;\n            // 描述语句的IPFS解析链接\n            // string descLink;\n            // 发生时间\n            // uint exeTime;\n\n            return /*#__PURE__*/_jsxDEV(_Timeline.Item, {\n              color: colorString,\n              children: [\" item = \", item[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(_Timeline.Item, {\n          color: \"green\",\n          children: [\"id = \", this.props.id, \", class = \", this.props.class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(_Timeline.Item, {\n          color: \"red\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Solve initial network problems 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Solve initial network problems 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Solve initial network problems 3 2015-09-01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(_Timeline.Item, {\n          color: \"#00CCFF\",\n          dot: /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 41\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u6EAF\\u6E90\\u529F\\u80FD\\u8FD0\\u884C\\u4E2D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Tracing;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/components/Tracing/index.jsx"],"names":["React","Component","SmileOutlined","Tracing","constructor","props","state","Lines","renderTracingDetails","tracingContract","web3","error","console","log","class","id","dir","that","deployed","then","i","getInfoLine","res","setState","err","componentDidMount","render","map","item","iM4","colorString"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport { message, Timeline } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\n//接入web3\n// import getWeb3 from \"../../../utils/getWeb3\";\n// import getEcommerceStore from \"../../../utils/getEcommerceStore\";\n\nclass Tracing extends Component {\n\n    state = {\n      //存储该商品的溯源时间轴数据\n      Lines : []\n    }\n\n    // 父组件传入\n    // web3={this.state.web3}\n    // tracingContract={this.state.tracingContract}\n    // class={1}\n    // id={productData.ID}\n\n    constructor (props) {\n        super (props);\n    }\n\n\n    async componentDidMount () {\n          console.log(\"生成Tracing模块\");\n          //从区块链拿数据\n          this.renderTracingDetails();      \n    }\n\n\n      //调用区块链方法，得到该商品的溯源信息\n    renderTracingDetails = () => {\n\n      if(this.props.tracingContract === null || this.props.web3 === null){\n          message.error(\"连接溯源合约失败\",2);\n          console.log(\"[ERROR]web3 或者 tracingContract 为 null\");\n          return;\n      }\n\n      console.log(\"用来查询的信息 : \");\n      console.log(\"class : \" + this.props.class);\n      console.log(\"id : \" + this.props.id);\n\n      console.log(\"合约为 : \");\n      console.dir(this.props.tracingContract);\n      \n  \n      //注意回调函数中的this，和外界的this不同，如果向使用外界的this，要赋值成that传过去\n      //注意要使用async，确保先拿到地址，用await关键字确保运行的先后顺序，再用这个地址调用合约方法\n      let that = this;\n      this.props.tracingContract.deployed().then( (i) => {\n          console.log(\"进入 this.state.tracingContract.deployed() 的回调函数\");\n          try{\n              i.getInfoLine(this.props.class, this.props.id).then(res => {\n                  //可能返回为空，要判断是否真的取到了数据，如果不判断，直接调用，可能出错\n                  console.log(\"getInfoLine 取到的原始数据为 : \");\n                  console.dir(res);\n                \n\n                  this.setState({\n                      Lines : res\n                  })\n\n                  console.log(\"this.state.Lines : \");\n                  console.dir(this.state.Lines);\n                  \n              });  \n          }catch(err) {\n              message.error(\"商品溯源失败\",2);\n              console.log(\"调用合约的getInfoLine方法失败 \" + err);\n          }\n\n          \n      });\n  }\n\n  \n    \n\n\n    \n    render () {\n        return (\n\n\n            <div>\n\n<Timeline>\n            <div>\n                {this.state.Lines.map((item,i)=>{\n                    {\n                      // 0, 1, 2, 3\n                      //blue、red、green、gray\n                      let iM4=i%4;\n                      var colorString = iM4==0 ? \"blue\" : (iM4==1 ? \"red\" : (iM4==2 ? \"green\" : \"gray\"));\n                    }\n                    //item中的信息\n                    // 信息发布人\n                    // address publisher;\n                    // 描述语句的IPFS解析链接\n                    // string descLink;\n                    // 发生时间\n                    // uint exeTime;\n                    return <Timeline.Item color={colorString}> item = {item[0]}</Timeline.Item>\n                })}\n            </div>\n\n    \n    <Timeline.Item color=\"green\">id = {this.props.id}, class = {this.props.class}</Timeline.Item>\n    <Timeline.Item color=\"red\">\n      <p>Solve initial network problems 1</p>\n      <p>Solve initial network problems 2</p>\n      <p>Solve initial network problems 3 2015-09-01</p>\n    </Timeline.Item>\n    \n    <Timeline.Item color=\"#00CCFF\" dot={<SmileOutlined />}>\n      <p>溯源功能运行中</p>\n    </Timeline.Item>\n  </Timeline>\n\n            </div>\n        );\n    }\n}\n\nexport default Tracing;\n"]},"metadata":{},"sourceType":"module"}