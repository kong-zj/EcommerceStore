{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/slider/style\";\nimport _Slider from \"antd/es/slider\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/AuctionOut/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api'; // import EditDeviceModal from \"../../EditDeviceModal\";\n\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons'; //显眼的提示\n\nimport openNotification from '../../../components/Notification'; //时间格式化\n//接入合约\n\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\"; //静态资源\n\nimport ProductClass from '../../../static/ProductClass'; //ipfs配置文件\n\nimport ipfsAddAndCatConfig from '../../../config/ipfsAddAndCat';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nconst {\n  RangePicker\n} = _DatePicker; //ipfs实例\n\nconst ipfs = ipfsAPI({\n  host: ipfsAddAndCatConfig.host,\n  port: ipfsAddAndCatConfig.port,\n  protocol: ipfsAddAndCatConfig.protocol\n});\n\nconst suffixSelector = /*#__PURE__*/_jsxDEV(_Form.Item, {\n  name: \"PriceUnit\",\n  noStyle: true,\n  children: /*#__PURE__*/_jsxDEV(_Select, {\n    style: {\n      width: 70\n    },\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      selected: \"selected\",\n      value: \"ETH\",\n      children: \"ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"wei\",\n      children: \"wei\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 5\n}, this);\n\nconst rangeConfig = {\n  rules: [{\n    type: 'array',\n    required: true,\n    message: '请选择时间'\n  }]\n}; //向区块链写入商品信息\n\nclass AuctionOut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: cookie.load('username'),\n      web3: null,\n      truffleContract: null,\n      //读取上传的图片\n      picReader: null\n    };\n\n    this.normFile = e => {\n      console.log(\"上传图片的 getValueFromEvent 调用\");\n      console.log(e);\n      let reader = null; //如果列表里至少有一张图片的话\n\n      if (e.fileList[0] !== undefined) {\n        //这里只拿了第一张图片，用下标索引可以拿到更多张\n        const file = e.fileList[0].originFileObj;\n        reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n        console.log(\"图片读取为 : \");\n        console.log(reader);\n      } else {\n        //清空，防止上传已经取消的\n        reader = null;\n        console.log(\"图片列表为空\");\n      } //在方法的最外层使用 this.setState 更新值，不然组件会一直处于uploading状态\n\n\n      this.setState({\n        picReader: reader\n      });\n      console.log(\"this.state.picReader : \");\n      console.log(this.state.picReader);\n    };\n\n    this.uploadFile = e => {\n      _message.info(\"正在上传图片\", 2);\n\n      console.log(\"上传图片的 customRequest 调用\");\n      console.log(e); //判断是否上传完成\n\n      if (this.state.picReader !== null) {\n        //告诉组件成功了，不要一直 uploading\n        e.onSuccess(200, this.state.picReader);\n      }\n    };\n\n    this.getBlockChainInfo = async () => {\n      try {\n        const web3 = await getWeb3();\n        const EcommerceStore = await getEcommerceStore(web3);\n        this.setState({\n          web3: web3,\n          truffleContract: EcommerceStore\n        });\n\n        _message.success(\"接入智能合约成功\", 2);\n\n        console.log(\"AuctionOut 的 web3 : \");\n        console.dir(web3);\n        console.log(\"AuctionOut 的 EcommerceStore : \");\n        console.dir(this.state.truffleContract);\n        return true;\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`[ERROR]接入智能合约失败.`);\n        console.error(error);\n        return false;\n      }\n    };\n\n    this.onFinish = values => {\n      console.log(\"提交的数据为 : \");\n      console.dir(values); //传过来的数据为\n      //values 已经是json格式了\n      //ProductName (String)\n      //ProductDesc (String)\n      //this.state.picReader \n      //ProductRevealTime (int)\n      //ProductCondition (String)\n      //BeginAndEndTime (长度为2的Moment数组)\n      //ProductClass (字符串数组)\n      //StartPrice (int)\n      //PriceUnit (String)\n      //ProductRevealTime (int) 单位是分钟\n      //如果数据不合法，阻止上链\n\n      if (values.PriceUnit === undefined) {\n        _message.error(\"未选择价格单位\", 2);\n\n        return;\n      } //UploadPic用不到，从字典中删掉\n      //优化传参大小\n\n\n      delete values.UploadPic; //把开始时间和结束时间拆分开，BeginAndEndTime 拆为 AuctionStartTime 和 AuctionEndTime\n\n      let AuctionStartTime = values.BeginAndEndTime[0];\n      let AuctionEndTime = values.BeginAndEndTime[1];\n      values.AuctionStartTime = AuctionStartTime;\n      values.AuctionEndTime = AuctionEndTime;\n      delete values.BeginAndEndTime; // console.log('onFinish 的 values : ', values);\n\n      let decodedParams = {};\n      Object.keys(values).forEach(key => {\n        decodedParams[key] = decodeURIComponent(decodeURI(values[key]));\n      }); // console.log('onFinish 的 values 解析为 decodedParams : ', decodedParams);\n      //decodedParams 进一步格式化\n      //参数全都变成String\n\n      _message.info(\"正在提交拍卖商品数据\", 2);\n\n      try {\n        this.saveProduct(this.state.picReader, decodedParams);\n      } catch (err) {\n        // message.error(\"向链上提交商品数据出错\",2);\n        return;\n      } // message.success(\"向链上提交商品数据成功\",2);\n\n    };\n\n    this.onFinishFailed = errorInfo => {\n      _message.warning(\"请正确填写商品信息\", 2);\n    };\n\n    this.saveProduct = (reader, decodedParams) => {\n      //注意这里的各个函数里的this，已经不再是最外层的this，如果在内层用this，就调用不到外层的函数\n      //想办法用that将外层的this传进去\n      let that = this;\n      let imageId, descId;\n      this.saveImageOnIpfs(reader).then(function (id) {\n        imageId = id;\n        that.saveTextBlobOnIpfs(decodedParams[\"ProductDesc\"]).then(function (id) {\n          descId = id; //ProductDesc用不到，从字典中删掉\n          //优化传参大小\n\n          delete decodedParams.ProductDesc; //只传过去要上区块链的\n\n          that.saveProductToBlockchain(decodedParams, imageId, descId);\n        });\n      });\n    };\n\n    this.saveImageOnIpfs = reader => {\n      return new Promise((resolve, reject) => {\n        //有图片传过来\n        if (reader) {\n          let buffer = Buffer.from(reader.result);\n          ipfs.add(buffer).then(res => {\n            console.log(\"ImgRes: \", res);\n\n            _message.success(\"图片保存成功\", 2);\n\n            resolve(res[0].hash);\n          }).catch(err => {\n            console.error(err);\n\n            _message.error(\"图片保存失败\", 2);\n\n            reject(err);\n          }); //没传图片\n        } else {\n          _message.info(\"未上传商品图片\");\n\n          resolve(\"\");\n        }\n      });\n    };\n\n    this.saveTextBlobOnIpfs = blob => {\n      return new Promise((resolve, reject) => {\n        let buffer = Buffer.from(blob, 'utf-8');\n        ipfs.add(buffer).then(res => {\n          console.log(\"TextRes: \", res);\n\n          _message.success(\"简介文字保存成功\", 2);\n\n          resolve(res[0].hash);\n        }).catch(err => {\n          console.error(err);\n\n          _message.error(\"简介文字保存失败\", 2);\n\n          reject(err);\n        });\n      });\n    };\n\n    this.saveProductToBlockchain = (params, imageId, descId) => {\n      // console.log(\"params in save product: \", params);\n      if (this.state.truffleContract === null || this.state.web3 === null) {\n        _message.error(\"连接合约失败\", 2);\n\n        console.log(\"[ERROR]web3 或者 truffleContract 为 null\");\n        return;\n      } //处理时间\n\n\n      let auctionStartTime = Date.parse(params[\"AuctionStartTime\"]) / 1000;\n      let auctionEndTime = Date.parse(params[\"AuctionEndTime\"]) / 1000; //处理价格，把单位转为 wei\n\n      let startPrice = -1;\n\n      if (params.PriceUnit === \"ETH\") {\n        startPrice = this.state.web3.utils.toWei(params.StartPrice, 'ether');\n      } else if (params.PriceUnit === \"wei\") {\n        startPrice = parseInt(params.StartPrice);\n      } //处理新旧状态，从String变成int\n\n\n      let productCondition = parseInt(params.ProductCondition); //处理揭示报价时间，从String变成int\n\n      let productRevealTime = parseInt(params.ProductRevealTime); //传来的数据已格式化为\n      //params.ProductName (String)\n      //descId (String)\n      //imageId (String)\n      //auctionStartTime (int)\n      //auctionEndTime (int)\n      //productCondition (int)\n      //params.ProductClass (String)\n      //startPrice (int)\n      //productRevealTime (int) 单位是分钟\n\n      console.log(\"最终上传区块链的数据为 : \");\n      console.log(params.ProductName);\n      console.log(descId);\n      console.log(imageId);\n      console.log(params.ProductClass);\n      console.log(startPrice);\n      console.log(auctionStartTime);\n      console.log(auctionEndTime);\n      console.log(productCondition);\n      console.log(productRevealTime);\n      console.log(\"合约为 : \");\n      console.dir(this.state.truffleContract); //注意回调函数中的this，和外界的this不同，如果向使用外界的this，要赋值成that传过去\n      //注意要使用async，确保先拿到地址，用await关键字确保运行的先后顺序，再用这个地址调用合约方法\n\n      let that = this;\n      console.dir(this.state.truffleContract.deployed());\n      this.state.truffleContract.deployed().then(async i => {\n        console.log(\"进入 this.state.truffleContract.deployed() 的回调函数\"); //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n        //即时获取当前地址，用该地址发交易\n\n        let currentAccount = await that.state.web3.eth.getAccounts();\n\n        _message.info(\"交易发起地址为: \" + currentAccount, 2);\n\n        console.log(\"交易发起地址为: \" + currentAccount);\n\n        try {\n          console.log(\"1111111111111\"); //合约中实现事件event NewProduct监听\n\n          await i.addProductToStore(params.ProductName, params.ProductClass, imageId, descId, auctionStartTime, auctionEndTime, startPrice, productCondition, productRevealTime, {\n            from: currentAccount.toString(),\n            gas: 440000\n          }).then(function (f) {\n            //注意这里调用合约方法使用的地址，必须是字符串形式，要用 toString() 转化为字符串\n            _message.success(\"向链上提交商品数据成功\", 2); //强提醒\n\n\n            openNotification(\"商品上链成功\", \"商品名: \" + params.ProductName + \", 起拍价格: \" + params.StartPrice + params.PriceUnit + \", 拍卖开始时间: \" + moment(params.AuctionStartTime).format('yy年M月D日, h:mm:ss a') + \", 拍卖结束时间: \" + moment(params.AuctionEndTime).format('yy年M月D日, h:mm:ss a'), 'bottomLeft');\n            console.log(\"成功调用合约的addProductToStore方法\");\n            console.log(f);\n          });\n        } catch (err) {\n          _message.error(\"向链上提交商品数据失败\", 2);\n\n          console.log(\"调用合约的addProductToStore方法失败 \" + err);\n        }\n      });\n    };\n  } //当文件选择变化时\n  //getValueFromEvent调用它\n\n\n  //componentWillMount在render之前运行\n  //componentDidMount 在render之后运行\n  componentDidMount() {\n    // componentWillMount () {\n    console.log(\"生成AuctionOut模块\");\n\n    if (this.getBlockChainInfo()) {\n      //注意，这里打印 this.state.truffleContract 为 null，因为异步执行\n      // console.log(\"成功获得合约信息, this.state.truffleContract : \");\n      // console.dir(this.state.truffleContract);\n      console.log(\"获得合约信息成功\");\n    } else {\n      console.log(\"获得合约信息失败\");\n    }\n  } //点击提交按钮，表单可以提交时\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(_Card, {\n        title: \"\\u4E0A\\u67B6\\u5F85\\u62CD\\u5356\\u5546\\u54C1\",\n        bordered: false,\n        style: {\n          width: '80%'\n        },\n        headStyle: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Form, {\n          initialValues: {\n            remember: true\n          },\n          onFinish: this.onFinish,\n          onFinishFailed: this.onFinishFailed,\n          style: {\n            margin: \"auto\",\n            width: \"60%\",\n            marginTop: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductName\",\n            rules: [{\n              required: true,\n              message: '请输入商品名称'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              placeholder: \"\\u5546\\u54C1\\u540D\\u79F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductDesc\",\n            label: \"\\u5546\\u54C1\\u4ECB\\u7ECD\",\n            rules: [{\n              required: true,\n              message: '请输入商品介绍'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n              showCount: true,\n              maxLength: 500\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"UploadPic\",\n            label: \"\\u4E0A\\u4F20\\u56FE\\u7247\",\n            valuePropName: \"fileList\",\n            getValueFromEvent: this.normFile,\n            extra: \"\",\n            children: /*#__PURE__*/_jsxDEV(_Upload, {\n              name: \"logo\",\n              customRequest: this.uploadFile,\n              listType: \"picture\",\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 43\n                }, this),\n                children: \"\\u70B9\\u51FB\\u4E0A\\u4F20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductClass\",\n            label: \"\\u5546\\u54C1\\u79CD\\u7C7B\",\n            rules: [{\n              type: 'array',\n              required: true,\n              message: '请选择商品种类'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Cascader, {\n              placeholder: \"\\u8BF7\\u9009\\u62E9\",\n              options: ProductClass\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"StartPrice\",\n            label: \"\\u8D77\\u62CD\\u4EF7\\u683C\",\n            rules: [{\n              required: true,\n              message: '请输入起拍价格'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_InputNumber, {\n              min: 0,\n              addonAfter: suffixSelector,\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"BeginAndEndTime\",\n            label: \"\\u8D77\\u6B62\\u65F6\\u95F4\",\n            ...rangeConfig,\n            children: /*#__PURE__*/_jsxDEV(RangePicker, {\n              showTime: true,\n              format: \"YYYY-MM-DD HH:mm:ss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductCondition\",\n            label: \"\\u4EA7\\u54C1\\u72B6\\u51B5\",\n            rules: [{\n              required: true,\n              message: '请选择状况'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Select, {\n              placeholder: \"\\u8BF7\\u9009\\u62E9\",\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"0\",\n                children: \"\\u5168\\u65B0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"1\",\n                children: \"\\u4E8C\\u624B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductRevealTime\",\n            label: \"\\u63ED\\u793A\\u62A5\\u4EF7\\u6301\\u7EED\\u65F6\\u95F4\",\n            children: /*#__PURE__*/_jsxDEV(_Slider, {\n              marks: {\n                0: '0',\n                20: '20',\n                40: '40',\n                60: '60',\n                80: '80',\n                100: '100 分钟'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            wrapperCol: {\n              offset: 10,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              disabled: this.state.truffleContract === null || this.state.web3 === null,\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"\\u53D1\\u5E03\\u5546\\u54C1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuctionOut;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/AuctionOut/index.jsx"],"names":["React","Component","axios","cookie","ipfsAPI","UploadOutlined","InboxOutlined","openNotification","getWeb3","getEcommerceStore","ProductClass","ipfsAddAndCatConfig","moment","Option","RangePicker","ipfs","host","port","protocol","suffixSelector","width","rangeConfig","rules","type","required","message","AuctionOut","constructor","props","state","username","load","web3","truffleContract","picReader","normFile","e","console","log","reader","fileList","undefined","file","originFileObj","window","FileReader","readAsArrayBuffer","setState","uploadFile","info","onSuccess","getBlockChainInfo","EcommerceStore","success","dir","error","alert","onFinish","values","PriceUnit","UploadPic","AuctionStartTime","BeginAndEndTime","AuctionEndTime","decodedParams","Object","keys","forEach","key","decodeURIComponent","decodeURI","saveProduct","err","onFinishFailed","errorInfo","warning","that","imageId","descId","saveImageOnIpfs","then","id","saveTextBlobOnIpfs","ProductDesc","saveProductToBlockchain","Promise","resolve","reject","buffer","Buffer","from","result","add","res","hash","catch","blob","params","auctionStartTime","Date","parse","auctionEndTime","startPrice","utils","toWei","StartPrice","parseInt","productCondition","ProductCondition","productRevealTime","ProductRevealTime","ProductName","deployed","i","currentAccount","eth","getAccounts","addProductToStore","toString","gas","f","format","componentDidMount","render","display","justifyContent","remember","margin","marginTop","offset","span"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api';\n// import EditDeviceModal from \"../../EditDeviceModal\";\nimport { message, Card} from 'antd';\nimport {\n    Form,\n    Input,\n    InputNumber,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    Upload,\n    AutoComplete,\n    DatePicker,\n    Slider,\n  } from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\n\n//显眼的提示\nimport openNotification from '../../../components/Notification';\n//时间格式化\n\n\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\n\n//静态资源\nimport ProductClass from '../../../static/ProductClass';\n\n//ipfs配置文件\nimport ipfsAddAndCatConfig from '../../../config/ipfsAddAndCat';\nimport moment from 'moment';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n//ipfs实例\nconst ipfs = ipfsAPI({ host: ipfsAddAndCatConfig.host, port: ipfsAddAndCatConfig.port, protocol: ipfsAddAndCatConfig.protocol });\n\n\nconst suffixSelector = (\n    <Form.Item name=\"PriceUnit\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option selected=\"selected\" value=\"ETH\">ETH</Option>\n        <Option value=\"wei\">wei</Option>\n      </Select>\n    </Form.Item>\n);\n\n  const rangeConfig = {\n    rules: [\n      {\n        type: 'array',\n        required: true,\n        message: '请选择时间',\n      },\n    ],\n  };\n\n\n\n\n//向区块链写入商品信息\nclass AuctionOut extends Component {\n\n    state = {\n        username:cookie.load('username'),\n        web3 : null,\n        truffleContract : null,\n        //读取上传的图片\n        picReader : null\n    }\n\n    constructor (props) {\n        super(props);\n    }\n\n    //当文件选择变化时\n    //getValueFromEvent调用它\n    normFile = (e) => {\n        console.log(\"上传图片的 getValueFromEvent 调用\");\n        console.log(e);\n        let reader = null;\n        //如果列表里至少有一张图片的话\n        if(e.fileList[0] !== undefined){\n            //这里只拿了第一张图片，用下标索引可以拿到更多张\n            const file = e.fileList[0].originFileObj;\n            reader = new window.FileReader();\n            reader.readAsArrayBuffer(file);\n            console.log(\"图片读取为 : \");\n            console.log(reader);\n        }else{\n            //清空，防止上传已经取消的\n            reader = null;\n            console.log(\"图片列表为空\");\n        } \n        //在方法的最外层使用 this.setState 更新值，不然组件会一直处于uploading状态\n        this.setState({\n            picReader: reader\n        });\n        console.log(\"this.state.picReader : \");\n        console.log(this.state.picReader);\n    }\n\n\n    //customRequest调用它\n    uploadFile = (e) => {\n        message.info(\"正在上传图片\", 2);\n        console.log(\"上传图片的 customRequest 调用\");\n        console.log(e);\n        //判断是否上传完成\n        if(this.state.picReader !== null){\n            //告诉组件成功了，不要一直 uploading\n            e.onSuccess(200,this.state.picReader);\n        }\n      }\n\n    \n\n    getBlockChainInfo = async() => {\n        try{\n            const web3 = await getWeb3();\n            const EcommerceStore = await getEcommerceStore(web3);\n            this.setState({\n                web3: web3,\n                truffleContract:EcommerceStore\n            });\n            message.success(\"接入智能合约成功\", 2);\n            console.log(\"AuctionOut 的 web3 : \");\n            console.dir(web3);\n            console.log(\"AuctionOut 的 EcommerceStore : \");\n            console.dir(this.state.truffleContract);\n            return true;\n        }catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n              `[ERROR]接入智能合约失败.`,\n            );\n            console.error(error);\n            return false;\n          }\n        \n    }\n\n    //componentWillMount在render之前运行\n    //componentDidMount 在render之后运行\n    componentDidMount () {\n    // componentWillMount () {\n        console.log(\"生成AuctionOut模块\");\n        if(this.getBlockChainInfo()){\n            //注意，这里打印 this.state.truffleContract 为 null，因为异步执行\n            // console.log(\"成功获得合约信息, this.state.truffleContract : \");\n            // console.dir(this.state.truffleContract);\n            console.log(\"获得合约信息成功\");\n        }else{\n            console.log(\"获得合约信息失败\");\n        }\n    }\n\n    //点击提交按钮，表单可以提交时\n    onFinish = (values) => {\n        console.log(\"提交的数据为 : \");\n        console.dir(values);\n        //传过来的数据为\n        //values 已经是json格式了\n        //ProductName (String)\n        //ProductDesc (String)\n        //this.state.picReader \n        //ProductRevealTime (int)\n        //ProductCondition (String)\n        //BeginAndEndTime (长度为2的Moment数组)\n        //ProductClass (字符串数组)\n        //StartPrice (int)\n        //PriceUnit (String)\n        //ProductRevealTime (int) 单位是分钟\n\n        //如果数据不合法，阻止上链\n        if(values.PriceUnit === undefined){\n            message.error(\"未选择价格单位\", 2);\n            return;\n        }\n\n        //UploadPic用不到，从字典中删掉\n        //优化传参大小\n        delete values.UploadPic;\n        //把开始时间和结束时间拆分开，BeginAndEndTime 拆为 AuctionStartTime 和 AuctionEndTime\n        let AuctionStartTime = values.BeginAndEndTime[0]; \n        let AuctionEndTime = values.BeginAndEndTime[1]; \n        values.AuctionStartTime = AuctionStartTime;\n        values.AuctionEndTime = AuctionEndTime;\n        delete values.BeginAndEndTime;\n\n        \n        // console.log('onFinish 的 values : ', values);\n\n        let decodedParams = {};\n        Object.keys(values).forEach(key => {\n            decodedParams[key] = decodeURIComponent(decodeURI(values[key]));\n        });\n        // console.log('onFinish 的 values 解析为 decodedParams : ', decodedParams);\n\n        //decodedParams 进一步格式化\n        //参数全都变成String\n\n        message.info(\"正在提交拍卖商品数据\",2);\n        try{\n            this.saveProduct(this.state.picReader, decodedParams);\n        }catch(err){\n            // message.error(\"向链上提交商品数据出错\",2);\n            return;\n        }\n        // message.success(\"向链上提交商品数据成功\",2);\n\n    }\n\n\n    //点击提交按钮，表单不能提交时\n    onFinishFailed = (errorInfo) => {\n        message.warning(\"请正确填写商品信息\",2);\n    }\n\n\n    //向区块链保存商品入口函数\n    saveProduct = (reader, decodedParams) => {\n        //注意这里的各个函数里的this，已经不再是最外层的this，如果在内层用this，就调用不到外层的函数\n        //想办法用that将外层的this传进去\n        let that = this;\n        let imageId, descId;\n        this.saveImageOnIpfs(reader).then(function(id) {\n            imageId = id;\n            that.saveTextBlobOnIpfs(decodedParams[\"ProductDesc\"]).then(function(id) {\n                descId = id;\n                //ProductDesc用不到，从字典中删掉\n                //优化传参大小\n                delete decodedParams.ProductDesc;\n                //只传过去要上区块链的\n                that.saveProductToBlockchain(decodedParams, imageId, descId);\n            });\n        });\n    }\n    \n    //图片上传ipfs并获取hash\n    saveImageOnIpfs = (reader) => {\n        return new Promise((resolve, reject) => {\n            //有图片传过来\n            if(reader){\n                let buffer = Buffer.from(reader.result);\n                    ipfs.add(buffer).then(res => {\n                    console.log(\"ImgRes: \", res);\n                    message.success(\"图片保存成功\",2);\n                    resolve(res[0].hash);\n                }).catch(err => {\n                    console.error(err);\n                    message.error(\"图片保存失败\",2);\n                    reject(err);\n                });\n            //没传图片\n            } else{\n                message.info(\"未上传商品图片\");\n                resolve(\"\");\n            }\n            \n            \n        });\n    }\n    \n    //简介上传ipfs并获取hash\n    saveTextBlobOnIpfs = (blob) => {\n        return new Promise((resolve, reject) => {\n            let buffer = Buffer.from(blob, 'utf-8');\n            ipfs.add(buffer).then(res => {\n                console.log(\"TextRes: \", res);\n                message.success(\"简介文字保存成功\",2);\n                resolve(res[0].hash);\n            }).catch(err => {\n                console.error(err);\n                message.error(\"简介文字保存失败\",2);\n                reject(err);\n            });\n        });\n    }\n\n    //调用区块链方法\n    saveProductToBlockchain = (params, imageId, descId) => {\n        // console.log(\"params in save product: \", params);\n\n        if(this.state.truffleContract === null || this.state.web3 === null){\n            message.error(\"连接合约失败\",2);\n            console.log(\"[ERROR]web3 或者 truffleContract 为 null\");\n            return;\n        }\n\n        //处理时间\n        let auctionStartTime = Date.parse(params[\"AuctionStartTime\"]) / 1000;\n        let auctionEndTime = Date.parse(params[\"AuctionEndTime\"]) / 1000;\n        //处理价格，把单位转为 wei\n        let startPrice = -1;\n        if(params.PriceUnit === \"ETH\"){\n            startPrice = this.state.web3.utils.toWei(params.StartPrice, 'ether');\n        }else if(params.PriceUnit === \"wei\"){\n            startPrice = parseInt(params.StartPrice);\n        }\n        //处理新旧状态，从String变成int\n        let productCondition = parseInt(params.ProductCondition);\n        //处理揭示报价时间，从String变成int\n        let productRevealTime = parseInt(params.ProductRevealTime);\n\n        //传来的数据已格式化为\n        //params.ProductName (String)\n        //descId (String)\n        //imageId (String)\n        //auctionStartTime (int)\n        //auctionEndTime (int)\n        //productCondition (int)\n        //params.ProductClass (String)\n        //startPrice (int)\n        //productRevealTime (int) 单位是分钟\n\n\n        console.log(\"最终上传区块链的数据为 : \");\n        console.log(params.ProductName);\n        console.log(descId);\n        console.log(imageId);\n        console.log(params.ProductClass);\n        console.log(startPrice);\n        console.log(auctionStartTime);\n        console.log(auctionEndTime);\n        console.log(productCondition);\n        console.log(productRevealTime);\n\n        console.log(\"合约为 : \");\n        console.dir(this.state.truffleContract);\n        \n    \n        //注意回调函数中的this，和外界的this不同，如果向使用外界的this，要赋值成that传过去\n        //注意要使用async，确保先拿到地址，用await关键字确保运行的先后顺序，再用这个地址调用合约方法\n        let that = this;\n        console.dir(this.state.truffleContract.deployed());\n        this.state.truffleContract.deployed().then(async (i) => {\n            console.log(\"进入 this.state.truffleContract.deployed() 的回调函数\");\n            //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n            //即时获取当前地址，用该地址发交易\n            let currentAccount = await that.state.web3.eth.getAccounts();\n            message.info(\"交易发起地址为: \"+currentAccount, 2);\n            console.log(\"交易发起地址为: \"+currentAccount);\n\n            try{\n                console.log(\"1111111111111\");\n                //合约中实现事件event NewProduct监听\n                await i.addProductToStore(params.ProductName, params.ProductClass, imageId, descId, auctionStartTime,\n                    auctionEndTime, startPrice, productCondition, productRevealTime, { from: currentAccount.toString(), gas: 440000 }).then(function(f) {\n                    //注意这里调用合约方法使用的地址，必须是字符串形式，要用 toString() 转化为字符串\n\n                    message.success(\"向链上提交商品数据成功\",2);\n                    //强提醒\n                    openNotification(\"商品上链成功\",\n                    \"商品名: \" + params.ProductName  + \", 起拍价格: \" + params.StartPrice + params.PriceUnit + \", 拍卖开始时间: \" + moment(params.AuctionStartTime).format('yy年M月D日, h:mm:ss a') + \", 拍卖结束时间: \" + moment(params.AuctionEndTime).format('yy年M月D日, h:mm:ss a'),\n                    'bottomLeft');\n                    console.log(\"成功调用合约的addProductToStore方法\");\n                    console.log(f);\n                });  \n            }catch(err) {\n                message.error(\"向链上提交商品数据失败\",2);\n                console.log(\"调用合约的addProductToStore方法失败 \" + err);\n            }\n\n            \n        });\n    }\n\n    \n    render () {\n        return (\n            <div style={{display:'flex', justifyContent:'center'}}>\n            <Card title=\"上架待拍卖商品\" bordered={false} style={{ width: '80%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n                <Form\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={this.onFinish}\n                    onFinishFailed={this.onFinishFailed}\n                    style={{margin:\"auto\", width:\"60%\", marginTop:\"15px\"}}\n                >\n                    <Form.Item\n                        name=\"ProductName\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '请输入商品名称',\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"商品名称\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"ProductDesc\"\n                        label=\"商品介绍\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请输入商品介绍',\n                                },\n                        ]}\n                    >\n                        <Input.TextArea showCount maxLength={500} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"UploadPic\"\n                        label=\"上传图片\"\n                        valuePropName=\"fileList\"\n                        getValueFromEvent={this.normFile}\n                        extra=\"\"\n                    >\n                        <Upload name=\"logo\" \n                            customRequest={this.uploadFile} \n                            listType=\"picture\">\n                            <Button icon={<UploadOutlined />}>点击上传</Button>\n                        </Upload>\n                    </Form.Item>\n                    \n                    <Form.Item\n                        name=\"ProductClass\"\n                        label=\"商品种类\"\n                        rules={[\n                                {\n                                    type: 'array',\n                                    required: true,\n                                    message: '请选择商品种类',\n                                },\n                            ]}\n                    >\n                        <Cascader placeholder=\"请选择\" options={ProductClass} />\n                    </Form.Item>\n\n\n                    <Form.Item\n                        name=\"StartPrice\"\n                        label=\"起拍价格\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请输入起拍价格',\n                                },\n                            ]}\n                    >\n                    <InputNumber\n                        min={0}\n                        addonAfter={suffixSelector}\n                        style={{\n                            width: '100%',\n                        }}\n                    />\n                    </Form.Item>\n\n                    <Form.Item name=\"BeginAndEndTime\" label=\"起止时间\" {...rangeConfig}>\n                        <RangePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"ProductCondition\"\n                        label=\"产品状况\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请选择状况',\n                                },\n                        ]}\n                    >\n                        <Select placeholder=\"请选择\">\n                            <Option value=\"0\">全新</Option>\n                            <Option value=\"1\">二手</Option>\n                        </Select>\n                    </Form.Item>\n\n\n                    <Form.Item name=\"ProductRevealTime\" label=\"揭示报价持续时间\">\n                        <Slider\n                            marks={{\n                                0: '0',\n                                20: '20',\n                                40: '40',\n                                60: '60',\n                                80: '80',\n                                100: '100 分钟',\n                            }}\n                        />\n                    </Form.Item>\n                \n\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 10,\n                            span: 16,\n                        }}\n                    >\n                        <Button disabled={ this.state.truffleContract === null || this.state.web3 === null } type=\"primary\" htmlType=\"submit\">\n                            发布商品\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n        );\n    }\n}\n\nexport default AuctionOut;\n\n"]},"metadata":{},"sourceType":"module"}