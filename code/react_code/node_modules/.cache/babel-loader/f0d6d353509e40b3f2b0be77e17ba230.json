{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic';\nimport MapDraw from '../../component/helper/MapDraw';\nimport ChartView from '../../view/Chart';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\nimport { Z2_EMPHASIS_LIFT } from '../../util/states';\n;\n\nvar MapView =\n/** @class */\nfunction (_super) {\n  __extends(MapView, _super);\n\n  function MapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MapView.type;\n    return _this;\n  }\n\n  MapView.prototype.render = function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  };\n\n  MapView.prototype.remove = function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  };\n\n  MapView.prototype.dispose = function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  };\n\n  MapView.prototype._renderSymbols = function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, originalDataIndex) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(originalDataIndex);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          // TODO\n          fill: mapModel.getData().getVisual('style').fill\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: 8 + (!offset ? Z2_EMPHASIS_LIFT + 1 : 0)\n      }); // Only the series that has the first value on the same region is in charge of rendering the label.\n      // But consider the case:\n      // series: [\n      //     {id: 'X', type: 'map', map: 'm', {data: [{name: 'A', value: 11}, {name: 'B', {value: 22}]},\n      //     {id: 'Y', type: 'map', map: 'm', {data: [{name: 'A', value: 21}, {name: 'C', {value: 33}]}\n      // ]\n      // The offset `0` of item `A` is at series `X`, but of item `C` is at series `Y`.\n      // For backward compatibility, we follow the rule that render label `A` by the\n      // settings on series `X` but render label `C` by the settings on series `Y`.\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name_1 = originalData.getName(originalDataIndex);\n        var fullIndex_1 = fullData.indexOfName(name_1);\n        var itemModel = originalData.getItemModel(originalDataIndex);\n        var labelModel = itemModel.getModel('label');\n        var regionGroup = fullData.getItemGraphicEl(fullIndex_1); // `getFormattedLabel` needs to use `getData` inside. Here\n        // `mapModel.getData()` is shallow cloned from `mainSeries.getData()`.\n        // FIXME\n        // If this is not the `mainSeries`, the item model (like label formatter)\n        // set on original data item will never get. But it has been working\n        // like that from the begining, and this scenario is rarely encountered.\n        // So it won't be fixed until have to.\n\n        setLabelStyle(circle, getLabelStatesModels(itemModel), {\n          labelFetcher: {\n            getFormattedLabel: function (idx, state) {\n              return mapModel.getFormattedLabel(fullIndex_1, state);\n            }\n          }\n        });\n        circle.disableLabelAnimation = true;\n\n        if (!labelModel.get('position')) {\n          circle.setTextConfig({\n            position: 'bottom'\n          });\n        }\n\n        regionGroup.onHoverStateChange = function (toState) {\n          circle.useState(toState);\n        };\n      }\n\n      group.add(circle);\n    });\n  };\n\n  MapView.type = 'map';\n  return MapView;\n}(ChartView);\n\nexport default MapView;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/node_modules/echarts/lib/chart/map/MapView.js"],"names":["__extends","graphic","MapDraw","ChartView","setLabelStyle","getLabelStatesModels","Z2_EMPHASIS_LIFT","MapView","_super","_this","apply","arguments","type","prototype","render","mapModel","ecModel","api","payload","from","uid","group","removeAll","getHostGeoModel","componentType","seriesId","id","needsDrawMap","mapDraw","_mapDraw","add","draw","remove","get","getComponent","_renderSymbols","dispose","originalData","each","mapDimension","value","originalDataIndex","isNaN","layout","getItemLayout","point","offset","circle","Circle","style","fill","getData","getVisual","shape","cx","cy","r","silent","z2","fullData","mainSeries","name_1","getName","fullIndex_1","indexOfName","itemModel","getItemModel","labelModel","getModel","regionGroup","getItemGraphicEl","labelFetcher","getFormattedLabel","idx","state","disableLabelAnimation","setTextConfig","position","onHoverStateChange","toState","useState"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic';\nimport MapDraw from '../../component/helper/MapDraw';\nimport ChartView from '../../view/Chart';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\nimport { Z2_EMPHASIS_LIFT } from '../../util/states';\n;\n\nvar MapView =\n/** @class */\nfunction (_super) {\n  __extends(MapView, _super);\n\n  function MapView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MapView.type;\n    return _this;\n  }\n\n  MapView.prototype.render = function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  };\n\n  MapView.prototype.remove = function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  };\n\n  MapView.prototype.dispose = function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  };\n\n  MapView.prototype._renderSymbols = function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, originalDataIndex) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(originalDataIndex);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          // TODO\n          fill: mapModel.getData().getVisual('style').fill\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: 8 + (!offset ? Z2_EMPHASIS_LIFT + 1 : 0)\n      }); // Only the series that has the first value on the same region is in charge of rendering the label.\n      // But consider the case:\n      // series: [\n      //     {id: 'X', type: 'map', map: 'm', {data: [{name: 'A', value: 11}, {name: 'B', {value: 22}]},\n      //     {id: 'Y', type: 'map', map: 'm', {data: [{name: 'A', value: 21}, {name: 'C', {value: 33}]}\n      // ]\n      // The offset `0` of item `A` is at series `X`, but of item `C` is at series `Y`.\n      // For backward compatibility, we follow the rule that render label `A` by the\n      // settings on series `X` but render label `C` by the settings on series `Y`.\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name_1 = originalData.getName(originalDataIndex);\n        var fullIndex_1 = fullData.indexOfName(name_1);\n        var itemModel = originalData.getItemModel(originalDataIndex);\n        var labelModel = itemModel.getModel('label');\n        var regionGroup = fullData.getItemGraphicEl(fullIndex_1); // `getFormattedLabel` needs to use `getData` inside. Here\n        // `mapModel.getData()` is shallow cloned from `mainSeries.getData()`.\n        // FIXME\n        // If this is not the `mainSeries`, the item model (like label formatter)\n        // set on original data item will never get. But it has been working\n        // like that from the begining, and this scenario is rarely encountered.\n        // So it won't be fixed until have to.\n\n        setLabelStyle(circle, getLabelStatesModels(itemModel), {\n          labelFetcher: {\n            getFormattedLabel: function (idx, state) {\n              return mapModel.getFormattedLabel(fullIndex_1, state);\n            }\n          }\n        });\n        circle.disableLabelAnimation = true;\n\n        if (!labelModel.get('position')) {\n          circle.setTextConfig({\n            position: 'bottom'\n          });\n        }\n\n        regionGroup.onHoverStateChange = function (toState) {\n          circle.useState(toState);\n        };\n      }\n\n      group.add(circle);\n    });\n  };\n\n  MapView.type = 'map';\n  return MapView;\n}(ChartView);\n\nexport default MapView;"]},"metadata":{},"sourceType":"module"}