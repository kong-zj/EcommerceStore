{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/Selling/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons'; //显眼的提示\n\nimport openNotification from '../../../components/Notification'; //时间格式化\n//接入合约\n\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getShopping from \"../../../utils/getShopping\"; //静态资源\n\nimport ProductClass from '../../../static/ProductClass';\nimport ProductOrigin from '../../../static/ProductOrigin'; //ipfs配置文件\n\nimport ipfsAddAndCatConfig from '../../../config/ipfsAddAndCat';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nconst {\n  RangePicker\n} = _DatePicker; //ipfs实例\n\nconst ipfs = ipfsAPI({\n  host: ipfsAddAndCatConfig.host,\n  port: ipfsAddAndCatConfig.port,\n  protocol: ipfsAddAndCatConfig.protocol\n});\n\nconst suffixSelector = /*#__PURE__*/_jsxDEV(_Form.Item, {\n  name: \"PriceUnit\",\n  noStyle: true,\n  children: /*#__PURE__*/_jsxDEV(_Select, {\n    style: {\n      width: 70\n    },\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      selected: \"selected\",\n      value: \"ETH\",\n      children: \"ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"wei\",\n      children: \"wei\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 5\n}, this); //向区块链写入商品信息\n\n\nclass Selling extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: cookie.load('username'),\n      web3: null,\n      truffleContract: null,\n      //读取上传的图片\n      picReader: []\n    };\n\n    this.normFile = e => {\n      console.log(\"上传图片的 getValueFromEvent 调用\");\n      console.log(e);\n      let reader = []; //清空，防止重复上传\n\n      this.setState({\n        picReader: null\n      }); //如果列表里至少有一张图片的话\n\n      let fileLength = e.fileList.length;\n\n      if (fileLength !== 0) {\n        //用下标索引可以拿到更多张\n        for (let index = 0; index < fileLength; index++) {\n          const file = e.fileList[index].originFileObj;\n          reader[index] = new window.FileReader();\n          reader[index].readAsArrayBuffer(file);\n          console.log(\"读取第 \" + (index + 1) + \" 张图片\");\n        }\n      } else {\n        //清空，防止上传已经取消的\n        reader = null;\n        console.log(\"图片列表为空\");\n      } //在方法的最外层使用 this.setState 更新值，不然组件会一直处于uploading状态\n\n\n      this.setState({\n        picReader: reader\n      });\n      console.log(\"this.state.picReader : \");\n      console.log(this.state.picReader);\n    };\n\n    this.uploadFile = e => {\n      _message.info(\"正在上传图片\", 2);\n\n      console.log(\"上传图片的 customRequest 调用\");\n      console.log(e); //判断是否上传完成\n\n      if (this.state.picReader !== null) {\n        //告诉组件成功了，不要一直 uploading\n        e.onSuccess(200, this.state.picReader);\n      }\n    };\n\n    this.getBlockChainInfo = async () => {\n      try {\n        const web3 = await getWeb3();\n        const Shopping = await getShopping(web3);\n        this.setState({\n          web3: web3,\n          truffleContract: Shopping\n        });\n\n        _message.success(\"接入智能合约成功\", 2);\n\n        console.log(\"Selling 的 web3 : \");\n        console.dir(web3);\n        console.log(\"Selling 的 Shopping : \");\n        console.dir(this.state.truffleContract);\n        return true;\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`[ERROR]接入智能合约失败.`);\n        console.error(error);\n        return false;\n      }\n    };\n\n    this.onFinish = values => {\n      console.log(\"提交的数据为 : \");\n      console.dir(values); //传过来的数据为\n      // FinishTime: \"7\"\n      // PriceUnit: \"ETH\"\n      // ProduceAmount: 3\n      // ProducePrice: 1\n      // ProductAddress: (2) [4, 48202]\n      // ProductClass: (2) ['艺术品', '画作']\n      // ProductDesc: \"111\"\n      // ProductName: \"11\"\n      //如果数据不合法，阻止上链\n\n      if (values.PriceUnit === undefined) {\n        _message.error(\"未选择价格单位\", 2);\n\n        return;\n      }\n\n      values.address0 = values.ProductAddress[0];\n      values.address1 = values.ProductAddress[1]; //UploadPic用不到，从字典中删掉\n      //优化传参大小\n\n      delete values.UploadPic;\n      delete values.ProductAddress; // console.log('onFinish 的 values : ', values);\n      //保证安全，防注入\n\n      let decodedParams = {};\n      Object.keys(values).forEach(key => {\n        decodedParams[key] = decodeURIComponent(decodeURI(values[key]));\n      });\n      console.log('onFinish 的 values 解析为 decodedParams : ', decodedParams); //decodedParams 进一步格式化\n      //参数全都变成String\n\n      _message.info(\"正在提交拍卖商品数据\", 2);\n\n      try {\n        this.saveProduct(this.state.picReader, decodedParams);\n      } catch (err) {\n        // message.error(\"向链上提交商品数据出错\",2);\n        return;\n      } // message.success(\"向链上提交商品数据成功\",2);\n\n    };\n\n    this.onFinishFailed = errorInfo => {\n      _message.warning(\"请正确填写商品信息\", 2);\n    };\n\n    this.saveProduct = (reader, decodedParams) => {\n      //注意这里的各个函数里的this，已经不再是最外层的this，如果在内层用this，就调用不到外层的函数\n      //想办法用that将外层的this传进去\n      let that = this;\n      let imageIdArray, descId;\n      this.saveImageOnIpfs(reader).then(function (idArray) {\n        imageIdArray = idArray;\n        that.saveTextBlobOnIpfs(decodedParams[\"ProductDesc\"]).then(function (id) {\n          descId = id; //ProductDesc用不到，从字典中删掉\n          //优化传参大小\n\n          delete decodedParams.ProductDesc; //只传过去要上区块链的\n\n          that.saveProductToBlockchain(decodedParams, imageIdArray, descId);\n        });\n      });\n    };\n\n    this.saveImageOnIpfs = reader => {\n      return new Promise((resolve, reject) => {\n        //一共几张图片\n        let readerLength = reader.length; //有图片传过来\n\n        if (readerLength > 0) {\n          //存放结果数组\n          let hashArray = [];\n          let isSuccess = true;\n\n          for (let index = 0; index < readerLength; index++) {\n            let buffer = Buffer.from(reader[index].result); //一次IPFS上传\n\n            ipfs.add(buffer).then(res => {\n              console.log(\"ImgRes: \", res);\n              hashArray[index] = res[0].hash;\n            }).catch(err => {\n              console.error(err);\n              isSuccess = false;\n\n              _message.error(\"图片保存失败\", 2);\n\n              reject(err);\n            });\n          }\n\n          if (isSuccess) {\n            _message.success(\"图片保存成功\", 2);\n          }\n\n          resolve(hashArray); //没传图片\n        } else {\n          _message.info(\"未上传商品图片\");\n\n          resolve(\"\");\n        }\n      });\n    };\n\n    this.saveTextBlobOnIpfs = blob => {\n      return new Promise((resolve, reject) => {\n        let buffer = Buffer.from(blob, 'utf-8');\n        ipfs.add(buffer).then(res => {\n          console.log(\"TextRes: \", res);\n\n          _message.success(\"简介文字保存成功\", 2);\n\n          resolve(res[0].hash);\n        }).catch(err => {\n          console.error(err);\n\n          _message.error(\"简介文字保存失败\", 2);\n\n          reject(err);\n        });\n      });\n    };\n\n    this.saveProductToBlockchain = (params, imageIdArray, descId) => {\n      // console.log(\"params in save product: \", params);\n      if (this.state.truffleContract === null || this.state.web3 === null) {\n        _message.error(\"连接合约失败\", 2);\n\n        console.log(\"[ERROR]web3 或者 truffleContract 为 null\");\n        return;\n      } //处理价格，把单位转为 wei\n\n\n      let price = -1;\n\n      if (params.PriceUnit === \"ETH\") {\n        price = this.state.web3.utils.toWei(params.ProductPrice, 'ether');\n      } else if (params.PriceUnit === \"wei\") {\n        price = parseInt(params.ProductPrice);\n      } //处理库存数量，从String变成int\n\n\n      let produceAmount = parseInt(params.ProduceAmount); //处理发货时效，从String变成int\n\n      let finishTime = parseInt(params.FinishTime); //传来的数据已格式化为\n      // FinishTime: \"1\"\n      // PriceUnit: \"ETH\"\n      // ProduceAmount: 111\n      // price: 1\n      // ProductClass: \"艺术品,画作\"\n      // ProductName: \"111\"\n      // address0: \"4\"\n      // address1: \"51028\"\n\n      console.log(\"最终上传区块链的数据为 : \");\n      console.log(params.ProductName);\n      console.log(descId);\n      console.log(imageIdArray);\n      console.log(params.ProductClass);\n      console.log(price);\n      console.log(produceAmount);\n      console.log(finishTime);\n      console.log(\"合约为 : \");\n      console.dir(this.state.truffleContract); //注意回调函数中的this，和外界的this不同，如果向使用外界的this，要赋值成that传过去\n      //注意要使用async，确保先拿到地址，用await关键字确保运行的先后顺序，再用这个地址调用合约方法\n\n      let that = this;\n      console.dir(this.state.truffleContract.deployed());\n      this.state.truffleContract.deployed().then(async i => {\n        console.log(\"进入 this.state.truffleContract.deployed() 的回调函数\"); //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n        //即时获取当前地址，用该地址发交易\n\n        let currentAccount = await that.state.web3.eth.getAccounts();\n\n        _message.info(\"交易发起地址为: \" + currentAccount, 2);\n\n        console.log(\"交易发起地址为: \" + currentAccount);\n\n        try {\n          //由 imageId 改为 imageIdArray，图片由一张变多张\n          //合约中实现事件event NewProduct监听\n          await i.addProductToStore(params.ProductName, params.ProductClass, imageIdArray, descId, auctionStartTime, auctionEndTime, startPrice, productCondition, productRevealTime, {\n            from: currentAccount.toString()\n          }).then(function (f) {\n            //注意这里调用合约方法使用的地址，必须是字符串形式，要用 toString() 转化为字符串\n            _message.success(\"向链上提交商品数据成功\", 2); //强提醒\n\n\n            openNotification(\"商品上链成功\", \"商品名: \" + params.ProductName + \", 起拍价格: \" + params.StartPrice + params.PriceUnit + \", 拍卖开始时间: \" + moment(params.AuctionStartTime).format('yy年M月D日, h:mm:ss a') + \", 拍卖结束时间: \" + moment(params.AuctionEndTime).format('yy年M月D日, h:mm:ss a'), 'bottomLeft');\n            console.log(\"成功调用合约的addProductToStore方法\");\n            console.log(f);\n          });\n        } catch (err) {\n          _message.error(\"向链上提交商品数据失败\", 2);\n\n          console.log(\"调用合约的addProductToStore方法失败, err =\");\n          console.dir(err);\n        }\n      });\n    };\n  } //当文件选择变化时\n  //getValueFromEvent调用它\n\n\n  componentDidMount() {\n    console.log(\"生成Selling模块\");\n\n    if (this.getBlockChainInfo()) {\n      //注意，这里打印 this.state.truffleContract 为 null，因为异步执行\n      // console.log(\"成功获得合约信息, this.state.truffleContract : \");\n      // console.dir(this.state.truffleContract);\n      console.log(\"获得合约信息成功\");\n    } else {\n      console.log(\"获得合约信息失败\");\n    }\n  } //点击提交按钮，表单可以提交时\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(_Card, {\n        title: \"\\u4E0A\\u67B6\\u5F85\\u51FA\\u552E\\u5546\\u54C1\",\n        bordered: false,\n        style: {\n          width: '80%'\n        },\n        headStyle: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Form, {\n          initialValues: {\n            remember: true\n          },\n          onFinish: this.onFinish,\n          onFinishFailed: this.onFinishFailed,\n          style: {\n            margin: \"auto\",\n            width: \"60%\",\n            marginTop: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductName\",\n            rules: [{\n              required: true,\n              message: '请输入商品名称'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              placeholder: \"\\u5546\\u54C1\\u540D\\u79F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductDesc\",\n            label: \"\\u5546\\u54C1\\u4ECB\\u7ECD\",\n            rules: [{\n              required: true,\n              message: '请输入商品介绍'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n              showCount: true,\n              maxLength: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"UploadPic\",\n            label: \"\\u4E0A\\u4F20\\u56FE\\u7247\",\n            valuePropName: \"fileList\",\n            getValueFromEvent: this.normFile,\n            extra: \"\",\n            children: /*#__PURE__*/_jsxDEV(_Upload, {\n              name: \"logo\",\n              customRequest: this.uploadFile,\n              listType: \"picture\",\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 43\n                }, this),\n                children: \"\\u70B9\\u51FB\\u4E0A\\u4F20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductClass\",\n            label: \"\\u5546\\u54C1\\u79CD\\u7C7B\",\n            rules: [{\n              type: 'array',\n              required: true,\n              message: '请选择商品种类'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Cascader, {\n              placeholder: \"\\u8BF7\\u9009\\u62E9\",\n              options: ProductClass\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProducePrice\",\n            label: \"\\u5546\\u54C1\\u4EF7\\u683C\",\n            rules: [{\n              required: true,\n              message: '请输入商品价格'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_InputNumber, {\n              addonAfter: suffixSelector,\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProduceAmount\",\n            label: \"\\u5546\\u54C1\\u5E93\\u5B58\",\n            rules: [{\n              required: true,\n              message: '请输入商品库存'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_InputNumber, {\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"FinishTime\",\n            label: \"\\u53D1\\u8D27\\u65F6\\u6548\",\n            children: /*#__PURE__*/_jsxDEV(_Radio.Group, {\n              children: [/*#__PURE__*/_jsxDEV(_Radio, {\n                value: \"1\",\n                children: \"1\\u5929\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(_Radio, {\n                value: \"3\",\n                children: \"3\\u5929\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(_Radio, {\n                value: \"7\",\n                children: \"7\\u5929\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductAddress\",\n            label: \"\\u53D1\\u8D27\\u5730\",\n            rules: [{\n              type: 'array',\n              required: true,\n              message: '请选择发货地'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Cascader, {\n              placeholder: \"\\u8BF7\\u9009\\u62E9\",\n              options: ProductOrigin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            wrapperCol: {\n              offset: 10,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"\\u53D1\\u5E03\\u5546\\u54C1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Selling;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/Selling/index.jsx"],"names":["React","Component","axios","cookie","ipfsAPI","UploadOutlined","InboxOutlined","openNotification","getWeb3","getShopping","ProductClass","ProductOrigin","ipfsAddAndCatConfig","moment","Option","RangePicker","ipfs","host","port","protocol","suffixSelector","width","Selling","constructor","props","state","username","load","web3","truffleContract","picReader","normFile","e","console","log","reader","setState","fileLength","fileList","length","index","file","originFileObj","window","FileReader","readAsArrayBuffer","uploadFile","info","onSuccess","getBlockChainInfo","Shopping","success","dir","error","alert","onFinish","values","PriceUnit","undefined","address0","ProductAddress","address1","UploadPic","decodedParams","Object","keys","forEach","key","decodeURIComponent","decodeURI","saveProduct","err","onFinishFailed","errorInfo","warning","that","imageIdArray","descId","saveImageOnIpfs","then","idArray","saveTextBlobOnIpfs","id","ProductDesc","saveProductToBlockchain","Promise","resolve","reject","readerLength","hashArray","isSuccess","buffer","Buffer","from","result","add","res","hash","catch","blob","params","price","utils","toWei","ProductPrice","parseInt","produceAmount","ProduceAmount","finishTime","FinishTime","ProductName","deployed","i","currentAccount","eth","getAccounts","addProductToStore","auctionStartTime","auctionEndTime","startPrice","productCondition","productRevealTime","toString","f","StartPrice","AuctionStartTime","format","AuctionEndTime","componentDidMount","render","display","justifyContent","remember","margin","marginTop","required","message","type","offset","span"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api';\nimport { message, Card, Radio} from 'antd';\nimport {\n    Form,\n    Input,\n    InputNumber,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    Upload,\n    AutoComplete,\n    DatePicker,\n    Slider,\n  } from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\n\n//显眼的提示\nimport openNotification from '../../../components/Notification';\n//时间格式化\n\n\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getShopping from \"../../../utils/getShopping\";\n\n//静态资源\nimport ProductClass from '../../../static/ProductClass';\nimport ProductOrigin from '../../../static/ProductOrigin';\n\n//ipfs配置文件\nimport ipfsAddAndCatConfig from '../../../config/ipfsAddAndCat';\nimport moment from 'moment';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n//ipfs实例\nconst ipfs = ipfsAPI({ host: ipfsAddAndCatConfig.host, port: ipfsAddAndCatConfig.port, protocol: ipfsAddAndCatConfig.protocol });\n\n\nconst suffixSelector = (\n    <Form.Item name=\"PriceUnit\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option selected=\"selected\" value=\"ETH\">ETH</Option>\n        <Option value=\"wei\">wei</Option>\n      </Select>\n    </Form.Item>\n);\n\n\n//向区块链写入商品信息\nclass Selling extends Component {\n\n    state = {\n        username:cookie.load('username'),\n        web3 : null,\n        truffleContract : null,\n        //读取上传的图片\n        picReader : []\n    }\n\n    constructor (props) {\n        super(props);\n    }\n\n    //当文件选择变化时\n    //getValueFromEvent调用它\n    normFile = (e) => {\n        console.log(\"上传图片的 getValueFromEvent 调用\");\n        console.log(e);\n        let reader = [];\n\n        //清空，防止重复上传\n        this.setState({\n            picReader: null\n        });\n\n        //如果列表里至少有一张图片的话\n        let fileLength = e.fileList.length;\n        if(fileLength !== 0){\n            //用下标索引可以拿到更多张\n            for(let index=0; index<fileLength; index++){\n                const file = e.fileList[index].originFileObj;\n                reader[index] = new window.FileReader();\n                reader[index].readAsArrayBuffer(file);\n                console.log(\"读取第 \" + (index+1) + \" 张图片\");\n            }  \n        }else{\n            //清空，防止上传已经取消的\n            reader = null;\n            console.log(\"图片列表为空\");\n        } \n        //在方法的最外层使用 this.setState 更新值，不然组件会一直处于uploading状态\n        this.setState({\n            picReader: reader\n        });\n        console.log(\"this.state.picReader : \");\n        console.log(this.state.picReader);\n    }\n\n\n    //customRequest调用它\n    uploadFile = (e) => {\n        message.info(\"正在上传图片\", 2);\n        console.log(\"上传图片的 customRequest 调用\");\n        console.log(e);\n        //判断是否上传完成\n        if(this.state.picReader !== null){\n            //告诉组件成功了，不要一直 uploading\n            e.onSuccess(200,this.state.picReader);\n        }\n      }\n\n    \n\n    getBlockChainInfo = async() => {\n        try{\n            const web3 = await getWeb3();\n            const Shopping = await getShopping(web3);\n            this.setState({\n                web3: web3,\n                truffleContract:Shopping\n            });\n            message.success(\"接入智能合约成功\", 2);\n            console.log(\"Selling 的 web3 : \");\n            console.dir(web3);\n            console.log(\"Selling 的 Shopping : \");\n            console.dir(this.state.truffleContract);\n            return true;\n        }catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n              `[ERROR]接入智能合约失败.`,\n            );\n            console.error(error);\n            return false;\n          }\n        \n    }\n\n    componentDidMount () {\n        console.log(\"生成Selling模块\");\n        if(this.getBlockChainInfo()){\n            //注意，这里打印 this.state.truffleContract 为 null，因为异步执行\n            // console.log(\"成功获得合约信息, this.state.truffleContract : \");\n            // console.dir(this.state.truffleContract);\n            console.log(\"获得合约信息成功\");\n        }else{\n            console.log(\"获得合约信息失败\");\n        }\n    }\n\n    //点击提交按钮，表单可以提交时\n    onFinish = (values) => {\n        console.log(\"提交的数据为 : \");\n        console.dir(values);\n        //传过来的数据为\n        // FinishTime: \"7\"\n        // PriceUnit: \"ETH\"\n        // ProduceAmount: 3\n        // ProducePrice: 1\n        // ProductAddress: (2) [4, 48202]\n        // ProductClass: (2) ['艺术品', '画作']\n        // ProductDesc: \"111\"\n        // ProductName: \"11\"\n\n        //如果数据不合法，阻止上链\n        if(values.PriceUnit === undefined){\n            message.error(\"未选择价格单位\", 2);\n            return;\n        }\n        \n        values.address0 = values.ProductAddress[0];\n        values.address1 = values.ProductAddress[1];\n        //UploadPic用不到，从字典中删掉\n        //优化传参大小\n        delete values.UploadPic;\n        delete values.ProductAddress;\n        \n        // console.log('onFinish 的 values : ', values);\n\n        //保证安全，防注入\n        let decodedParams = {};\n        Object.keys(values).forEach(key => {\n            decodedParams[key] = decodeURIComponent(decodeURI(values[key]));\n        });\n        console.log('onFinish 的 values 解析为 decodedParams : ', decodedParams);\n\n        //decodedParams 进一步格式化\n        //参数全都变成String\n\n        message.info(\"正在提交拍卖商品数据\",2);\n        try{\n            this.saveProduct(this.state.picReader, decodedParams);\n        }catch(err){\n            // message.error(\"向链上提交商品数据出错\",2);\n            return;\n        }\n        // message.success(\"向链上提交商品数据成功\",2);\n\n    }\n\n\n    //点击提交按钮，表单不能提交时\n    onFinishFailed = (errorInfo) => {\n        message.warning(\"请正确填写商品信息\",2);\n    }\n\n\n    //向区块链保存商品入口函数\n    saveProduct = (reader, decodedParams) => {\n        //注意这里的各个函数里的this，已经不再是最外层的this，如果在内层用this，就调用不到外层的函数\n        //想办法用that将外层的this传进去\n        let that = this;\n        let imageIdArray, descId;\n        this.saveImageOnIpfs(reader).then(function(idArray) {\n            imageIdArray = idArray;\n            that.saveTextBlobOnIpfs(decodedParams[\"ProductDesc\"]).then(function(id) {\n                descId = id;\n                //ProductDesc用不到，从字典中删掉\n                //优化传参大小\n                delete decodedParams.ProductDesc;\n                //只传过去要上区块链的\n                that.saveProductToBlockchain(decodedParams, imageIdArray, descId);\n            });\n        });\n    }\n    \n    //图片上传ipfs并获取hash\n    //一个商品对应多张图片\n    saveImageOnIpfs = (reader) => {\n        return new Promise((resolve, reject) => {\n            //一共几张图片\n            let readerLength = reader.length;\n            //有图片传过来\n            if(readerLength >0){\n                //存放结果数组\n                let hashArray = [];\n                let isSuccess = true;\n                for(let index=0; index < readerLength; index++){\n                    let buffer = Buffer.from(reader[index].result);\n                    //一次IPFS上传\n                    ipfs.add(buffer).then(res => {\n                        console.log(\"ImgRes: \", res);\n                        hashArray[index] = res[0].hash;\n                    }).catch(err => {\n                        console.error(err);\n                        isSuccess = false;\n                        message.error(\"图片保存失败\",2);\n                        reject(err);\n                    });\n\n                }\n                if(isSuccess){\n                    message.success(\"图片保存成功\", 2);\n                }\n                resolve(hashArray);\n            //没传图片\n            } else{\n                message.info(\"未上传商品图片\");\n                resolve(\"\");\n            }\n            \n            \n        });\n    }\n    \n    //简介上传ipfs并获取hash\n    saveTextBlobOnIpfs = (blob) => {\n        return new Promise((resolve, reject) => {\n            let buffer = Buffer.from(blob, 'utf-8');\n            ipfs.add(buffer).then(res => {\n                console.log(\"TextRes: \", res);\n                message.success(\"简介文字保存成功\",2);\n                resolve(res[0].hash);\n            }).catch(err => {\n                console.error(err);\n                message.error(\"简介文字保存失败\",2);\n                reject(err);\n            });\n        });\n    }\n\n    //调用区块链方法\n    //由 imageId 改为 imageIdArray，图片由一张变多张\n    saveProductToBlockchain = (params, imageIdArray, descId) => {\n        // console.log(\"params in save product: \", params);\n\n        if(this.state.truffleContract === null || this.state.web3 === null){\n            message.error(\"连接合约失败\",2);\n            console.log(\"[ERROR]web3 或者 truffleContract 为 null\");\n            return;\n        }\n\n        //处理价格，把单位转为 wei\n        let price = -1;\n        if(params.PriceUnit === \"ETH\"){\n            price = this.state.web3.utils.toWei(params.ProductPrice, 'ether');\n        }else if(params.PriceUnit === \"wei\"){\n            price = parseInt(params.ProductPrice);\n        }\n        //处理库存数量，从String变成int\n        let produceAmount = parseInt(params.ProduceAmount);\n        //处理发货时效，从String变成int\n        let finishTime = parseInt(params.FinishTime);\n\n        //传来的数据已格式化为\n        // FinishTime: \"1\"\n        // PriceUnit: \"ETH\"\n        // ProduceAmount: 111\n        // price: 1\n        // ProductClass: \"艺术品,画作\"\n        // ProductName: \"111\"\n        // address0: \"4\"\n        // address1: \"51028\"\n\n\n        console.log(\"最终上传区块链的数据为 : \");\n        console.log(params.ProductName);\n        console.log(descId);\n        console.log(imageIdArray);\n        console.log(params.ProductClass);\n        console.log(price);\n        console.log(produceAmount);\n        console.log(finishTime);\n\n        console.log(\"合约为 : \");\n        console.dir(this.state.truffleContract);\n        \n    \n        //注意回调函数中的this，和外界的this不同，如果向使用外界的this，要赋值成that传过去\n        //注意要使用async，确保先拿到地址，用await关键字确保运行的先后顺序，再用这个地址调用合约方法\n        let that = this;\n        console.dir(this.state.truffleContract.deployed());\n        this.state.truffleContract.deployed().then(async (i) => {\n            console.log(\"进入 this.state.truffleContract.deployed() 的回调函数\");\n            //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n            //即时获取当前地址，用该地址发交易\n            let currentAccount = await that.state.web3.eth.getAccounts();\n            message.info(\"交易发起地址为: \"+currentAccount, 2);\n            console.log(\"交易发起地址为: \"+currentAccount);\n\n            try{\n                //由 imageId 改为 imageIdArray，图片由一张变多张\n                //合约中实现事件event NewProduct监听\n                await i.addProductToStore(params.ProductName, params.ProductClass, imageIdArray, descId, auctionStartTime,\n                    auctionEndTime, startPrice, productCondition, productRevealTime, { from: currentAccount.toString()}).then(function(f) {\n                    //注意这里调用合约方法使用的地址，必须是字符串形式，要用 toString() 转化为字符串\n\n                    message.success(\"向链上提交商品数据成功\",2);\n                    //强提醒\n                    openNotification(\"商品上链成功\",\n                    \"商品名: \" + params.ProductName  + \", 起拍价格: \" + params.StartPrice + params.PriceUnit + \", 拍卖开始时间: \" + moment(params.AuctionStartTime).format('yy年M月D日, h:mm:ss a') + \", 拍卖结束时间: \" + moment(params.AuctionEndTime).format('yy年M月D日, h:mm:ss a'),\n                    'bottomLeft');\n                    console.log(\"成功调用合约的addProductToStore方法\");\n                    console.log(f);\n                });  \n            }catch(err) {\n                message.error(\"向链上提交商品数据失败\",2);\n                console.log(\"调用合约的addProductToStore方法失败, err =\");\n                console.dir(err);\n            }\n\n            \n        });\n    }\n\n    \n    render () {\n        return (\n            <div style={{display:'flex', justifyContent:'center'}}>\n            <Card title=\"上架待出售商品\" bordered={false} style={{ width: '80%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n                <Form\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={this.onFinish}\n                    onFinishFailed={this.onFinishFailed}\n                    style={{margin:\"auto\", width:\"60%\", marginTop:\"15px\"}}\n                >\n                    <Form.Item\n                        name=\"ProductName\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '请输入商品名称',\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"商品名称\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"ProductDesc\"\n                        label=\"商品介绍\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请输入商品介绍',\n                                },\n                        ]}\n                    >\n                        <Input.TextArea showCount maxLength={100} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"UploadPic\"\n                        label=\"上传图片\"\n                        valuePropName=\"fileList\"\n                        getValueFromEvent={this.normFile}\n                        extra=\"\"\n                    >\n                        <Upload name=\"logo\" customRequest={this.uploadFile} listType=\"picture\">\n                            <Button icon={<UploadOutlined />}>点击上传</Button>\n                        </Upload>\n                    </Form.Item>\n                    \n                    <Form.Item\n                        name=\"ProductClass\"\n                        label=\"商品种类\"\n                        rules={[\n                                {\n                                    type: 'array',\n                                    required: true,\n                                    message: '请选择商品种类',\n                                },\n                            ]}\n                    >\n                        <Cascader placeholder=\"请选择\" options={ProductClass} />\n                    </Form.Item>\n\n\n                    <Form.Item\n                        name=\"ProducePrice\"\n                        label=\"商品价格\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请输入商品价格',\n                                },\n                            ]}\n                    >\n                    <InputNumber\n                        addonAfter={suffixSelector}\n                        style={{\n                            width: '100%',\n                        }}\n                    />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"ProduceAmount\"\n                        label=\"商品库存\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请输入商品库存',\n                                },\n                            ]}\n                    >\n                    <InputNumber\n                        style={{\n                            width: '100%',\n                        }}\n                    />\n                    </Form.Item>\n\n                    <Form.Item name=\"FinishTime\" label=\"发货时效\">\n                        <Radio.Group>\n                            <Radio value=\"1\">1天</Radio>\n                            <Radio value=\"3\">3天</Radio>\n                            <Radio value=\"7\">7天</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"ProductAddress\"\n                        label=\"发货地\"\n                        rules={[\n                                {\n                                    type: 'array',\n                                    required: true,\n                                    message: '请选择发货地',\n                                },\n                            ]}\n                    >\n                        <Cascader placeholder=\"请选择\" options={ProductOrigin} />\n                    </Form.Item>\n\n\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 10,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            发布商品\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n        );\n    }\n}\n\nexport default Selling;\n\n"]},"metadata":{},"sourceType":"module"}