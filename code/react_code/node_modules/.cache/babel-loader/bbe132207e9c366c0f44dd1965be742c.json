{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Register/index.jsx\";\nimport React, { Component } from 'react';\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n      nameRepeated: false,\n      emailRepeated: false,\n      nameStyle: '',\n      emailStyle: '',\n      nameHelp: null,\n      emailHelp: null,\n      id1: undefined,\n      id2: undefined\n    };\n\n    this.handleUsername = e => {\n      //e.target.value 就等价于 $('target1').val()\n      const username = e.target.value;\n      const reg = /[0-9A-Za-z]{6,12}$/; //判断格式\n\n      if (username.length < 6 || !reg.test(username)) {\n        this.setState({\n          nameStyle: 'warning',\n          nameHelp: '用户名应为6-12个英文字符或数字'\n        });\n        return;\n      } //设置加载中样式\n\n\n      this.setState({\n        username,\n        nameStyle: 'validating'\n      });\n      clearTimeout(this.state.id1); //防抖\n      //延时1s，增加动画效果\n\n      let id = setTimeout(() => {\n        let that = this;\n        axios.post('/register', {\n          username\n        }).then(function (response) {\n          const data = response.data;\n          const result = data.status;\n\n          if (result === 'repeated') {\n            that.setState({\n              nameRepeated: true,\n              nameStyle: 'error',\n              nameHelp: '该用户名已存在'\n            });\n          } else {\n            that.setState({\n              nameRepeated: false,\n              nameStyle: 'success',\n              nameHelp: '该用户名可用'\n            });\n          }\n        }).catch(err => {\n          console.log(\"验证用户名是否可用请求失败, ERR : \" + err);\n        });\n      }, 1000);\n      this.setState({\n        id1: id\n      });\n    };\n\n    this.handleEmail = e => {\n      const email = e.target.value;\n      const reg = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/; //使用邮箱的正则判断邮箱格式是否符合要求\n\n      if (!reg.test(email)) {\n        this.setState({\n          emailStyle: 'warning',\n          emailHelp: '请输入正确的邮箱格式'\n        });\n        return;\n      }\n\n      this.setState({\n        email,\n        emailStyle: 'validating'\n      });\n      clearTimeout(this.state.id2); // 防抖\n\n      let id = setTimeout(() => {\n        let that = this;\n        axios.post('/register', {\n          email\n        }).then(function (response) {\n          const data = response.data;\n          const result = data.status;\n\n          if (result === 'repeated') {\n            that.setState({\n              emailRepeated: true,\n              emailStyle: 'error',\n              emailHelp: '该邮箱已被注册'\n            });\n          } else {\n            that.setState({\n              emailRepeated: false,\n              emailStyle: 'success',\n              emailHelp: '该邮箱可用'\n            });\n          }\n        }).catch(err => {\n          console.log(\"验证邮箱是否被注册请求失败, ERR : \" + err);\n        });\n      }, 1000);\n      this.setState({\n        id2: id\n      });\n    };\n\n    this.repeatPwd = (rule, value) => {\n      if (value && value !== this.state.password) return Promise.reject('两次密码不一致');\n      return Promise.resolve();\n    };\n\n    this.handlePassword = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      let that = this;\n      const {\n        username,\n        password,\n        email\n      } = that.state;\n      const reg1 = /[0-9A-Za-z]{6,12}$/;\n      const reg2 = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n      const reg3 = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/; //判断提交数据格式的合法性\n\n      if (username === '' || password === '' || email === '' || !reg1.test(username) || !reg2.test(email) || !reg3.test(password) || this.verifyPwd !== password || this.state.nameRepeated || this.state.emailRepeated) return;\n      axios.post('/register', {\n        username,\n        password,\n        email\n      }).then(function (response) {\n        const data = response.data;\n        const result = data.status;\n\n        if (result === 'success') {\n          //注册成功返回登陆界面\n          cookie.save('registerSuccess', true, {\n            path: '/'\n          });\n          window.location.href = '/login';\n        } else {\n          _message.warning('注册错误，请联系管理员', 3);\n        }\n      }).catch(err => {\n        console.log(\"注册请求失败, ERR : \" + err);\n      });\n    };\n  }\n\n  //用户登陆的情况下不允许注册\n  componentWillMount() {\n    const username = cookie.load('username');\n    if (username !== undefined) window.location.href = '/index';\n  } //清空定时器\n\n\n  componentWillUnmount() {\n    if (this.state.id1 !== undefined) clearTimeout(this.state.id1);\n    if (this.state.id2 !== undefined) clearTimeout(this.state.id2);\n  } //实时发送ajax请求验证用户名是否可用\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./images/registerPicture.jpg\",\n        className: \"leftPicture\",\n        alt: \"leftPicture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"title\",\n          children: \"\\u7528\\u6237\\u6CE8\\u518C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(_Form, {\n          className: \"trueForm\",\n          initialValues: {\n            remember: true\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: '请输入您的用户名',\n              trigger: 'blur'\n            }, {\n              min: 6,\n              max: 12,\n              message: '用户名长度应为6-12个字符',\n              trigger: 'blur'\n            }],\n            validateStatus: this.state.nameStyle,\n            hasFeedback: true,\n            help: this.state.nameHelp,\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 44\n              }, this),\n              placeholder: \"\\u7528\\u6237\\u540D\",\n              onChange: this.handleUsername\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"email\",\n            rules: [{\n              required: true,\n              message: '请输入您的邮箱地址',\n              trigger: 'blur'\n            }, {\n              pattern: /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/,\n              message: '请输入正确的邮箱格式'\n            }],\n            validateStatus: this.state.emailStyle,\n            hasFeedback: true,\n            help: this.state.emailHelp,\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 44\n              }, this),\n              placeholder: \"\\u90AE\\u7BB1\",\n              onChange: this.handleEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: '请输入您的密码'\n            }, {\n              min: 6,\n              max: 24,\n              message: '密码长度应为8-16个字符',\n              trigger: 'blur'\n            }, {\n              pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/,\n              message: '密码应包含数字和字母'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 41\n              }, this),\n              type: \"password\",\n              placeholder: \"\\u5BC6\\u7801\",\n              onChange: this.handlePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"password2\",\n            rules: [{\n              required: true,\n              message: '请再次确认密码'\n            }, {\n              validator: this.repeatPwd\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input.Password, {\n              prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n                className: \"site-form-item-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 41\n              }, this),\n              type: \"password\",\n              placeholder: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n              onChange: e => this.verifyPwd = e.target.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            id: \"buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"myBtn\",\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                className: \"login-form-button\",\n                onClick: this.handleSubmit,\n                children: \"\\u6CE8\\u518C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Register/index.jsx"],"names":["React","Component","UserOutlined","LockOutlined","MailOutlined","axios","cookie","Register","state","username","password","email","nameRepeated","emailRepeated","nameStyle","emailStyle","nameHelp","emailHelp","id1","undefined","id2","handleUsername","e","target","value","reg","length","test","setState","clearTimeout","id","setTimeout","that","post","then","response","data","result","status","catch","err","console","log","handleEmail","repeatPwd","rule","Promise","reject","resolve","handlePassword","handleSubmit","reg1","reg2","reg3","verifyPwd","save","path","window","location","href","warning","componentWillMount","load","componentWillUnmount","render","remember","required","message","trigger","min","max","pattern","validator"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Form, Input, Button, message} from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\nimport axios from \"axios\";\nimport cookie from 'react-cookies'\n\n\nclass Register extends Component {\n    state = {\n        username: '',\n        password: '',\n        email:'',\n        nameRepeated: false,\n        emailRepeated: false,\n        nameStyle:'',\n        emailStyle:'',\n        nameHelp:null,\n        emailHelp:null,\n        id1:undefined,\n        id2:undefined\n    }\n\n    //用户登陆的情况下不允许注册\n    componentWillMount () {\n        const username = cookie.load('username');\n        if (username !== undefined) window.location.href = '/index';\n    }\n\n    //清空定时器\n    componentWillUnmount () {\n        if (this.state.id1 !== undefined) clearTimeout(this.state.id1);\n        if (this.state.id2 !== undefined) clearTimeout(this.state.id2);\n    }\n\n\n    //实时发送ajax请求验证用户名是否可用\n    handleUsername = e => {\n        //e.target.value 就等价于 $('target1').val()\n        const username = e.target.value;\n        const reg = /[0-9A-Za-z]{6,12}$/;\n        //判断格式\n        if (username.length < 6 || !reg.test(username)) {\n            this.setState({nameStyle:'warning', nameHelp:'用户名应为6-12个英文字符或数字'});\n            return;\n        }\n        //设置加载中样式\n        this.setState({username, nameStyle:'validating'});\n        clearTimeout(this.state.id1); //防抖\n        //延时1s，增加动画效果\n        let id = setTimeout(() => {\n            let that = this;\n            axios.post('/register', {\n                username\n            })\n                .then(function (response) {\n                    const data = response.data;\n                    const result = data.status;\n                    if (result === 'repeated'){\n                        that.setState({nameRepeated:true, nameStyle:'error', nameHelp:'该用户名已存在'})\n                    }\n                    else{\n                        that.setState({nameRepeated:false, nameStyle:'success', nameHelp:'该用户名可用'})\n                    }\n                })\n                .catch( err => {\n                    console.log(\"验证用户名是否可用请求失败, ERR : \" + err);\n                });\n        }, 1000);\n        this.setState({id1:id});\n    }\n\n\n    //实时发送ajax请求验证邮箱是否被注册\n    handleEmail = e => {\n        const email = e.target.value;\n        const reg = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n        //使用邮箱的正则判断邮箱格式是否符合要求\n        if (!reg.test(email)) {\n            this.setState({emailStyle:'warning', emailHelp:'请输入正确的邮箱格式'});\n            return;\n        }\n        this.setState({email, emailStyle:'validating'});\n        clearTimeout(this.state.id2) // 防抖\n        let id = setTimeout(() => {\n            let that = this\n            axios.post('/register', {\n                email\n            })\n                .then(function (response) {\n                    const data = response.data;\n                    const result = data.status;\n                    if (result === 'repeated'){\n                        that.setState({emailRepeated:true, emailStyle:'error', emailHelp:'该邮箱已被注册'})\n                    }\n                    else{\n                        that.setState({emailRepeated:false, emailStyle:'success', emailHelp:'该邮箱可用'})\n                    }\n                })\n                .catch( err => {\n                    console.log(\"验证邮箱是否被注册请求失败, ERR : \" + err);\n                });\n        }, 1000);\n        this.setState({id2: id});\n    }\n\n    //自定义rules判断两次密码是否一致，需返回promise\n    repeatPwd = (rule, value) => {\n        if (value && value !== this.state.password) return Promise.reject('两次密码不一致');\n        return Promise.resolve();\n    }\n\n    //存储密码\n    handlePassword = e => {\n        this.setState({password: e.target.value});\n    }\n\n    //提交表单\n    handleSubmit = () => {\n        let that = this;\n        const {username, password, email} = that.state;\n        const reg1 = /[0-9A-Za-z]{6,12}$/;\n        const reg2 = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n        const reg3 = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/;\n        //判断提交数据格式的合法性\n        if (username === '' || password === '' || email === '' || !reg1.test(username) || !reg2.test(email) ||\n            !reg3.test(password) || this.verifyPwd !== password || this.state.nameRepeated || this.state.emailRepeated) return;\n        axios.post('/register', {\n            username,\n            password,\n            email\n        })\n            .then(function (response) {\n                const data = response.data;\n                const result = data.status;\n                if (result === 'success'){\n                    //注册成功返回登陆界面\n                    cookie.save('registerSuccess', true, { path: '/' });\n                    window.location.href = '/login';\n                }\n                else{\n                    message.warning('注册错误，请联系管理员', 3);\n                }\n            })\n            .catch( err => {\n                console.log(\"注册请求失败, ERR : \" + err);\n            });\n    }\n\n    render () {\n        return (\n            <div className='myForm'>\n                <img src='./images/registerPicture.jpg' className='leftPicture' alt='leftPicture'/>\n                <div className='right'>\n                    <h4 className='title'>用户注册</h4>\n                    <hr className='line'/>\n                    <Form\n                        className=\"trueForm\"\n                        initialValues={{\n                            remember: true,\n                        }}\n                    >\n                        <Form.Item\n                            name=\"username\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入您的用户名',\n                                    trigger: 'blur'\n                                },\n                                {\n                                    min: 6,\n                                    max: 12,\n                                    message: '用户名长度应为6-12个字符',\n                                    trigger: 'blur'\n                                }\n                            ]}\n                            validateStatus={this.state.nameStyle}\n                            hasFeedback\n                            help={this.state.nameHelp}\n                        >\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"用户名\" onChange={this.handleUsername}/>\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"email\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入您的邮箱地址',\n                                    trigger: 'blur'\n                                },\n                                {\n                                    pattern:/^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/,\n                                    message:'请输入正确的邮箱格式'\n                                }\n                            ]}\n                            validateStatus={this.state.emailStyle}\n                            hasFeedback\n                            help={this.state.emailHelp}\n                        >\n                            <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"邮箱\" onChange={this.handleEmail}/>\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入您的密码',\n                                },\n                                {\n                                    min: 6,\n                                    max: 24,\n                                    message: '密码长度应为8-16个字符',\n                                    trigger: 'blur'\n                                },\n                                {\n                                    pattern:/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,16}$/,\n                                    message: '密码应包含数字和字母'\n                                }\n                            ]}\n                        >\n                            <Input.Password\n                                prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                type=\"password\"\n                                placeholder=\"密码\"\n                                onChange={this.handlePassword}\n                            />\n                        </Form.Item>\n\n                        <Form.Item\n                            name=\"password2\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请再次确认密码',\n                                },\n                                {\n                                    validator: this.repeatPwd\n                                }\n                            ]}\n                        >\n                            <Input.Password\n                                prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                                type=\"password\"\n                                placeholder=\"确认密码\"\n                                onChange={e => this.verifyPwd = e.target.value}\n                            />\n                        </Form.Item>\n\n\n                        <Form.Item id='buttons'>\n                            <div className='myBtn'>\n                                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.handleSubmit}>\n                                    注册\n                                </Button>\n                            </div>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}