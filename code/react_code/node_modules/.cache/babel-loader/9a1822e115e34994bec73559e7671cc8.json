{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/descriptions/style\";\nimport _Descriptions from \"antd/es/descriptions\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Market/AuctionInto/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//不需要接入合约\n//从数据库拿商品信息\nclass AuctionInto extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deviceID: \"\",\n      deviceInfo: {},\n      deviceMessage: [],\n      deviceName: \"\",\n      path: [],\n      isLoading: true\n    };\n    this.deviceColumns = [{\n      title: '设备ID',\n      dataIndex: 'deviceID',\n      key: 'deviceID'\n    }, {\n      title: '设备名称',\n      dataIndex: 'deviceName',\n      key: 'deviceName'\n    }, {\n      title: '拥有者ID',\n      dataIndex: 'ownerName',\n      key: 'ownerName'\n    }, {\n      title: '设备状态',\n      key: 'deviceStatus',\n      dataIndex: 'deviceStatus',\n      render: tag => /*#__PURE__*/_jsxDEV(_Tag, {\n        color: tag === 0 ? 'red' : 'green',\n        children: tag === 0 ? '离线' : '在线'\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }, this)\n    } // {\n    //     title: '操作',\n    //     key: 'edit',\n    //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n    //                                 path={this.state.path}/>,\n    // }\n    ];\n\n    this.renderProducts = filters => {\n      //div控制放到不同的地方（产品页面渲染）\n      //filter传给后台\n      //给后台发请求\n      axios.get('/product/getProducts', {\n        params: filters\n      }).then(data => {\n        console.log(\"函数 renderProducts 的参数 filters 为 : \");\n        console.dir(filters);\n        console.log(\"axios.get('/product/getProducts' 返回的 data 为 : \");\n        console.dir(data); // //data就是后端传来的items\n        // if (data.length == 0) {\n        //     $(\"#\" + div).html(\"No products found.\");\n        // } else {\n        //     $(\"#\" + div).html(\"\");\n        // }\n        // //一行多放几个产品\n        // while (data.length > 0) {\n        //     //删去data[0,4)，并返回删去的\n        //     let chunks = data.splice(0, 4);\n        //     //DOM元素\n        //     let row = $(\"<div/>\");\n        //     row.addClass(\"row\");\n        //     //拼好一行\n        //     chunks.forEach(p => {\n        //         let node = buildProduct(p);\n        //         row.append(node);\n        //     });\n        //     $(\"#\" + div).append(row);\n        // }\n      }).catch(err => {\n        console.log(\"axios.get('/product/getProducts 请求失败 : \" + err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"生成Shopping模块\"); //New，从后台的mongoDB拿数据\n    // this.renderProducts({});\n\n    this.renderProducts({\n      productStatus: \"reveal\"\n    });\n    this.renderProducts({\n      productStatus: \"finalize\"\n    });\n  }\n\n  render() {\n    const {\n      deviceID,\n      isOnline,\n      ownerName\n    } = this.state.deviceInfo;\n    const {\n      deviceName,\n      isLoading\n    } = this.state;\n    const info = [{\n      key: 1,\n      deviceName,\n      deviceID,\n      deviceStatus: isOnline,\n      ownerName\n    }]; // const messageArray = this.state.deviceMessage;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u8BBE\\u5907\\u4FE1\\u606F\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(_Spin, {\n        style: {\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(_Table, {\n        columns: this.deviceColumns,\n        dataSource: info,\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u6D88\\u606F\\u4FE1\\u606F\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        },\n        style: {\n          marginTop: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuctionInto; // const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n// ]\n// class EditDevice extends Component {\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n//     }\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n//     render () {\n//         );\n//     }\n// }","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Market/AuctionInto/index.jsx"],"names":["React","Component","axios","cookie","AuctionInto","constructor","props","state","deviceID","deviceInfo","deviceMessage","deviceName","path","isLoading","deviceColumns","title","dataIndex","key","render","tag","renderProducts","filters","get","params","then","data","console","log","dir","catch","err","componentDidMount","productStatus","isOnline","ownerName","info","deviceStatus","xxl","xl","lg","md","sm","xs","marginTop"],"mappings":"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":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies'\nimport {Descriptions, message, Spin, Table, Tag} from \"antd\";\n\n\n//不需要接入合约\n\n//从数据库拿商品信息\nclass AuctionInto extends Component {\n\n\n    state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n\n\n    deviceColumns = [\n        {\n            title: '设备ID',\n            dataIndex: 'deviceID',\n            key: 'deviceID',\n        },\n        {\n            title: '设备名称',\n            dataIndex: 'deviceName',\n            key: 'deviceName',\n        },\n        {\n            title: '拥有者ID',\n            dataIndex: 'ownerName',\n            key: 'ownerName',\n        },\n        {\n            title: '设备状态',\n            key: 'deviceStatus',\n            dataIndex: 'deviceStatus',\n            render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n        },\n        // {\n        //     title: '操作',\n        //     key: 'edit',\n        //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n        //                                 path={this.state.path}/>,\n        // }\n    ];\n\n    constructor (props) {\n        super(props);\n    }\n\n\n    componentDidMount () {\n        console.log(\"生成Shopping模块\");\n\n        //New，从后台的mongoDB拿数据\n        // this.renderProducts({});\n        this.renderProducts({ productStatus: \"reveal\" });\n        this.renderProducts({ productStatus: \"finalize\" });\n\n\n\n    }\n\n\n\n\n    renderProducts = (filters) => {\n        //div控制放到不同的地方（产品页面渲染）\n        //filter传给后台\n        //给后台发请求\n\n        axios.get('/product/getProducts',\n                 {params:filters}\n                 \n            )\n            .then(data => {\n                console.log(\"函数 renderProducts 的参数 filters 为 : \");\n                console.dir(filters);\n                console.log(\"axios.get('/product/getProducts' 返回的 data 为 : \");\n                console.dir(data);\n                    // //data就是后端传来的items\n                    // if (data.length == 0) {\n                    //     $(\"#\" + div).html(\"No products found.\");\n                    // } else {\n                    //     $(\"#\" + div).html(\"\");\n                    // }\n                    // //一行多放几个产品\n                    // while (data.length > 0) {\n                    //     //删去data[0,4)，并返回删去的\n                    //     let chunks = data.splice(0, 4);\n                    //     //DOM元素\n                    //     let row = $(\"<div/>\");\n                    //     row.addClass(\"row\");\n                    //     //拼好一行\n                    //     chunks.forEach(p => {\n                    //         let node = buildProduct(p);\n                    //         row.append(node);\n                    //     });\n                    //     $(\"#\" + div).append(row);\n                    // }\n            })\n            .catch(err => {\n                console.log(\"axios.get('/product/getProducts 请求失败 : \" + err);\n            });\n\n    }\n\n\n\n\n\n\n    \n    render () {\n        const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n        const {deviceName, isLoading} = this.state;\n        const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n        // const messageArray = this.state.deviceMessage;\n        return (\n            <div>\n                <Descriptions\n                    title=\"设备信息\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                />\n                {\n                    isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n                }\n\n                <Descriptions\n                    title=\"消息信息\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    style={{marginTop:'50px'}}\n                />\n                {/* {\n                    isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n                } */}\n\n            </div>\n        );\n    }\n}\n\nexport default AuctionInto;\n\n\n\n\n// const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n\n// ]\n\n// class EditDevice extends Component {\n\n\n\n\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n\n//     }\n\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n\n//     render () {\n        \n//         );\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}