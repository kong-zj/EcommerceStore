{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useRef, useEffect } from 'react';\nimport useSWR from 'swr';\nvar testId = 0;\n\nfunction useFetchData(props) {\n  /** Key 是用来缓存请求的，如果不在是有问题 */\n  var _useState = useState(function () {\n    if (props.proFieldKey) {\n      return props.proFieldKey.toString();\n    }\n\n    testId += 1;\n    return testId.toString();\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      cacheKey = _useState2[0];\n\n  var proFieldKeyRef = useRef(cacheKey);\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _props$request;\n\n      var loadData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (_props$request = props.request) === null || _props$request === void 0 ? void 0 : _props$request.call(props, props.params, props);\n\n            case 2:\n              loadData = _context.sent;\n              return _context.abrupt(\"return\", loadData);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    return function () {\n      testId += 1;\n    };\n  }, []);\n\n  var _useSWR = useSWR([proFieldKeyRef.current, props.params], fetchData, {\n    revalidateOnFocus: false,\n    shouldRetryOnError: false,\n    revalidateOnReconnect: false\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  return [data || error];\n}\n\nexport default useFetchData;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/@ant-design/pro-card/node_modules/@ant-design/pro-utils/es/hooks/useFetchData/index.js"],"names":["_regeneratorRuntime","_asyncToGenerator","_slicedToArray","useState","useRef","useEffect","useSWR","testId","useFetchData","props","_useState","proFieldKey","toString","_useState2","cacheKey","proFieldKeyRef","fetchData","_ref","mark","_callee","_props$request","loadData","wrap","_callee$","_context","prev","next","request","call","params","sent","abrupt","stop","apply","arguments","_useSWR","current","revalidateOnFocus","shouldRetryOnError","revalidateOnReconnect","data","error"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,4BAAhC;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,IAAIC,MAAM,GAAG,CAAb;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AACA,MAAIC,SAAS,GAAGP,QAAQ,CAAC,YAAY;AACnC,QAAIM,KAAK,CAACE,WAAV,EAAuB;AACrB,aAAOF,KAAK,CAACE,WAAN,CAAkBC,QAAlB,EAAP;AACD;;AAEDL,IAAAA,MAAM,IAAI,CAAV;AACA,WAAOA,MAAM,CAACK,QAAP,EAAP;AACD,GAPuB,CAAxB;AAAA,MAQIC,UAAU,GAAGX,cAAc,CAACQ,SAAD,EAAY,CAAZ,CAR/B;AAAA,MASII,QAAQ,GAAGD,UAAU,CAAC,CAAD,CATzB;;AAWA,MAAIE,cAAc,GAAGX,MAAM,CAACU,QAAD,CAA3B;;AAEA,MAAIE,SAAS,GAAG,aAAa,YAAY;AACvC,QAAIC,IAAI,GAAGhB,iBAAiB,EAAE,aAAaD,mBAAmB,CAACkB,IAApB,CAAyB,SAASC,OAAT,GAAmB;AACrF,UAAIC,cAAJ;;AAEA,UAAIC,QAAJ;AACA,aAAOrB,mBAAmB,CAACsB,IAApB,CAAyB,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAC1D,eAAO,CAAP,EAAU;AACR,kBAAQA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACE,IAAjC;AACE,iBAAK,CAAL;AACEF,cAAAA,QAAQ,CAACE,IAAT,GAAgB,CAAhB;AACA,qBAAO,CAACN,cAAc,GAAGX,KAAK,CAACkB,OAAxB,MAAqC,IAArC,IAA6CP,cAAc,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkFA,cAAc,CAACQ,IAAf,CAAoBnB,KAApB,EAA2BA,KAAK,CAACoB,MAAjC,EAAyCpB,KAAzC,CAAzF;;AAEF,iBAAK,CAAL;AACEY,cAAAA,QAAQ,GAAGG,QAAQ,CAACM,IAApB;AACA,qBAAON,QAAQ,CAACO,MAAT,CAAgB,QAAhB,EAA0BV,QAA1B,CAAP;;AAEF,iBAAK,CAAL;AACA,iBAAK,KAAL;AACE,qBAAOG,QAAQ,CAACQ,IAAT,EAAP;AAXJ;AAaD;AACF,OAhBM,EAgBJb,OAhBI,CAAP;AAiBD,KArB0C,CAAf,CAA5B;;AAuBA,WAAO,SAASH,SAAT,GAAqB;AAC1B,aAAOC,IAAI,CAACgB,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAP;AACD,KAFD;AAGD,GA3B4B,EAA7B;;AA6BA7B,EAAAA,SAAS,CAAC,YAAY;AACpB,WAAO,YAAY;AACjBE,MAAAA,MAAM,IAAI,CAAV;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAI4B,OAAO,GAAG7B,MAAM,CAAC,CAACS,cAAc,CAACqB,OAAhB,EAAyB3B,KAAK,CAACoB,MAA/B,CAAD,EAAyCb,SAAzC,EAAoD;AACtEqB,IAAAA,iBAAiB,EAAE,KADmD;AAEtEC,IAAAA,kBAAkB,EAAE,KAFkD;AAGtEC,IAAAA,qBAAqB,EAAE;AAH+C,GAApD,CAApB;AAAA,MAKIC,IAAI,GAAGL,OAAO,CAACK,IALnB;AAAA,MAMIC,KAAK,GAAGN,OAAO,CAACM,KANpB;;AAQA,SAAO,CAACD,IAAI,IAAIC,KAAT,CAAP;AACD;;AAED,eAAejC,YAAf","sourcesContent":["import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useRef, useEffect } from 'react';\nimport useSWR from 'swr';\nvar testId = 0;\n\nfunction useFetchData(props) {\n  /** Key 是用来缓存请求的，如果不在是有问题 */\n  var _useState = useState(function () {\n    if (props.proFieldKey) {\n      return props.proFieldKey.toString();\n    }\n\n    testId += 1;\n    return testId.toString();\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      cacheKey = _useState2[0];\n\n  var proFieldKeyRef = useRef(cacheKey);\n\n  var fetchData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _props$request;\n\n      var loadData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (_props$request = props.request) === null || _props$request === void 0 ? void 0 : _props$request.call(props, props.params, props);\n\n            case 2:\n              loadData = _context.sent;\n              return _context.abrupt(\"return\", loadData);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    return function () {\n      testId += 1;\n    };\n  }, []);\n\n  var _useSWR = useSWR([proFieldKeyRef.current, props.params], fetchData, {\n    revalidateOnFocus: false,\n    shouldRetryOnError: false,\n    revalidateOnReconnect: false\n  }),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  return [data || error];\n}\n\nexport default useFetchData;"]},"metadata":{},"sourceType":"module"}