{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/slider/style\";\nimport _Slider from \"antd/es/slider\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/AuctionOut/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api'; // import EditDeviceModal from \"../../EditDeviceModal\";\n\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons'; //接入合约\n\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\"; //静态资源\n\nimport ProductClass from '../../../static/ProductClass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nconst {\n  RangePicker\n} = _DatePicker;\n\nconst suffixSelector = /*#__PURE__*/_jsxDEV(_Form.Item, {\n  name: \"suffix\",\n  noStyle: true,\n  children: /*#__PURE__*/_jsxDEV(_Select, {\n    style: {\n      width: 70\n    },\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      value: \"USD\",\n      children: \"$\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"CNY\",\n      children: \"\\xA5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 5\n}, this);\n\nconst rangeConfig = {\n  rules: [{\n    type: 'array',\n    required: true,\n    message: '请选择时间'\n  }]\n}; //向区块链写入商品信息\n\nclass AuctionOut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: cookie.load('username'),\n      web3: null,\n      truffleContract: null\n    };\n\n    this.normFile = e => {\n      console.log(\"调用上传图片的 getValueFromEvent\");\n    };\n\n    this.uploadFile = e => {\n      _message.info(\"正在上传图片\", 2);\n\n      console.log(\"调用上传图片的 action\");\n    };\n\n    this.getBlockChainInfo = async () => {\n      try {\n        const web3 = await getWeb3();\n        const EcommerceStore = await getEcommerceStore(web3);\n        this.setState({\n          web3: web3,\n          currentContract: EcommerceStore\n        });\n\n        _message.success(\"接入智能合约成功\", 2);\n\n        return true;\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`[ERROR]接入智能合约失败.`);\n        console.error(error);\n        return false;\n      }\n    };\n\n    this.onFinish = values => {\n      console.log('Success:', values); //ProductName\n\n      _message.info(\"正在提交拍卖商品数据\");\n\n      axios.post('/createDevice', {\n        deviceID: values.deviceID,\n        deviceName: values.deviceName,\n        ownerName: cookie.load('username')\n      }).then(response => {\n        const data = response.data;\n\n        if (data.status === \"success\") {\n          _message.success(\"设备创建成功\", 2);\n\n          let deviceArray = cookie.load('deviceArray');\n          cookie.remove('deviceArray', {\n            path: '/'\n          });\n          deviceArray = [...deviceArray, values.deviceID];\n          cookie.save('deviceArray', deviceArray, {\n            path: '/'\n          });\n        } else if (data.status === \"duplicated\") {\n          _message.warning(\"该设备已被绑定\", 2);\n        } else {\n          _message.warning(\"创建设备失败\", 2);\n        }\n      });\n    };\n\n    this.onFinishFailed = errorInfo => {\n      _message.warning(\"请正确填写商品信息\", 2);\n    };\n\n    this.saveProduct = (reader, decodedParams) => {\n      let imageId, descId;\n      this.saveImageOnIpfs(reader).then(function (id) {\n        imageId = id;\n        this.saveTextBlobOnIpfs(decodedParams[\"product-description\"]).then(function (id) {\n          descId = id;\n          this.saveProductToBlockchain(decodedParams, imageId, descId);\n        });\n      });\n    };\n\n    this.saveImageOnIpfs = reader => {\n      return new Promise((resolve, reject) => {\n        let buffer = Buffer.from(reader.result);\n        ipfs.add(buffer).then(res => {\n          console.log(\"ImgRes: \", res);\n          resolve(res[0].hash);\n        }).catch(err => {\n          console.error(err);\n          reject(err);\n        });\n      });\n    };\n\n    this.saveTextBlobOnIpfs = blob => {\n      return new Promise((resolve, reject) => {\n        let buffer = Buffer.from(blob, 'utf-8');\n        ipfs.add(buffer).then(res => {\n          console.log(\"TextRes: \", res);\n          resolve(res[0].hash);\n        }).catch(err => {\n          console.error(err);\n          reject(err);\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"生成AuctionOut模块\");\n\n    if (this.getBlockChainInfo()) {\n      console.log(\"成功获得合约信息\");\n    } else {\n      console.log(\"获得合约信息失败\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(_Card, {\n        title: \"\\u4E0A\\u67B6\\u5F85\\u62CD\\u5356\\u5546\\u54C1\",\n        bordered: false,\n        style: {\n          width: '80%'\n        },\n        headStyle: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Form, {\n          initialValues: {\n            remember: true\n          },\n          onFinish: this.onFinish,\n          onFinishFailed: this.onFinishFailed,\n          style: {\n            margin: \"auto\",\n            width: \"60%\",\n            marginTop: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductName\",\n            rules: [{\n              required: true,\n              message: '请输入商品名称'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              placeholder: \"\\u5546\\u54C1\\u540D\\u79F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductDesc\",\n            label: \"\\u5546\\u54C1\\u4ECB\\u7ECD\",\n            rules: [{\n              required: true,\n              message: '请输入商品介绍'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n              showCount: true,\n              maxLength: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"UploadPic\",\n            label: \"\\u4E0A\\u4F20\\u56FE\\u7247\",\n            valuePropName: \"fileList\",\n            getValueFromEvent: this.normFile,\n            extra: \"\",\n            children: /*#__PURE__*/_jsxDEV(_Upload, {\n              name: \"logo\",\n              action: this.uploadFile,\n              listType: \"picture\",\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 43\n                }, this),\n                children: \"\\u70B9\\u51FB\\u4E0A\\u4F20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductClass\",\n            label: \"\\u5546\\u54C1\\u79CD\\u7C7B\",\n            rules: [{\n              type: 'array',\n              required: true,\n              message: '请选择商品种类'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Cascader, {\n              placeholder: \"\\u8BF7\\u9009\\u62E9\",\n              options: ProductClass\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"StartPrice\",\n            label: \"\\u8D77\\u62CD\\u4EF7\\u683C\",\n            rules: [{\n              required: true,\n              message: '请输入起拍价格'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_InputNumber, {\n              addonAfter: suffixSelector,\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"BeginAndEndTime\",\n            label: \"\\u8D77\\u6B62\\u65F6\\u95F4\",\n            ...rangeConfig,\n            children: /*#__PURE__*/_jsxDEV(RangePicker, {\n              showTime: true,\n              format: \"YYYY-MM-DD HH:mm:ss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductCondition\",\n            label: \"\\u4EA7\\u54C1\\u72B6\\u51B5\",\n            rules: [{\n              required: true,\n              message: '请选择状况'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Select, {\n              placeholder: \"\\u8BF7\\u9009\\u62E9\",\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"new\",\n                children: \"\\u5168\\u65B0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"used\",\n                children: \"\\u4E8C\\u624B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"slider\",\n            label: \"\\u63ED\\u793A\\u62A5\\u4EF7\\u6301\\u7EED\\u65F6\\u95F4\",\n            children: /*#__PURE__*/_jsxDEV(_Slider, {\n              marks: {\n                0: '0',\n                20: '20',\n                40: '40',\n                60: '60',\n                80: '80',\n                100: '100 分钟'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            wrapperCol: {\n              offset: 10,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"\\u53D1\\u5E03\\u5546\\u54C1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuctionOut; // import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n// class CreateDevice extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n//         \n//         );\n//     }\n// }\n// export default CreateDevice;\n// const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n// ]\n// class EditDevice extends Component {\n//     state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n//     deviceColumns = [\n//         {\n//             title: '设备ID',\n//             dataIndex: 'deviceID',\n//             key: 'deviceID',\n//         },\n//         {\n//             title: '设备名称',\n//             dataIndex: 'deviceName',\n//             key: 'deviceName',\n//         },\n//         {\n//             title: '拥有者ID',\n//             dataIndex: 'ownerName',\n//             key: 'ownerName',\n//         },\n//         {\n//             title: '设备状态',\n//             key: 'deviceStatus',\n//             dataIndex: 'deviceStatus',\n//             render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n//         },\n//         // {\n//         //     title: '操作',\n//         //     key: 'edit',\n//         //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n//         //                                 path={this.state.path}/>,\n//         // }\n//     ];\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n//     }\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n//     render () {\n//         const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n//         const {deviceName, isLoading} = this.state;\n//         const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n//         const messageArray = this.state.deviceMessage;\n//         return (\n//             <div>\n//                 <Descriptions\n//                     title=\"设备信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                 />\n//                 {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n//                 }\n//                 <Descriptions\n//                     title=\"消息信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                     style={{marginTop:'50px'}}\n//                 />\n//                 {/* {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n//                 } */}\n//             </div>\n//         );\n//     }\n// }\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n// class AuctionOut extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n// export default AuctionOut;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/AuctionOut/index.jsx"],"names":["React","Component","axios","cookie","ipfsAPI","UploadOutlined","InboxOutlined","getWeb3","getEcommerceStore","ProductClass","Option","RangePicker","suffixSelector","width","rangeConfig","rules","type","required","message","AuctionOut","constructor","props","state","username","load","web3","truffleContract","normFile","e","console","log","uploadFile","info","getBlockChainInfo","EcommerceStore","setState","currentContract","success","error","alert","onFinish","values","post","deviceID","deviceName","ownerName","then","response","data","status","deviceArray","remove","path","save","warning","onFinishFailed","errorInfo","saveProduct","reader","decodedParams","imageId","descId","saveImageOnIpfs","id","saveTextBlobOnIpfs","saveProductToBlockchain","Promise","resolve","reject","buffer","Buffer","from","result","ipfs","add","res","hash","catch","err","blob","componentDidMount","render","display","justifyContent","remember","margin","marginTop","offset","span"],"mappings":"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IAJD;AAKH,oBAAI,IALD;AAMH,qBAAK;AANF;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAnGJ,eAiHI,cAAM,IAAN;AACI,YAAA,UAAU,EAAE;AACRqE,cAAAA,MAAM,EAAE,EADA;AAERC,cAAAA,IAAI,EAAE;AAFE,aADhB;AAAA,mCAMI;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,kBAjHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkIH;;AAjQ8B;;AAoQnC,eAAerE,UAAfaA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api';\n// import EditDeviceModal from \"../../EditDeviceModal\";\nimport { message, Card} from 'antd';\nimport {\n    Form,\n    Input,\n    InputNumber,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    Upload,\n    AutoComplete,\n    DatePicker,\n    Slider,\n  } from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\n\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\n\n//静态资源\nimport ProductClass from '../../../static/ProductClass';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n\n\n  const suffixSelector = (\n    <Form.Item name=\"suffix\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option value=\"USD\">$</Option>\n        <Option value=\"CNY\">¥</Option>\n      </Select>\n    </Form.Item>\n  );\n\n  const rangeConfig = {\n    rules: [\n      {\n        type: 'array',\n        required: true,\n        message: '请选择时间',\n      },\n    ],\n  };\n\n\n\n\n//向区块链写入商品信息\nclass AuctionOut extends Component {\n\n    state = {\n        username:cookie.load('username'),\n        web3 : null,\n        truffleContract : null\n    }\n\n    constructor (props) {\n        super(props);\n    }\n\n    normFile = (e) => {\n        console.log(\"调用上传图片的 getValueFromEvent\");\n      }\n\n    uploadFile = (e) => {\n        message.info(\"正在上传图片\", 2);\n        console.log(\"调用上传图片的 action\");\n      }\n\n    \n\n    getBlockChainInfo = async() => {\n        try{\n            const web3 = await getWeb3();\n            const EcommerceStore = await getEcommerceStore(web3);\n            this.setState({\n                web3: web3,\n                currentContract:EcommerceStore\n            });\n            message.success(\"接入智能合约成功\", 2);\n            return true;\n        }catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n              `[ERROR]接入智能合约失败.`,\n            );\n            console.error(error);\n            return false;\n          }\n        \n    }\n\n    componentDidMount () {\n        console.log(\"生成AuctionOut模块\");\n        if(this.getBlockChainInfo()){\n            console.log(\"成功获得合约信息\");\n        }else{\n            console.log(\"获得合约信息失败\");\n        }\n    }\n\n    onFinish = (values) => {\n        console.log('Success:', values);\n        //ProductName\n        message.info(\"正在提交拍卖商品数据\");\n\n\n        axios.post('/createDevice', {\n            deviceID:values.deviceID,\n            deviceName:values.deviceName,\n            ownerName:cookie.load('username')\n        }).then(response => {\n            const data = response.data;\n            if(data.status === \"success\"){\n                message.success(\"设备创建成功\", 2);\n                let deviceArray = cookie.load('deviceArray');\n                cookie.remove('deviceArray', {path:'/'});\n                deviceArray = [...deviceArray, values.deviceID];\n                cookie.save('deviceArray', deviceArray, {path:'/'});\n\n            }\n            else if(data.status === \"duplicated\"){\n                message.warning(\"该设备已被绑定\", 2)\n            }\n            else{\n                message.warning(\"创建设备失败\", 2)\n            }\n        })\n\n    }\n    onFinishFailed = (errorInfo) => {\n        message.warning(\"请正确填写商品信息\",2);\n    }\n\n\n    saveProduct = (reader, decodedParams) => {\n        let imageId, descId;\n        this.saveImageOnIpfs(reader).then(function(id) {\n            imageId = id;\n            this.saveTextBlobOnIpfs(decodedParams[\"product-description\"]).then(function(id) {\n                descId = id;\n                this.saveProductToBlockchain(decodedParams, imageId, descId);\n            });\n        });\n    }\n    \n    saveImageOnIpfs = (reader) => {\n        return new Promise((resolve, reject) => {\n            let buffer = Buffer.from(reader.result);\n            ipfs.add(buffer).then(res => {\n                console.log(\"ImgRes: \", res);\n                resolve(res[0].hash);\n            }).catch(err => {\n                console.error(err);\n                reject(err);\n            });\n        });\n    }\n    \n    saveTextBlobOnIpfs = (blob) => {\n        return new Promise((resolve, reject) => {\n            let buffer = Buffer.from(blob, 'utf-8');\n            ipfs.add(buffer).then(res => {\n                console.log(\"TextRes: \", res);\n                resolve(res[0].hash);\n            }).catch(err => {\n                console.error(err);\n                reject(err);\n            });\n        });\n    }\n\n\n    \n    render () {\n        return (\n            <div style={{display:'flex', justifyContent:'center'}}>\n            <Card title=\"上架待拍卖商品\" bordered={false} style={{ width: '80%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n                <Form\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={this.onFinish}\n                    onFinishFailed={this.onFinishFailed}\n                    style={{margin:\"auto\", width:\"60%\", marginTop:\"15px\"}}\n                >\n                    <Form.Item\n                        name=\"ProductName\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '请输入商品名称',\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"商品名称\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"ProductDesc\"\n                        label=\"商品介绍\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请输入商品介绍',\n                                },\n                        ]}\n                    >\n                        <Input.TextArea showCount maxLength={100} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"UploadPic\"\n                        label=\"上传图片\"\n                        valuePropName=\"fileList\"\n                        getValueFromEvent={this.normFile}\n                        extra=\"\"\n                    >\n                        <Upload name=\"logo\" action={this.uploadFile} listType=\"picture\">\n                            <Button icon={<UploadOutlined />}>点击上传</Button>\n                        </Upload>\n                    </Form.Item>\n                    \n                    <Form.Item\n                        name=\"ProductClass\"\n                        label=\"商品种类\"\n                        rules={[\n                                {\n                                    type: 'array',\n                                    required: true,\n                                    message: '请选择商品种类',\n                                },\n                            ]}\n                    >\n                        <Cascader placeholder=\"请选择\" options={ProductClass} />\n                    </Form.Item>\n\n\n                    <Form.Item\n                        name=\"StartPrice\"\n                        label=\"起拍价格\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请输入起拍价格',\n                                },\n                            ]}\n                    >\n                    <InputNumber\n                        addonAfter={suffixSelector}\n                        style={{\n                            width: '100%',\n                        }}\n                    />\n                    </Form.Item>\n\n                    <Form.Item name=\"BeginAndEndTime\" label=\"起止时间\" {...rangeConfig}>\n                        <RangePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"ProductCondition\"\n                        label=\"产品状况\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请选择状况',\n                                },\n                        ]}\n                    >\n                        <Select placeholder=\"请选择\">\n                            <Option value=\"new\">全新</Option>\n                            <Option value=\"used\">二手</Option>\n                        </Select>\n                    </Form.Item>\n\n\n                    <Form.Item name=\"slider\" label=\"揭示报价持续时间\">\n                        <Slider\n                            marks={{\n                                0: '0',\n                                20: '20',\n                                40: '40',\n                                60: '60',\n                                80: '80',\n                                100: '100 分钟',\n                            }}\n                        />\n                    </Form.Item>\n                \n\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 10,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            发布商品\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n        );\n    }\n}\n\nexport default AuctionOut;\n\n\n\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\n// class CreateDevice extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n\n//         \n//         );\n//     }\n// }\n\n// export default CreateDevice;\n\n\n\n\n// const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n\n// ]\n\n// class EditDevice extends Component {\n\n//     state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n\n//     deviceColumns = [\n//         {\n//             title: '设备ID',\n//             dataIndex: 'deviceID',\n//             key: 'deviceID',\n//         },\n//         {\n//             title: '设备名称',\n//             dataIndex: 'deviceName',\n//             key: 'deviceName',\n//         },\n//         {\n//             title: '拥有者ID',\n//             dataIndex: 'ownerName',\n//             key: 'ownerName',\n//         },\n//         {\n//             title: '设备状态',\n//             key: 'deviceStatus',\n//             dataIndex: 'deviceStatus',\n//             render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n//         },\n//         // {\n//         //     title: '操作',\n//         //     key: 'edit',\n//         //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n//         //                                 path={this.state.path}/>,\n//         // }\n//     ];\n\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n\n//     }\n\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n\n//     render () {\n//         const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n//         const {deviceName, isLoading} = this.state;\n//         const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n//         const messageArray = this.state.deviceMessage;\n//         return (\n//             <div>\n//                 <Descriptions\n//                     title=\"设备信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                 />\n//                 {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n//                 }\n\n//                 <Descriptions\n//                     title=\"消息信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                     style={{marginTop:'50px'}}\n//                 />\n//                 {/* {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n//                 } */}\n\n//             </div>\n//         );\n//     }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\n// class AuctionOut extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n\n// export default AuctionOut;"]},"metadata":{},"sourceType":"module"}