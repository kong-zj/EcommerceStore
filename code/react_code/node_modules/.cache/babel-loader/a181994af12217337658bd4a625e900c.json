{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isFunction } from 'zrender/lib/core/util'; // Encoding visual for all series include which is filtered for legend drawing\n\nvar seriesSymbolTask = {\n  createOnAllSeries: true,\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n\n    if (seriesModel.legendSymbol) {\n      data.setVisual('legendSymbol', seriesModel.legendSymbol);\n    }\n\n    if (!seriesModel.hasSymbolVisual) {\n      return;\n    }\n\n    var symbolType = seriesModel.get('symbol');\n    var symbolSize = seriesModel.get('symbolSize');\n    var keepAspect = seriesModel.get('symbolKeepAspect');\n    var symbolRotate = seriesModel.get('symbolRotate');\n    var hasSymbolTypeCallback = isFunction(symbolType);\n    var hasSymbolSizeCallback = isFunction(symbolSize);\n    var hasSymbolRotateCallback = isFunction(symbolRotate);\n    var hasCallback = hasSymbolTypeCallback || hasSymbolSizeCallback || hasSymbolRotateCallback;\n    var seriesSymbol = !hasSymbolTypeCallback && symbolType ? symbolType : seriesModel.defaultSymbol;\n    var seriesSymbolSize = !hasSymbolSizeCallback ? symbolSize : null;\n    var seriesSymbolRotate = !hasSymbolRotateCallback ? symbolRotate : null;\n    data.setVisual({\n      legendSymbol: seriesModel.legendSymbol || seriesSymbol,\n      // If seting callback functions on `symbol` or `symbolSize`, for simplicity and avoiding\n      // to bring trouble, we do not pick a reuslt from one of its calling on data item here,\n      // but just use the default value. Callback on `symbol` or `symbolSize` is convenient in\n      // some cases but generally it is not recommanded.\n      symbol: seriesSymbol,\n      symbolSize: seriesSymbolSize,\n      symbolKeepAspect: keepAspect,\n      symbolRotate: seriesSymbolRotate\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    function dataEach(data, idx) {\n      var rawValue = seriesModel.getRawValue(idx);\n      var params = seriesModel.getDataParams(idx);\n      hasSymbolTypeCallback && data.setItemVisual(idx, 'symbol', symbolType(rawValue, params));\n      hasSymbolSizeCallback && data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n      hasSymbolRotateCallback && data.setItemVisual(idx, 'symbolRotate', symbolRotate(rawValue, params));\n    }\n\n    return {\n      dataEach: hasCallback ? dataEach : null\n    };\n  }\n};\nvar dataSymbolTask = {\n  createOnAllSeries: true,\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    if (!seriesModel.hasSymbolVisual) {\n      return;\n    } // Only visible series has each data be visual encoded\n\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var itemSymbolType = itemModel.getShallow('symbol', true);\n      var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n      var itemSymbolRotate = itemModel.getShallow('symbolRotate', true);\n      var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n      if (itemSymbolType != null) {\n        data.setItemVisual(idx, 'symbol', itemSymbolType);\n      }\n\n      if (itemSymbolSize != null) {\n        // PENDING Transform symbolSize ?\n        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n      }\n\n      if (itemSymbolRotate != null) {\n        data.setItemVisual(idx, 'symbolRotate', itemSymbolRotate);\n      }\n\n      if (itemSymbolKeepAspect != null) {\n        data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n      }\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nexport { seriesSymbolTask, dataSymbolTask };","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/node_modules/echarts/lib/visual/symbol.js"],"names":["isFunction","seriesSymbolTask","createOnAllSeries","performRawSeries","reset","seriesModel","ecModel","data","getData","legendSymbol","setVisual","hasSymbolVisual","symbolType","get","symbolSize","keepAspect","symbolRotate","hasSymbolTypeCallback","hasSymbolSizeCallback","hasSymbolRotateCallback","hasCallback","seriesSymbol","defaultSymbol","seriesSymbolSize","seriesSymbolRotate","symbol","symbolKeepAspect","isSeriesFiltered","dataEach","idx","rawValue","getRawValue","params","getDataParams","setItemVisual","dataSymbolTask","itemModel","getItemModel","itemSymbolType","getShallow","itemSymbolSize","itemSymbolRotate","itemSymbolKeepAspect","hasItemOption"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { isFunction } from 'zrender/lib/core/util'; // Encoding visual for all series include which is filtered for legend drawing\n\nvar seriesSymbolTask = {\n  createOnAllSeries: true,\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    var data = seriesModel.getData();\n\n    if (seriesModel.legendSymbol) {\n      data.setVisual('legendSymbol', seriesModel.legendSymbol);\n    }\n\n    if (!seriesModel.hasSymbolVisual) {\n      return;\n    }\n\n    var symbolType = seriesModel.get('symbol');\n    var symbolSize = seriesModel.get('symbolSize');\n    var keepAspect = seriesModel.get('symbolKeepAspect');\n    var symbolRotate = seriesModel.get('symbolRotate');\n    var hasSymbolTypeCallback = isFunction(symbolType);\n    var hasSymbolSizeCallback = isFunction(symbolSize);\n    var hasSymbolRotateCallback = isFunction(symbolRotate);\n    var hasCallback = hasSymbolTypeCallback || hasSymbolSizeCallback || hasSymbolRotateCallback;\n    var seriesSymbol = !hasSymbolTypeCallback && symbolType ? symbolType : seriesModel.defaultSymbol;\n    var seriesSymbolSize = !hasSymbolSizeCallback ? symbolSize : null;\n    var seriesSymbolRotate = !hasSymbolRotateCallback ? symbolRotate : null;\n    data.setVisual({\n      legendSymbol: seriesModel.legendSymbol || seriesSymbol,\n      // If seting callback functions on `symbol` or `symbolSize`, for simplicity and avoiding\n      // to bring trouble, we do not pick a reuslt from one of its calling on data item here,\n      // but just use the default value. Callback on `symbol` or `symbolSize` is convenient in\n      // some cases but generally it is not recommanded.\n      symbol: seriesSymbol,\n      symbolSize: seriesSymbolSize,\n      symbolKeepAspect: keepAspect,\n      symbolRotate: seriesSymbolRotate\n    }); // Only visible series has each data be visual encoded\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    function dataEach(data, idx) {\n      var rawValue = seriesModel.getRawValue(idx);\n      var params = seriesModel.getDataParams(idx);\n      hasSymbolTypeCallback && data.setItemVisual(idx, 'symbol', symbolType(rawValue, params));\n      hasSymbolSizeCallback && data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n      hasSymbolRotateCallback && data.setItemVisual(idx, 'symbolRotate', symbolRotate(rawValue, params));\n    }\n\n    return {\n      dataEach: hasCallback ? dataEach : null\n    };\n  }\n};\nvar dataSymbolTask = {\n  createOnAllSeries: true,\n  // For legend.\n  performRawSeries: true,\n  reset: function (seriesModel, ecModel) {\n    if (!seriesModel.hasSymbolVisual) {\n      return;\n    } // Only visible series has each data be visual encoded\n\n\n    if (ecModel.isSeriesFiltered(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var itemSymbolType = itemModel.getShallow('symbol', true);\n      var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n      var itemSymbolRotate = itemModel.getShallow('symbolRotate', true);\n      var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n      if (itemSymbolType != null) {\n        data.setItemVisual(idx, 'symbol', itemSymbolType);\n      }\n\n      if (itemSymbolSize != null) {\n        // PENDING Transform symbolSize ?\n        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n      }\n\n      if (itemSymbolRotate != null) {\n        data.setItemVisual(idx, 'symbolRotate', itemSymbolRotate);\n      }\n\n      if (itemSymbolKeepAspect != null) {\n        data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n      }\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nexport { seriesSymbolTask, dataSymbolTask };"]},"metadata":{},"sourceType":"module"}