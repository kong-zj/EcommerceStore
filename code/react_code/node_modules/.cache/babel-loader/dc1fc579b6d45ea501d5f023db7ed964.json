{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\nimport * as bbox from 'zrender/lib/core/bbox';\nimport * as vec2 from 'zrender/lib/core/vector';\nimport * as polygonContain from 'zrender/lib/contain/polygon';\n\nvar Region =\n/** @class */\nfunction () {\n  function Region(name, geometries, cp) {\n    this.name = name;\n    this.geometries = geometries;\n\n    if (!cp) {\n      var rect = this.getBoundingRect();\n      cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n    } else {\n      cp = [cp[0], cp[1]];\n    }\n\n    this.center = cp;\n  }\n\n  Region.prototype.getBoundingRect = function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n    var i = 0;\n\n    for (; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  };\n\n  Region.prototype.contain = function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Region.prototype.transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  };\n\n  Region.prototype.cloneShallow = function (name) {\n    name == null && (name = this.name);\n    var newRegion = new Region(name, this.geometries, this.center);\n    newRegion._rect = this._rect;\n    newRegion.transformTo = null; // Simply avoid to be called.\n\n    return newRegion;\n  };\n\n  return Region;\n}();\n\nexport default Region;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/node_modules/echarts/lib/coord/geo/Region.js"],"names":["BoundingRect","bbox","vec2","polygonContain","Region","name","geometries","cp","rect","getBoundingRect","x","width","y","height","center","prototype","_rect","MAX_NUMBER","Number","MAX_VALUE","min","max","min2","max2","i","length","type","exterior","fromPoints","contain","coord","loopGeo","len","interiors","k","transformTo","aspect","target","transform","calculateTransform","p","applyTransform","h","copy","cloneShallow","newRegion"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\nimport * as bbox from 'zrender/lib/core/bbox';\nimport * as vec2 from 'zrender/lib/core/vector';\nimport * as polygonContain from 'zrender/lib/contain/polygon';\n\nvar Region =\n/** @class */\nfunction () {\n  function Region(name, geometries, cp) {\n    this.name = name;\n    this.geometries = geometries;\n\n    if (!cp) {\n      var rect = this.getBoundingRect();\n      cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n    } else {\n      cp = [cp[0], cp[1]];\n    }\n\n    this.center = cp;\n  }\n\n  Region.prototype.getBoundingRect = function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n    var i = 0;\n\n    for (; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  };\n\n  Region.prototype.contain = function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k], coord[0], coord[1])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Region.prototype.transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  };\n\n  Region.prototype.cloneShallow = function (name) {\n    name == null && (name = this.name);\n    var newRegion = new Region(name, this.geometries, this.center);\n    newRegion._rect = this._rect;\n    newRegion.transformTo = null; // Simply avoid to be called.\n\n    return newRegion;\n  };\n\n  return Region;\n}();\n\nexport default Region;"]},"metadata":{},"sourceType":"module"}