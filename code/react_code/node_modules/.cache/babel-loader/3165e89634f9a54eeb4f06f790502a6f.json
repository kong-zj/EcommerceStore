{"ast":null,"code":"import \"antd/es/descriptions/style\";\nimport _Descriptions from \"antd/es/descriptions\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Market/AuctionInto/index.jsx\";\nimport React, { Component } from 'react';\nimport cookie from 'react-cookies';\nimport renderProducts from '../../../utils/renderProducts'; //商品列表组件，需要传数据进去\n\nimport ProductList from '../../../components/ProductList'; //从IPFS读取\n\nimport ipfsReadUrlBefore from '../../../config/ipfsReadUrl';\nimport ipfsAddAndCatConfig from '../../../config/ipfsAddAndCat';\nimport ipfsAPI from 'ipfs-api'; //不需要接入合约\n//价格格式化\n\nimport handlePrice from '../../../utils/handlePrice'; //时间格式化\n\nimport handleTimeString from '../../../utils/handleTimeString'; //ipfs实例\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ipfs = ipfsAPI({\n  host: ipfsAddAndCatConfig.host,\n  port: ipfsAddAndCatConfig.port,\n  protocol: ipfsAddAndCatConfig.protocol\n}); //从数据库拿商品信息\n\nclass AuctionInto extends Component {\n  // state = {\n  // productInSell: [],\n  // productInReveal: [],\n  // productInFinalize: []\n  // }\n  constructor(props) {\n    super(props);\n\n    this.getProductList = async process => {\n      //process 可能的值为\n      //\"sell\"\n      //\"reveal\"\n      //\"finalize\"\n      //New，从后台的mongoDB拿数据\n      let productInProcess = await renderProducts({\n        productProcess: process\n      });\n      console.log(\"getProductList, process = \" + process + \" 请求到的数据为 : \");\n      console.dir(productInProcess.data); //从数据库里拿到的信息是这样的 productArray[0]\n      //结构为\n      // auctionEndTime: 1646381747\n      // auctionStartTime: 1646381347\n      // blockchainId: 1\n      // category: \"Cell Phones & Accessories\"\n      // condition: 0 (全新还是二手)\n      // ipfsDescHash: \"QmRa3BnvMUU6DxnLzxymAd7dweyWAYLzW3R99KkGCJAgRn\"\n      // ipfsImageHashArray: 字符串数组\n      // name: \"iphone 5\"\n      // price: 2000000000000000000\n      // productStatus: 0 (卖没卖出去)\n      // __v: 0\n      // _id: \"6221c928b1126364e456764e\"\n      //要传给 ProductList 用来显示的信息是这样的\n      //blockchainId (int)\n      //name (String)\n      //category (String)\n      //ipfsDescHash (String)\n      //ipfsImageHashArray (String数组)\n      //processTime (String) 已结束 或者 距离结束的时间\n      //price (String) 大于1ETH 用 ETH 做单位，小于时用 wei\n      //productCondition (String) 新旧\n      // let arrayLength = productInProcess.data.length;\n\n      let array = await productInProcess.data.map(async (item, index) => {\n        //item 是数组的大元素\n        //价格使用合适单位\n        let priceString = handlePrice(item.price); //计算 processTime, 与最外层函数的参数 process 有关\n\n        let processTimeString = handleTimeString(item.auctionEndTime, process); //注意异步的执行先后顺序问题\n        // 将商品介绍从 ipfs 下载，存为descString\n\n        let descString = \"商品介绍占位\";\n        await ipfs.cat(item.ipfsDescHash).then(file => {\n          descString = file.toString();\n        }); //只要第一张图片\n\n        return {\n          //key从1开始\n          key: index + 1,\n          blockchainId: item.blockchainId,\n          //用于用户点击时，用区块链中的ID查询商品详细信息\n          name: item.name,\n          category: item.category,\n          //过长就截断\n          descString: descString.length > 150 ? descString.slice(0, 150) + \"......\" : descString,\n          imageUrlArray: ipfsReadUrlBefore + item.ipfsImageHash,\n          productCondition: item.condition === 0 ? \"全新\" : \"二手\",\n          price: priceString,\n          processTime: processTimeString\n        };\n      });\n      console.log(\"格式化后, 即将传入 ProductList 的数据为 : \");\n      console.log(array);\n      return array;\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"生成AuctionInto模块\"); // //注意，不能这样更新，错误写法\n      // this.state.productInSell = await this.getProductList(\"sell\");\n      // this.state.productInReveal = await this.getProductList(\"reveal\");\n      // this.state.productInFinalize = await this.getProductList(\"finalize\");\n      // let productInSell =  this.getProductList(\"sell\");\n      // let productInReveal =  this.getProductList(\"reveal\");\n      // let productInFinalize =  this.getProductList(\"finalize\");\n      // //学习 PersonalInfo 的处理方式\n      // //这里是异步的，在下面的 render 中调用，显示为 null\n      // this.setState({\n      //     productInSell : productInSell,\n      //     productInReveal : productInReveal,\n      //     productInFinalize : productInFinalize\n      // }, () =>{\n      //     console.log(\"this.setState 执行完毕\");\n      // }\n      // )\n      // axios.post(\"/account/showAll\", {\n      //     username:this.state.username\n      // }).then(response => {\n      //     const data =  response.data;\n      //     if(data.status === \"success\"){\n      //         console.log(\"获取该用户所有曾用地址成功\");\n      //         //data.accountAndLastTime 是外层是数组，每个数组元素是字典类型\n      //         //map 方法，数组映射\n      // let array = data.accountAndLastTime.map((item, index) => {\n      //     //计算时间差，判断是否活跃\n      //     //注意mysql返回的 timestamp 与js中的 Date 的区别，以及相互转换\n      //     let timeDifference = new Date() - new Date(item.lastTime);\n      //     console.log(\"这个日期距离现在已经 \" + timeDuration(timeDifference));\n      //     //小于一天时间的是活跃账户\n      //     let tag = ( timeDifference> 24*60*60*1000) ? true : false;\n      //     return {\n      //         //key从1开始\n      //         key: index + 1,\n      //         accountString: item.accountString,\n      //         accountStatus: tag ? 0:1,\n      //         //moment库，格式化时间\n      //         lastTime: moment(item.lastTime).format('yy年M月D日, h:mm:ss a')\n      //     }\n      // });\n      //         console.log(\"map映射后的要放到列表中的数据 array 为 : \");\n      //         console.dir(array);\n      //         this.setState({accountAndLastTimeArray:array});\n      //     }\n      //     else{\n      //         console.log(\"获取该用户所有曾用地址出错\");\n      //         message.warning (\"获取地址信息出错\").then (r  => console.log(r));\n      //     }\n      // }).catch( err => {\n      //     console.log(\"发起获取所有曾用地址的请求失败, ERR : \" + err);\n      // });\n    };\n  } //注意同步，不然还没得到结果，就把null返回了\n\n\n  render() {\n    // const {productInSell,\n    //     productInReveal,\n    //     productInFinalize} = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u51FA\\u793A\\u62A5\\u4EF7\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        productArray: this.getProductList(\"sell\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u63ED\\u793A\\u62A5\\u4EF7\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        },\n        style: {\n          marginTop: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        productArray: this.getProductList(\"reveal\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u7ED3\\u675F\\u62CD\\u5356\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        },\n        style: {\n          marginTop: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductList, {\n        productArray: this.getProductList(\"finalize\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuctionInto;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Market/AuctionInto/index.jsx"],"names":["React","Component","cookie","renderProducts","ProductList","ipfsReadUrlBefore","ipfsAddAndCatConfig","ipfsAPI","handlePrice","handleTimeString","ipfs","host","port","protocol","AuctionInto","constructor","props","getProductList","process","productInProcess","productProcess","console","log","dir","data","array","map","item","index","priceString","price","processTimeString","auctionEndTime","descString","cat","ipfsDescHash","then","file","toString","key","blockchainId","name","category","length","slice","imageUrlArray","ipfsImageHash","productCondition","condition","processTime","componentDidMount","render","xxl","xl","lg","md","sm","xs","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport cookie from 'react-cookies'\nimport {Descriptions, message, Spin, Table, Tag} from \"antd\";\nimport renderProducts from '../../../utils/renderProducts';\n\n//商品列表组件，需要传数据进去\nimport ProductList from '../../../components/ProductList';\n\n//从IPFS读取\nimport ipfsReadUrlBefore from '../../../config/ipfsReadUrl';\nimport ipfsAddAndCatConfig from '../../../config/ipfsAddAndCat';\nimport ipfsAPI from 'ipfs-api';\n\n//不需要接入合约\n\n//价格格式化\nimport handlePrice from '../../../utils/handlePrice';\n//时间格式化\nimport handleTimeString from '../../../utils/handleTimeString';\n\n//ipfs实例\nconst ipfs = ipfsAPI({ host: ipfsAddAndCatConfig.host, port: ipfsAddAndCatConfig.port, protocol: ipfsAddAndCatConfig.protocol });\n\n//从数据库拿商品信息\nclass AuctionInto extends Component {\n\n    // state = {\n        // productInSell: [],\n        // productInReveal: [],\n        // productInFinalize: []\n    // }\n\n    constructor (props) {\n        super(props);\n    }\n\n\n    //注意同步，不然还没得到结果，就把null返回了\n    getProductList = async(process) => {\n        //process 可能的值为\n        //\"sell\"\n        //\"reveal\"\n        //\"finalize\"\n        \n\n        //New，从后台的mongoDB拿数据\n        let productInProcess = await renderProducts({ productProcess: process });\n        console.log(\"getProductList, process = \" + process + \" 请求到的数据为 : \");\n        console.dir(productInProcess.data);\n\n        //从数据库里拿到的信息是这样的 productArray[0]\n        //结构为\n        // auctionEndTime: 1646381747\n        // auctionStartTime: 1646381347\n        // blockchainId: 1\n        // category: \"Cell Phones & Accessories\"\n        // condition: 0 (全新还是二手)\n        // ipfsDescHash: \"QmRa3BnvMUU6DxnLzxymAd7dweyWAYLzW3R99KkGCJAgRn\"\n        // ipfsImageHashArray: 字符串数组\n        // name: \"iphone 5\"\n        // price: 2000000000000000000\n        // productStatus: 0 (卖没卖出去)\n        // __v: 0\n        // _id: \"6221c928b1126364e456764e\"\n\n\n        //要传给 ProductList 用来显示的信息是这样的\n        //blockchainId (int)\n        //name (String)\n        //category (String)\n        //ipfsDescHash (String)\n        //ipfsImageHashArray (String数组)\n        //processTime (String) 已结束 或者 距离结束的时间\n        //price (String) 大于1ETH 用 ETH 做单位，小于时用 wei\n        //productCondition (String) 新旧\n\n        // let arrayLength = productInProcess.data.length;\n\n        \n        let array = await productInProcess.data.map(async (item, index) => {\n            //item 是数组的大元素\n\n            //价格使用合适单位\n            let priceString = handlePrice(item.price);\n\n            //计算 processTime, 与最外层函数的参数 process 有关\n            let processTimeString = handleTimeString(item.auctionEndTime, process);\n\n            //注意异步的执行先后顺序问题\n            // 将商品介绍从 ipfs 下载，存为descString\n            let descString = \"商品介绍占位\";\n            await ipfs.cat(item.ipfsDescHash).then(file => {\n                descString = file.toString();\n            })\n\n            //只要第一张图片\n                    \n            return {\n                //key从1开始\n                key: index + 1,\n                blockchainId : item.blockchainId, //用于用户点击时，用区块链中的ID查询商品详细信息\n                name : item.name,\n                category : item.category,\n                //过长就截断\n                descString : (descString.length > 150) ? descString.slice(0,150)+\"......\"  : descString,\n                imageUrlArray : ipfsReadUrlBefore + item.ipfsImageHash,\n                productCondition : (item.condition === 0) ? \"全新\" : \"二手\",\n                price : priceString,\n                processTime : processTimeString\n            }\n        });\n\n        console.log(\"格式化后, 即将传入 ProductList 的数据为 : \");\n        console.log(array);\n\n        return array;\n    }\n\n    //注意同步，不然还没得到结果，就把null返回了\n    componentDidMount  = () => {\n        console.log(\"生成AuctionInto模块\");\n\n        // //注意，不能这样更新，错误写法\n        // this.state.productInSell = await this.getProductList(\"sell\");\n        // this.state.productInReveal = await this.getProductList(\"reveal\");\n        // this.state.productInFinalize = await this.getProductList(\"finalize\");\n\n        // let productInSell =  this.getProductList(\"sell\");\n        // let productInReveal =  this.getProductList(\"reveal\");\n        // let productInFinalize =  this.getProductList(\"finalize\");\n\n        // //学习 PersonalInfo 的处理方式\n        // //这里是异步的，在下面的 render 中调用，显示为 null\n        // this.setState({\n        //     productInSell : productInSell,\n        //     productInReveal : productInReveal,\n        //     productInFinalize : productInFinalize\n        // }, () =>{\n        //     console.log(\"this.setState 执行完毕\");\n        // }\n        // )\n\n\n\n\n        // axios.post(\"/account/showAll\", {\n        //     username:this.state.username\n        // }).then(response => {\n        //     const data =  response.data;\n        //     if(data.status === \"success\"){\n        //         console.log(\"获取该用户所有曾用地址成功\");\n        //         //data.accountAndLastTime 是外层是数组，每个数组元素是字典类型\n        //         //map 方法，数组映射\n                // let array = data.accountAndLastTime.map((item, index) => {\n                //     //计算时间差，判断是否活跃\n                //     //注意mysql返回的 timestamp 与js中的 Date 的区别，以及相互转换\n                //     let timeDifference = new Date() - new Date(item.lastTime);\n                //     console.log(\"这个日期距离现在已经 \" + timeDuration(timeDifference));\n                //     //小于一天时间的是活跃账户\n                //     let tag = ( timeDifference> 24*60*60*1000) ? true : false;\n                //     return {\n                //         //key从1开始\n                //         key: index + 1,\n                //         accountString: item.accountString,\n                //         accountStatus: tag ? 0:1,\n                //         //moment库，格式化时间\n                //         lastTime: moment(item.lastTime).format('yy年M月D日, h:mm:ss a')\n                //     }\n                // });\n        //         console.log(\"map映射后的要放到列表中的数据 array 为 : \");\n        //         console.dir(array);\n        //         this.setState({accountAndLastTimeArray:array});\n\n        //     }\n        //     else{\n        //         console.log(\"获取该用户所有曾用地址出错\");\n        //         message.warning (\"获取地址信息出错\").then (r  => console.log(r));\n        //     }\n        // }).catch( err => {\n        //     console.log(\"发起获取所有曾用地址的请求失败, ERR : \" + err);\n        // });\n    }\n\n\n\n\n\n    \n    render () {\n        // const {productInSell,\n        //     productInReveal,\n        //     productInFinalize} = this.state;\n\n\n        return (\n\n            <div>\n                <Descriptions\n                    title=\"出示报价\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                />\n                <ProductList productArray={this.getProductList(\"sell\")}></ProductList>\n\n                <Descriptions\n                    title=\"揭示报价\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    style={{marginTop:'50px'}}\n                />\n                <ProductList productArray={this.getProductList(\"reveal\")}></ProductList>\n\n                <Descriptions\n                    title=\"结束拍卖\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    style={{marginTop:'50px'}}\n                />\n                <ProductList productArray={this.getProductList(\"finalize\")}></ProductList>\n\n            </div>\n        );\n    }\n}\n\nexport default AuctionInto;\n"]},"metadata":{},"sourceType":"module"}