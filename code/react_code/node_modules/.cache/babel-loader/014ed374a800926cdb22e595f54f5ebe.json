{"ast":null,"code":"const utils = require(\"../utils\");\n\nconst web3Utils = require(\"web3-utils\");\n\nmodule.exports = {\n  contract_name: {\n    get: function () {\n      return this.contractName;\n    },\n    set: function (val) {\n      this.contractName = val;\n    }\n  },\n  contractName: {\n    get: function () {\n      return this._json.contractName || \"Contract\";\n    },\n    set: function (val) {\n      this._json.contractName = val;\n    }\n  },\n  gasMultiplier: {\n    get: function () {\n      if (this._json.gasMultiplier === undefined) {\n        this._json.gasMultiplier = 1.25;\n      }\n\n      return this._json.gasMultiplier;\n    },\n    set: function (val) {\n      this._json.gasMultiplier = val;\n    }\n  },\n  timeoutBlocks: {\n    get: function () {\n      return this._json.timeoutBlocks;\n    },\n    set: function (val) {\n      this._json.timeoutBlocks = val;\n    }\n  },\n  autoGas: {\n    get: function () {\n      if (this._json.autoGas === undefined) {\n        this._json.autoGas = true;\n      }\n\n      return this._json.autoGas;\n    },\n    set: function (val) {\n      this._json.autoGas = val;\n    }\n  },\n  numberFormat: {\n    get: function () {\n      if (this._json.numberFormat === undefined) {\n        this._json.numberFormat = \"BN\";\n      }\n\n      return this._json.numberFormat;\n    },\n    set: function (val) {\n      const allowedFormats = [\"BigNumber\", \"BN\", \"String\"];\n      const msg = `Invalid number format setting: \"${val}\": ` + `valid formats are: ${JSON.stringify(allowedFormats)}.`;\n      if (!allowedFormats.includes(val)) throw new Error(msg);\n      this._json.numberFormat = val;\n    }\n  },\n  abi: {\n    get: function () {\n      return this._json.abi;\n    },\n    set: function (val) {\n      this._json.abi = val;\n    }\n  },\n  metadata: function () {\n    return this._json.metadata;\n  },\n  network: function () {\n    var network_id = this.network_id;\n\n    if (network_id == null) {\n      var error = this.contractName + \" has no network id set, cannot lookup artifact data.\" + \" Either set the network manually using \" + this.contractName + \".setNetwork(), run \" + this.contractName + \".detectNetwork(), or use new(),\" + \" at() or deployed() as a thenable which will detect the network automatically.\";\n      throw new Error(error);\n    } // TODO: this might be bad; setting a value on a get.\n\n\n    if (this._json.networks[network_id] == null) {\n      var error = this.contractName + \" has no network configuration\" + \" for its current network id (\" + network_id + \").\";\n      throw new Error(error);\n    }\n\n    var returnVal = this._json.networks[network_id]; // Normalize output\n\n    if (returnVal.links == null) {\n      returnVal.links = {};\n    }\n\n    if (returnVal.events == null) {\n      returnVal.events = {};\n    }\n\n    return returnVal;\n  },\n  networks: function () {\n    return this._json.networks;\n  },\n  address: {\n    get: function () {\n      var address = this.network.address;\n\n      if (address == null) {\n        var error = \"Cannot find deployed address: \" + this.contractName + \" not deployed or address not set.\";\n        throw new Error(error);\n      }\n\n      return address;\n    },\n    set: function (val) {\n      if (val == null) {\n        throw new Error(\"Cannot set deployed address; malformed value: \" + val);\n      }\n\n      var network_id = this.network_id;\n\n      if (network_id == null) {\n        var error = this.contractName + \" has no network id set, cannot lookup artifact data.\" + \" Either set the network manually using \" + this.contractName + \".setNetwork(), run \" + this.contractName + \".detectNetwork(),\" + \" or use new(), at() or deployed() as a thenable which will\" + \" detect the network automatically.\";\n        throw new Error(error);\n      } // Create a network if we don't have one.\n\n\n      if (this._json.networks[network_id] == null) {\n        this._json.networks[network_id] = {\n          events: {},\n          links: {}\n        };\n      } // Finally, set the address.\n\n\n      this.network.address = val;\n    }\n  },\n  transactionHash: {\n    get: function () {\n      return this.network.transactionHash;\n    },\n    set: function (val) {\n      this.network.transactionHash = val;\n    }\n  },\n  links: function () {\n    if (!this.network_id) {\n      var error = this.contractName + \" has no network id set, cannot lookup artifact data.\" + \" Either set the network manually using \" + this.contractName + \".setNetwork(),\" + \" run \" + this.contractName + \".detectNetwork(), or use new(), at()\" + \" or deployed() as a thenable which will detect the network automatically.\";\n      throw new Error(error);\n    }\n\n    if (this._json.networks[this.network_id] == null) {\n      return {};\n    }\n\n    return this.network.links || {};\n  },\n  events: function () {\n    var events;\n\n    if (this._json.networks[this.network_id] == null) {\n      events = {};\n    } else {\n      events = this.network.events || {};\n    } // Merge abi events with whatever's returned.\n\n\n    var abi = this.abi;\n    abi.forEach(function (item) {\n      if (item.type !== \"event\") return;\n\n      if (item.signature) {\n        events[item.signature] = item;\n      } else {\n        var signature = item.name + \"(\";\n        item.inputs.forEach(function (input, index) {\n          signature += input.type;\n\n          if (index < item.inputs.length - 1) {\n            signature += \",\";\n          }\n        });\n        signature += \")\";\n        var topic = web3Utils.keccak256(signature);\n        events[topic] = item;\n      }\n    });\n    return events;\n  },\n  binary: function () {\n    return utils.linkBytecode(this.bytecode, this.links);\n  },\n  deployedBinary: function () {\n    return utils.linkBytecode(this.deployedBytecode, this.links);\n  },\n  // deprecated; use bytecode\n  unlinked_binary: {\n    get: function () {\n      return this.bytecode;\n    },\n    set: function (val) {\n      this.bytecode = val;\n    }\n  },\n  // alias for unlinked_binary; unlinked_binary will eventually be deprecated\n  bytecode: {\n    get: function () {\n      return this._json.bytecode;\n    },\n    set: function (val) {\n      this._json.bytecode = val;\n    }\n  },\n  deployedBytecode: {\n    get: function () {\n      var code = this._json.deployedBytecode;\n\n      if (code.indexOf(\"0x\") !== 0) {\n        code = \"0x\" + code;\n      }\n\n      return code;\n    },\n    set: function (val) {\n      var code = val;\n\n      if (val.indexOf(\"0x\") !== 0) {\n        code = \"0x\" + code;\n      }\n\n      this._json.deployedBytecode = code;\n    }\n  },\n  sourceMap: {\n    get: function () {\n      return this._json.sourceMap;\n    },\n    set: function (val) {\n      this._json.sourceMap = val;\n    }\n  },\n  deployedSourceMap: {\n    get: function () {\n      return this._json.deployedSourceMap;\n    },\n    set: function (val) {\n      this._json.deployedSourceMap = val;\n    }\n  },\n  source: {\n    get: function () {\n      return this._json.source;\n    },\n    set: function (val) {\n      this._json.source = val;\n    }\n  },\n  sourcePath: {\n    get: function () {\n      return this._json.sourcePath;\n    },\n    set: function (val) {\n      this._json.sourcePath = val;\n    }\n  },\n  legacyAST: {\n    get: function () {\n      return this._json.legacyAST;\n    },\n    set: function (val) {\n      this._json.legacyAST = val;\n    }\n  },\n  ast: {\n    get: function () {\n      return this._json.ast;\n    },\n    set: function (val) {\n      this._json.ast = val;\n    }\n  },\n  compiler: {\n    get: function () {\n      return this._json.compiler;\n    },\n    set: function (val) {\n      this._json.compiler = val;\n    }\n  },\n  // Deprecated\n  schema_version: function () {\n    return this.schemaVersion;\n  },\n  schemaVersion: function () {\n    return this._json.schemaVersion;\n  },\n  // deprecated\n  updated_at: function () {\n    return this.updatedAt;\n  },\n  updatedAt: function () {\n    try {\n      return this.network.updatedAt || this._json.updatedAt;\n    } catch (e) {\n      return this._json.updatedAt;\n    }\n  },\n  userdoc: function () {\n    return this._json.userdoc;\n  },\n  devdoc: function () {\n    return this._json.devdoc;\n  }\n};","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/truffle-contract/lib/contract/properties.js"],"names":["utils","require","web3Utils","module","exports","contract_name","get","contractName","set","val","_json","gasMultiplier","undefined","timeoutBlocks","autoGas","numberFormat","allowedFormats","msg","JSON","stringify","includes","Error","abi","metadata","network","network_id","error","networks","returnVal","links","events","address","transactionHash","forEach","item","type","signature","name","inputs","input","index","length","topic","keccak256","binary","linkBytecode","bytecode","deployedBinary","deployedBytecode","unlinked_binary","code","indexOf","sourceMap","deployedSourceMap","source","sourcePath","legacyAST","ast","compiler","schema_version","schemaVersion","updated_at","updatedAt","e","userdoc","devdoc"],"mappings":"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","sourcesContent":["const utils = require(\"../utils\");\nconst web3Utils = require(\"web3-utils\");\n\nmodule.exports = {\n  contract_name: {\n    get: function() {\n      return this.contractName;\n    },\n    set: function(val) {\n      this.contractName = val;\n    }\n  },\n  contractName: {\n    get: function() {\n      return this._json.contractName || \"Contract\";\n    },\n    set: function(val) {\n      this._json.contractName = val;\n    }\n  },\n\n  gasMultiplier: {\n    get: function() {\n      if (this._json.gasMultiplier === undefined) {\n        this._json.gasMultiplier = 1.25;\n      }\n      return this._json.gasMultiplier;\n    },\n    set: function(val) {\n      this._json.gasMultiplier = val;\n    }\n  },\n  timeoutBlocks: {\n    get: function() {\n      return this._json.timeoutBlocks;\n    },\n    set: function(val) {\n      this._json.timeoutBlocks = val;\n    }\n  },\n  autoGas: {\n    get: function() {\n      if (this._json.autoGas === undefined) {\n        this._json.autoGas = true;\n      }\n      return this._json.autoGas;\n    },\n    set: function(val) {\n      this._json.autoGas = val;\n    }\n  },\n  numberFormat: {\n    get: function() {\n      if (this._json.numberFormat === undefined) {\n        this._json.numberFormat = \"BN\";\n      }\n      return this._json.numberFormat;\n    },\n    set: function(val) {\n      const allowedFormats = [\"BigNumber\", \"BN\", \"String\"];\n\n      const msg =\n        `Invalid number format setting: \"${val}\": ` +\n        `valid formats are: ${JSON.stringify(allowedFormats)}.`;\n\n      if (!allowedFormats.includes(val)) throw new Error(msg);\n\n      this._json.numberFormat = val;\n    }\n  },\n  abi: {\n    get: function() {\n      return this._json.abi;\n    },\n    set: function(val) {\n      this._json.abi = val;\n    }\n  },\n  metadata: function() {\n    return this._json.metadata;\n  },\n  network: function() {\n    var network_id = this.network_id;\n\n    if (network_id == null) {\n      var error =\n        this.contractName +\n        \" has no network id set, cannot lookup artifact data.\" +\n        \" Either set the network manually using \" +\n        this.contractName +\n        \".setNetwork(), run \" +\n        this.contractName +\n        \".detectNetwork(), or use new(),\" +\n        \" at() or deployed() as a thenable which will detect the network automatically.\";\n\n      throw new Error(error);\n    }\n\n    // TODO: this might be bad; setting a value on a get.\n    if (this._json.networks[network_id] == null) {\n      var error =\n        this.contractName +\n        \" has no network configuration\" +\n        \" for its current network id (\" +\n        network_id +\n        \").\";\n\n      throw new Error(error);\n    }\n\n    var returnVal = this._json.networks[network_id];\n\n    // Normalize output\n    if (returnVal.links == null) {\n      returnVal.links = {};\n    }\n\n    if (returnVal.events == null) {\n      returnVal.events = {};\n    }\n\n    return returnVal;\n  },\n  networks: function() {\n    return this._json.networks;\n  },\n  address: {\n    get: function() {\n      var address = this.network.address;\n\n      if (address == null) {\n        var error =\n          \"Cannot find deployed address: \" +\n          this.contractName +\n          \" not deployed or address not set.\";\n        throw new Error(error);\n      }\n\n      return address;\n    },\n    set: function(val) {\n      if (val == null) {\n        throw new Error(\"Cannot set deployed address; malformed value: \" + val);\n      }\n\n      var network_id = this.network_id;\n\n      if (network_id == null) {\n        var error =\n          this.contractName +\n          \" has no network id set, cannot lookup artifact data.\" +\n          \" Either set the network manually using \" +\n          this.contractName +\n          \".setNetwork(), run \" +\n          this.contractName +\n          \".detectNetwork(),\" +\n          \" or use new(), at() or deployed() as a thenable which will\" +\n          \" detect the network automatically.\";\n\n        throw new Error(error);\n      }\n\n      // Create a network if we don't have one.\n      if (this._json.networks[network_id] == null) {\n        this._json.networks[network_id] = {\n          events: {},\n          links: {}\n        };\n      }\n\n      // Finally, set the address.\n      this.network.address = val;\n    }\n  },\n  transactionHash: {\n    get: function() {\n      return this.network.transactionHash;\n    },\n    set: function(val) {\n      this.network.transactionHash = val;\n    }\n  },\n  links: function() {\n    if (!this.network_id) {\n      var error =\n        this.contractName +\n        \" has no network id set, cannot lookup artifact data.\" +\n        \" Either set the network manually using \" +\n        this.contractName +\n        \".setNetwork(),\" +\n        \" run \" +\n        this.contractName +\n        \".detectNetwork(), or use new(), at()\" +\n        \" or deployed() as a thenable which will detect the network automatically.\";\n\n      throw new Error(error);\n    }\n\n    if (this._json.networks[this.network_id] == null) {\n      return {};\n    }\n\n    return this.network.links || {};\n  },\n  events: function() {\n    var events;\n\n    if (this._json.networks[this.network_id] == null) {\n      events = {};\n    } else {\n      events = this.network.events || {};\n    }\n\n    // Merge abi events with whatever's returned.\n    var abi = this.abi;\n\n    abi.forEach(function(item) {\n      if (item.type !== \"event\") return;\n\n      if (item.signature) {\n        events[item.signature] = item;\n      } else {\n        var signature = item.name + \"(\";\n\n        item.inputs.forEach(function(input, index) {\n          signature += input.type;\n\n          if (index < item.inputs.length - 1) {\n            signature += \",\";\n          }\n        });\n\n        signature += \")\";\n\n        var topic = web3Utils.keccak256(signature);\n\n        events[topic] = item;\n      }\n    });\n\n    return events;\n  },\n  binary: function() {\n    return utils.linkBytecode(this.bytecode, this.links);\n  },\n  deployedBinary: function() {\n    return utils.linkBytecode(this.deployedBytecode, this.links);\n  },\n\n  // deprecated; use bytecode\n  unlinked_binary: {\n    get: function() {\n      return this.bytecode;\n    },\n    set: function(val) {\n      this.bytecode = val;\n    }\n  },\n  // alias for unlinked_binary; unlinked_binary will eventually be deprecated\n  bytecode: {\n    get: function() {\n      return this._json.bytecode;\n    },\n    set: function(val) {\n      this._json.bytecode = val;\n    }\n  },\n  deployedBytecode: {\n    get: function() {\n      var code = this._json.deployedBytecode;\n\n      if (code.indexOf(\"0x\") !== 0) {\n        code = \"0x\" + code;\n      }\n\n      return code;\n    },\n    set: function(val) {\n      var code = val;\n\n      if (val.indexOf(\"0x\") !== 0) {\n        code = \"0x\" + code;\n      }\n\n      this._json.deployedBytecode = code;\n    }\n  },\n  sourceMap: {\n    get: function() {\n      return this._json.sourceMap;\n    },\n    set: function(val) {\n      this._json.sourceMap = val;\n    }\n  },\n  deployedSourceMap: {\n    get: function() {\n      return this._json.deployedSourceMap;\n    },\n    set: function(val) {\n      this._json.deployedSourceMap = val;\n    }\n  },\n  source: {\n    get: function() {\n      return this._json.source;\n    },\n    set: function(val) {\n      this._json.source = val;\n    }\n  },\n  sourcePath: {\n    get: function() {\n      return this._json.sourcePath;\n    },\n    set: function(val) {\n      this._json.sourcePath = val;\n    }\n  },\n  legacyAST: {\n    get: function() {\n      return this._json.legacyAST;\n    },\n    set: function(val) {\n      this._json.legacyAST = val;\n    }\n  },\n  ast: {\n    get: function() {\n      return this._json.ast;\n    },\n    set: function(val) {\n      this._json.ast = val;\n    }\n  },\n  compiler: {\n    get: function() {\n      return this._json.compiler;\n    },\n    set: function(val) {\n      this._json.compiler = val;\n    }\n  },\n  // Deprecated\n  schema_version: function() {\n    return this.schemaVersion;\n  },\n  schemaVersion: function() {\n    return this._json.schemaVersion;\n  },\n  // deprecated\n  updated_at: function() {\n    return this.updatedAt;\n  },\n  updatedAt: function() {\n    try {\n      return this.network.updatedAt || this._json.updatedAt;\n    } catch (e) {\n      return this._json.updatedAt;\n    }\n  },\n  userdoc: function() {\n    return this._json.userdoc;\n  },\n  devdoc: function() {\n    return this._json.devdoc;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}