{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport env from 'zrender/lib/core/env';\nimport TooltipHTMLContent from './TooltipHTMLContent';\nimport TooltipRichContent from './TooltipRichContent';\nimport * as formatUtil from '../../util/format';\nimport * as numberUtil from '../../util/number';\nimport * as graphic from '../../util/graphic';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries';\nimport * as layoutUtil from '../../util/layout';\nimport Model from '../../model/Model';\nimport * as globalListener from '../axisPointer/globalListener';\nimport * as axisHelper from '../../coord/axisHelper';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper';\nimport { getTooltipRenderMode } from '../../util/model';\nimport ComponentView from '../../view/Component';\nimport { format as timeFormat } from '../../util/time'; // import { isDimensionStacked } from '../../data/helper/dataStackHelper';\n\nimport { getECData } from '../../util/innerStore';\nimport { shouldTooltipConfine } from './helper';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup';\nimport { findEventDispatcher } from '../../util/event';\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    this._tooltipContent = this._renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && findEventDispatcher(el, function (target) {\n        return getECData(target).dataIndex != null;\n      }, true)) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !zrUtil.trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        zrUtil.each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex);\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n\n          if (seriesTooltipResult.markupFragment) {\n            axisSectionMarkup.blocks.push(seriesTooltipResult.markupFragment);\n          }\n\n          if (seriesTooltipResult.markupText) {\n            markupTextArrLegacy.push(seriesTooltipResult.markupText);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, el, dispatchAction) {\n    var dispatcher = findEventDispatcher(el, function (target) {\n      return getECData(target).dataIndex != null;\n    }, true);\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var markupText = seriesTooltipResult.markupFragment ? buildTooltipMarkup(seriesTooltipResult.markupFragment, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.markupText;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (zrUtil.isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent( // Use formatterParams from element defined in component\n      subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    if (formatter && zrUtil.isString(formatter)) {\n      var useUTC = tooltipModel.ecModel.get('useUTC');\n      var params0 = zrUtil.isArray(params) ? params[0] : params;\n      var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n      html = formatter;\n\n      if (isTimeAxis) {\n        html = timeFormat(params0.axisValue, html, useUTC);\n      }\n\n      html = formatUtil.formatTpl(html, params, true);\n    } else if (zrUtil.isFunction(formatter)) {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPoint.color, positionExpr);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPoint.color, positionExpr);\n    tooltipContent.show(tooltipModel, nearPoint.color);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (zrUtil.isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (zrUtil.isString(positionExpr) && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  // Last is always tooltip model.\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (zrUtil.isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 10;\n  var offset = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nexport default TooltipView;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/前端/node_modules/echarts/lib/component/tooltip/TooltipView.js"],"names":["__extends","zrUtil","env","TooltipHTMLContent","TooltipRichContent","formatUtil","numberUtil","graphic","findPointFromSeries","layoutUtil","Model","globalListener","axisHelper","axisPointerViewHelper","getTooltipRenderMode","ComponentView","format","timeFormat","getECData","shouldTooltipConfine","normalizeTooltipFormatResult","createTooltipMarkup","buildTooltipMarkup","TooltipMarkupStyleCreator","findEventDispatcher","bind","each","parsePercent","proxyRect","Rect","shape","x","y","width","height","TooltipView","_super","_this","apply","arguments","type","prototype","init","ecModel","api","node","tooltipModel","getComponent","renderMode","get","_renderMode","_tooltipContent","getDom","appendToBody","render","group","removeAll","_tooltipModel","_ecModel","_api","_alwaysShowContent","tooltipContent","update","setEnterable","_initGlobalListener","_keepShow","triggerOn","register","currTrigger","e","dispatchAction","indexOf","_tryShow","_hide","_lastX","_lastY","self_1","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","dataByCoordSys","_lastDataByCoordSys","payload","from","uid","makeDispatchAction","_ticket","tooltip","el","offsetX","offsetY","target","position","tooltipOption","seriesIndex","_manuallyAxisShowTip","pointInfo","cx","point","cy","getZr","findHover","manuallyHideTip","hideLater","dataIndex","coordSysAxesInfo","seriesModel","getSeriesByIndex","data","getData","tooltipCascadedModel","buildTooltipModel","getItemModel","coordinateSystem","model","length","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","cb","delay","_showTimout","globalTooltipModel","singleTooltipModel","cbParamsList","articleMarkup","blocks","noHeader","markupTextArrLegacy","markupStyleCreator","itemCoordSys","dataByAxis","axisItem","axisModel","axisDim","axisIndex","axisValue","value","axisValueLabel","getValueLabel","axis","seriesDataIndices","valueLabelOpt","axisSectionMarkup","header","trim","sortBlocks","push","idxItem","series","dataIndexInside","cbParams","getDataParams","axisType","axisId","getAxisRawValue","marker","makeTooltipMarker","convertToColorString","color","seriesTooltipResult","formatTooltip","markupFragment","markupText","reverse","positionExpr","orderMode","builtMarkupText","unshift","blockBreak","allMarkupText","join","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","Math","random","dispatcher","ecData","dataModel","dataType","tooltipTrigger","params","asyncTicket","name","getRawIndex","tooltipOpt","isString","content","formatter","subTooltipModel","defaultHtml","html","nearPoint","_getNearestPoint","useUTC","params0","isArray","isTimeAxis","formatTpl","isFunction","callback","cbTicket","setContent","show","tooltipDataParams","trigger","borderColor","viewWidth","getWidth","viewHeight","getHeight","contentSize","getSize","align","vAlign","rect","getBoundingRect","clone","applyTransform","transform","viewSize","slice","isObject","boxLayoutPosition","layoutRect","getLayoutRect","pos","calcTooltipPosition","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","newIndices","lastIdxItem","j","newIdxItem","dispose","unregister","modelCascade","resultModel","pop","gapH","gapV","size","getOuterSize","min","max","domWidth","domHeight","gap","offset","rectWidth","rectHeight"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\nimport { __extends } from \"tslib\";\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport env from 'zrender/lib/core/env';\nimport TooltipHTMLContent from './TooltipHTMLContent';\nimport TooltipRichContent from './TooltipRichContent';\nimport * as formatUtil from '../../util/format';\nimport * as numberUtil from '../../util/number';\nimport * as graphic from '../../util/graphic';\nimport findPointFromSeries from '../axisPointer/findPointFromSeries';\nimport * as layoutUtil from '../../util/layout';\nimport Model from '../../model/Model';\nimport * as globalListener from '../axisPointer/globalListener';\nimport * as axisHelper from '../../coord/axisHelper';\nimport * as axisPointerViewHelper from '../axisPointer/viewHelper';\nimport { getTooltipRenderMode } from '../../util/model';\nimport ComponentView from '../../view/Component';\nimport { format as timeFormat } from '../../util/time'; // import { isDimensionStacked } from '../../data/helper/dataStackHelper';\n\nimport { getECData } from '../../util/innerStore';\nimport { shouldTooltipConfine } from './helper';\nimport { normalizeTooltipFormatResult } from '../../model/mixin/dataFormat';\nimport { createTooltipMarkup, buildTooltipMarkup, TooltipMarkupStyleCreator } from './tooltipMarkup';\nimport { findEventDispatcher } from '../../util/event';\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar TooltipView =\n/** @class */\nfunction (_super) {\n  __extends(TooltipView, _super);\n\n  function TooltipView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TooltipView.type;\n    return _this;\n  }\n\n  TooltipView.prototype.init = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    this._tooltipContent = this._renderMode === 'richText' ? new TooltipRichContent(api) : new TooltipHTMLContent(api.getDom(), api, {\n      appendToBody: tooltipModel.get('appendToBody', true)\n    });\n  };\n\n  TooltipView.prototype.render = function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    this._tooltipModel = tooltipModel;\n    this._ecModel = ecModel;\n    this._api = api;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update(tooltipModel);\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  };\n\n  TooltipView.prototype._initGlobalListener = function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  };\n\n  TooltipView.prototype._keepShow = function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self_1 = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self_1.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self_1._lastX,\n          y: self_1._lastY,\n          dataByCoordSys: self_1._lastDataByCoordSys\n        });\n      });\n    }\n  };\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n\n\n  TooltipView.prototype.manuallyShowTip = function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.x = payload.x;\n      el.y = payload.y;\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  };\n\n  TooltipView.prototype.manuallyHideTip = function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = this._lastDataByCoordSys = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  }; // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n\n\n  TooltipView.prototype._manuallyAxisShowTip = function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex; // @ts-ignore\n\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipCascadedModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipCascadedModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  };\n\n  TooltipView.prototype._tryShow = function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && findEventDispatcher(el, function (target) {\n        return getECData(target).dataIndex != null;\n      }, true)) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  };\n\n  TooltipView.prototype._showOrMove = function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easier to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  };\n\n  TooltipView.prototype._showAxisTooltip = function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var cbParamsList = [];\n    var articleMarkup = createTooltipMarkup('section', {\n      blocks: [],\n      noHeader: true\n    }); // Only for legacy: `Serise['formatTooltip']` returns a string.\n\n    var markupTextArrLegacy = [];\n    var markupStyleCreator = new TooltipMarkupStyleCreator();\n    each(dataByCoordSys, function (itemCoordSys) {\n      each(itemCoordSys.dataByAxis, function (axisItem) {\n        var axisModel = ecModel.getComponent(axisItem.axisDim + 'Axis', axisItem.axisIndex);\n        var axisValue = axisItem.value;\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var axisValueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, axisItem.seriesDataIndices, axisItem.valueLabelOpt);\n        var axisSectionMarkup = createTooltipMarkup('section', {\n          header: axisValueLabel,\n          noHeader: !zrUtil.trim(axisValueLabel),\n          sortBlocks: true,\n          blocks: []\n        });\n        articleMarkup.blocks.push(axisSectionMarkup);\n        zrUtil.each(axisItem.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var cbParams = series.getDataParams(dataIndex);\n          cbParams.axisDim = axisItem.axisDim;\n          cbParams.axisIndex = axisItem.axisIndex;\n          cbParams.axisType = axisItem.axisType;\n          cbParams.axisId = axisItem.axisId;\n          cbParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, {\n            value: axisValue\n          });\n          cbParams.axisValueLabel = axisValueLabel; // Pre-create marker style for makers. Users can assemble richText\n          // text in `formatter` callback and use those markers style.\n\n          cbParams.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(cbParams.color), renderMode);\n          var seriesTooltipResult = normalizeTooltipFormatResult(series.formatTooltip(dataIndex, true, null));\n\n          if (seriesTooltipResult.markupFragment) {\n            axisSectionMarkup.blocks.push(seriesTooltipResult.markupFragment);\n          }\n\n          if (seriesTooltipResult.markupText) {\n            markupTextArrLegacy.push(seriesTooltipResult.markupText);\n          }\n\n          cbParamsList.push(cbParams);\n        });\n      });\n    }); // In most cases, the second axis is displays upper on the first one.\n    // So we reverse it to look better.\n\n    articleMarkup.blocks.reverse();\n    markupTextArrLegacy.reverse();\n    var positionExpr = e.position;\n    var orderMode = singleTooltipModel.get('order');\n    var builtMarkupText = buildTooltipMarkup(articleMarkup, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), singleTooltipModel.get('textStyle'));\n    builtMarkupText && markupTextArrLegacy.unshift(builtMarkupText);\n    var blockBreak = renderMode === 'richText' ? '\\n\\n' : '<br/>';\n    var allMarkupText = markupTextArrLegacy.join(blockBreak);\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, cbParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, allMarkupText, cbParamsList, Math.random() + '', point[0], point[1], positionExpr, null, markupStyleCreator);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  };\n\n  TooltipView.prototype._showSeriesItemTooltip = function (e, el, dispatchAction) {\n    var dispatcher = findEventDispatcher(el, function (target) {\n      return getECData(target).dataIndex != null;\n    }, true);\n    var ecModel = this._ecModel;\n    var ecData = getECData(dispatcher); // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = ecData.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = ecData.dataModel || seriesModel;\n    var dataIndex = ecData.dataIndex;\n    var dataType = ecData.dataType;\n    var data = dataModel.getData(dataType);\n    var renderMode = this._renderMode;\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Pre-create marker style for makers. Users can assemble richText\n    // text in `formatter` callback and use those markers style.\n\n    params.marker = markupStyleCreator.makeTooltipMarker('item', formatUtil.convertToColorString(params.color), renderMode);\n    var seriesTooltipResult = normalizeTooltipFormatResult(dataModel.formatTooltip(dataIndex, false, dataType));\n    var orderMode = tooltipModel.get('order');\n    var markupText = seriesTooltipResult.markupFragment ? buildTooltipMarkup(seriesTooltipResult.markupFragment, markupStyleCreator, renderMode, orderMode, ecModel.get('useUTC'), tooltipModel.get('textStyle')) : seriesTooltipResult.markupText;\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, markupText, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markupStyleCreator);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showComponentItemTooltip = function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (zrUtil.isString(tooltipOpt)) {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random() + ''; // PENDING: this case do not support richText style yet.\n\n    var markupStyleCreator = new TooltipMarkupStyleCreator(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on coordinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent( // Use formatterParams from element defined in component\n      subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el, markupStyleCreator);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype._showTooltipContent = function ( // Use Model<TooltipOption> insteadof TooltipModel because this model may be from series or other options.\n  // Instead of top level tooltip.\n  tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markupStyleCreator) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    var nearPoint = this._getNearestPoint([x, y], params, tooltipModel.get('trigger'), tooltipModel.get('borderColor'));\n\n    if (formatter && zrUtil.isString(formatter)) {\n      var useUTC = tooltipModel.ecModel.get('useUTC');\n      var params0 = zrUtil.isArray(params) ? params[0] : params;\n      var isTimeAxis = params0 && params0.axisType && params0.axisType.indexOf('time') >= 0;\n      html = formatter;\n\n      if (isTimeAxis) {\n        html = timeFormat(params0.axisValue, html, useUTC);\n      }\n\n      html = formatUtil.formatTpl(html, params, true);\n    } else if (zrUtil.isFunction(formatter)) {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPoint.color, positionExpr);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markupStyleCreator, tooltipModel, nearPoint.color, positionExpr);\n    tooltipContent.show(tooltipModel, nearPoint.color);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  };\n\n  TooltipView.prototype._getNearestPoint = function (point, tooltipDataParams, trigger, borderColor) {\n    if (trigger === 'axis' || zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || (this._renderMode === 'html' ? '#fff' : 'none')\n      };\n    }\n\n    if (!zrUtil.isArray(tooltipDataParams)) {\n      return {\n        color: borderColor || tooltipDataParams.color || tooltipDataParams.borderColor\n      };\n    }\n  };\n\n  TooltipView.prototype._updatePosition = function (tooltipModel, positionExpr, x, // Mouse x\n  y, // Mouse y\n  content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (zrUtil.isFunction(positionExpr)) {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      var boxLayoutPosition = positionExpr;\n      boxLayoutPosition.width = contentSize[0];\n      boxLayoutPosition.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(boxLayoutPosition, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (zrUtil.isString(positionExpr) && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (shouldTooltipConfine(tooltipModel)) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  }; // FIXME\n  // Should we remove this but leave this to user?\n\n\n  TooltipView.prototype._updateContentNotChangedOnAxis = function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || [];\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged = contentNotChanged && lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged = contentNotChanged && lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged = contentNotChanged && lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  };\n\n  TooltipView.prototype._hide = function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  };\n\n  TooltipView.prototype.dispose = function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  };\n\n  TooltipView.type = 'tooltip';\n  return TooltipView;\n}(ComponentView);\n/**\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  // Last is always tooltip model.\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (zrUtil.isString(tooltipOpt)) {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    // Add extra 2 pixels for this case:\n    // At present the \"values\" in defaut tooltip are using CSS `float: right`.\n    // When the right edge of the tooltip box is on the right side of the\n    // viewport, the `float` layout might push the \"values\" to the second line.\n    if (x + width + gapH + 2 > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 10;\n  var offset = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap - offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap + offset;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nexport default TooltipView;"]},"metadata":{},"sourceType":"module"}