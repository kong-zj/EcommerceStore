{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport createListSimply from '../helper/createListSimply';\nimport SeriesModel from '../../model/Series';\nimport geoSourceManager from '../../coord/geo/geoSourceManager';\nimport { makeSeriesEncodeForNameBased } from '../../data/helper/sourceHelper';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\n\nvar MapSeries =\n/** @class */\nfunction (_super) {\n  __extends(MapSeries, _super);\n\n  function MapSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MapSeries.type; // Only first map series of same mapType will drawMap.\n\n    _this.needsDrawMap = false; // Group of all map series with same mapType\n\n    _this.seriesGroup = [];\n\n    _this.getTooltipPosition = function (dataIndex) {\n      if (dataIndex != null) {\n        var name_1 = this.getData().getName(dataIndex);\n        var geo = this.coordinateSystem;\n        var region = geo.getRegion(name_1);\n        return region && geo.dataToPoint(region.center);\n      }\n    };\n\n    return _this;\n  }\n\n  MapSeries.prototype.getInitialData = function (option) {\n    var data = createListSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n    var dataNameMap = zrUtil.createHashMap();\n    var toAppendNames = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var name_2 = data.getName(i);\n      dataNameMap.set(name_2, true);\n    }\n\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);\n    zrUtil.each(geoSource.regions, function (region) {\n      var name = region.name;\n\n      if (!dataNameMap.get(name)) {\n        toAppendNames.push(name);\n      }\n    }); // Complete data with missing regions. The consequent processes (like visual\n    // map and render) can not be performed without a \"full data\". For example,\n    // find `dataIndex` by name.\n\n    data.appendValues([], toAppendNames);\n    return data;\n  };\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n\n\n  MapSeries.prototype.getHostGeoModel = function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.ecModel.getComponent('geo', geoIndex) : null;\n  };\n\n  MapSeries.prototype.getMapType = function () {\n    return (this.getHostGeoModel() || this).option.map;\n  }; // _fillOption(option, mapName) {\n  // Shallow clone\n  // option = zrUtil.extend({}, option);\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n  // return option;\n  // }\n\n\n  MapSeries.prototype.getRawValue = function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  };\n  /**\n   * Get model of region\n   */\n\n\n  MapSeries.prototype.getRegionModel = function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  };\n  /**\n   * Map tooltip formatter\n   */\n\n\n  MapSeries.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(seriesGroup[i].name);\n      }\n    }\n\n    return createTooltipMarkup('section', {\n      header: seriesNames.join(', '),\n      noHeader: !seriesNames.length,\n      blocks: [createTooltipMarkup('nameValue', {\n        name: name,\n        value: value\n      })]\n    });\n  };\n\n  MapSeries.prototype.setZoom = function (zoom) {\n    this.option.zoom = zoom;\n  };\n\n  MapSeries.prototype.setCenter = function (center) {\n    this.option.center = center;\n  };\n\n  MapSeries.type = 'series.map';\n  MapSeries.dependencies = ['geo'];\n  MapSeries.layoutMode = 'box';\n  MapSeries.defaultOption = {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    showLegendSymbol: true,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    selectedMode: true,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    },\n    select: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    nameProperty: 'name'\n  };\n  return MapSeries;\n}(SeriesModel);\n\nexport default MapSeries;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/node_modules/echarts/lib/chart/map/MapSeries.js"],"names":["__extends","zrUtil","createListSimply","SeriesModel","geoSourceManager","makeSeriesEncodeForNameBased","createTooltipMarkup","MapSeries","_super","_this","apply","arguments","type","needsDrawMap","seriesGroup","getTooltipPosition","dataIndex","name_1","getData","getName","geo","coordinateSystem","region","getRegion","dataToPoint","center","prototype","getInitialData","option","data","coordDimensions","encodeDefaulter","curry","dataNameMap","createHashMap","toAppendNames","i","len","count","name_2","set","geoSource","load","getMapType","nameMap","nameProperty","each","regions","name","get","push","appendValues","getHostGeoModel","geoIndex","ecModel","getComponent","map","getRawValue","mapDimension","getRegionModel","regionName","getItemModel","indexOfName","formatTooltip","multipleSeries","dataType","value","seriesNames","length","otherIndex","originalData","valueDim","isNaN","header","join","noHeader","blocks","setZoom","zoom","setCenter","dependencies","layoutMode","defaultOption","zlevel","z","left","top","aspectScale","showLegendSymbol","boundingCoords","scaleLimit","selectedMode","label","show","color","itemStyle","borderWidth","borderColor","areaColor","emphasis","select"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport createListSimply from '../helper/createListSimply';\nimport SeriesModel from '../../model/Series';\nimport geoSourceManager from '../../coord/geo/geoSourceManager';\nimport { makeSeriesEncodeForNameBased } from '../../data/helper/sourceHelper';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\n\nvar MapSeries =\n/** @class */\nfunction (_super) {\n  __extends(MapSeries, _super);\n\n  function MapSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = MapSeries.type; // Only first map series of same mapType will drawMap.\n\n    _this.needsDrawMap = false; // Group of all map series with same mapType\n\n    _this.seriesGroup = [];\n\n    _this.getTooltipPosition = function (dataIndex) {\n      if (dataIndex != null) {\n        var name_1 = this.getData().getName(dataIndex);\n        var geo = this.coordinateSystem;\n        var region = geo.getRegion(name_1);\n        return region && geo.dataToPoint(region.center);\n      }\n    };\n\n    return _this;\n  }\n\n  MapSeries.prototype.getInitialData = function (option) {\n    var data = createListSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n    var dataNameMap = zrUtil.createHashMap();\n    var toAppendNames = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var name_2 = data.getName(i);\n      dataNameMap.set(name_2, true);\n    }\n\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);\n    zrUtil.each(geoSource.regions, function (region) {\n      var name = region.name;\n\n      if (!dataNameMap.get(name)) {\n        toAppendNames.push(name);\n      }\n    }); // Complete data with missing regions. The consequent processes (like visual\n    // map and render) can not be performed without a \"full data\". For example,\n    // find `dataIndex` by name.\n\n    data.appendValues([], toAppendNames);\n    return data;\n  };\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n\n\n  MapSeries.prototype.getHostGeoModel = function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.ecModel.getComponent('geo', geoIndex) : null;\n  };\n\n  MapSeries.prototype.getMapType = function () {\n    return (this.getHostGeoModel() || this).option.map;\n  }; // _fillOption(option, mapName) {\n  // Shallow clone\n  // option = zrUtil.extend({}, option);\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n  // return option;\n  // }\n\n\n  MapSeries.prototype.getRawValue = function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  };\n  /**\n   * Get model of region\n   */\n\n\n  MapSeries.prototype.getRegionModel = function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  };\n  /**\n   * Map tooltip formatter\n   */\n\n\n  MapSeries.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(seriesGroup[i].name);\n      }\n    }\n\n    return createTooltipMarkup('section', {\n      header: seriesNames.join(', '),\n      noHeader: !seriesNames.length,\n      blocks: [createTooltipMarkup('nameValue', {\n        name: name,\n        value: value\n      })]\n    });\n  };\n\n  MapSeries.prototype.setZoom = function (zoom) {\n    this.option.zoom = zoom;\n  };\n\n  MapSeries.prototype.setCenter = function (center) {\n    this.option.center = center;\n  };\n\n  MapSeries.type = 'series.map';\n  MapSeries.dependencies = ['geo'];\n  MapSeries.layoutMode = 'box';\n  MapSeries.defaultOption = {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    showLegendSymbol: true,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    selectedMode: true,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    },\n    select: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    nameProperty: 'name'\n  };\n  return MapSeries;\n}(SeriesModel);\n\nexport default MapSeries;"]},"metadata":{},"sourceType":"module"}