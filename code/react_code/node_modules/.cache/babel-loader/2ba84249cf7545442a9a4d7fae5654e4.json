{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport RoamController from './RoamController';\nimport * as roamHelper from '../../component/helper/roamHelper';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper';\nimport * as graphic from '../../util/graphic';\nimport { enableHoverEmphasis, DISPLAY_STATES } from '../../util/states';\nimport geoSourceManager from '../../coord/geo/geoSourceManager';\nimport { getUID } from '../../util/component';\nimport Transformable from 'zrender/lib/core/Transformable';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\nimport { getECData } from '../../util/innerStore';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal';\n\nfunction getFixedItemStyle(model) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nvar MapDraw =\n/** @class */\nfunction () {\n  function MapDraw(api) {\n    var group = new graphic.Group();\n    this.uid = getUID('ec_map_draw'); // @ts-ignore FIXME:TS\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    this.group = group;\n    group.add(this._regionsGroup = new graphic.Group());\n    group.add(this._backgroundGroup = new graphic.Group());\n  }\n\n  MapDraw.prototype.draw = function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n\n    this._updateBackground(geo);\n\n    var regionsGroup = this._regionsGroup;\n    var group = this.group;\n    var transformInfo = geo.getTransformInfo(); // No animation when first draw or in action\n\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\n    var targetScaleX;\n    var targetScaleY;\n\n    if (isFirstDraw) {\n      group.transform = transformInfo.roamTransform;\n      group.decomposeTransform();\n      group.dirty();\n    } else {\n      var target = new Transformable();\n      target.transform = transformInfo.roamTransform;\n      target.decomposeTransform();\n      var props = {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        x: target.x,\n        y: target.y\n      };\n      targetScaleX = target.scaleX;\n      targetScaleY = target.scaleY;\n      graphic.updateProps(group, props, mapOrGeoModel);\n    }\n\n    regionsGroup.removeAll();\n    var nameMap = zrUtil.createHashMap();\n    var isVisualEncodedByVisualMap = data && data.getVisual('visualMeta') && data.getVisual('visualMeta').length > 0;\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        segmentIgnoreThreshold: 1,\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel; // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      var itemStyleModel = regionModel.getModel('itemStyle'); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      var emphasisModel = regionModel.getModel('emphasis');\n      var emphasisItemStyleModel = emphasisModel.getModel('itemStyle'); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      var blurItemStyleModel = regionModel.getModel(['blur', 'itemStyle']); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      var selectItemStyleModel = regionModel.getModel(['select', 'itemStyle']); // NOTE: DONT use 'style' in visual when drawing map.\n      // This component is used for drawing underlying map for both geo component and map series.\n\n      var itemStyle = getFixedItemStyle(itemStyleModel);\n      var emphasisItemStyle = getFixedItemStyle(emphasisItemStyleModel);\n      var blurItemStyle = getFixedItemStyle(blurItemStyleModel);\n      var selectItemStyle = getFixedItemStyle(selectItemStyleModel);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by visualMap\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var style = data.getItemVisual(dataIdx, 'style');\n        var decal = data.getItemVisual(dataIdx, 'decal');\n\n        if (isVisualEncodedByVisualMap && style.fill) {\n          itemStyle.fill = style.fill;\n        }\n\n        if (decal) {\n          itemStyle.decal = createOrUpdatePatternFromDecal(decal, api);\n        }\n      }\n\n      var sx = transformInfo.rawScaleX;\n      var sy = transformInfo.rawScaleY;\n      var offsetX = transformInfo.rawX;\n      var offsetY = transformInfo.rawY;\n\n      var transformPoint = function (point) {\n        return [point[0] * sx + offsetX, point[1] * sy + offsetY];\n      };\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        var points = [];\n\n        for (var i = 0; i < geometry.exterior.length; ++i) {\n          points.push(transformPoint(geometry.exterior[i]));\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          segmentIgnoreThreshold: 1,\n          shape: {\n            points: points\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); ++i) {\n          var interior = geometry.interiors[i];\n          var points_1 = [];\n\n          for (var j = 0; j < interior.length; ++j) {\n            points_1.push(transformPoint(interior[j]));\n          }\n\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            segmentIgnoreThreshold: 1,\n            shape: {\n              points: points_1\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true;\n      compoundPath.ensureState('emphasis').style = emphasisItemStyle;\n      compoundPath.ensureState('blur').style = blurItemStyle;\n      compoundPath.ensureState('select').style = selectItemStyle;\n      var showLabel = false;\n\n      for (var i = 0; i < DISPLAY_STATES.length; i++) {\n        var stateName = DISPLAY_STATES[i]; // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n        if (regionModel.get(stateName === 'normal' ? ['label', 'show'] : [stateName, 'label', 'show'])) {\n          showLabel = true;\n          break;\n        }\n      }\n\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && showLabel || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher = void 0; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var centerPt = transformPoint(region.center);\n        var textEl = new graphic.Text({\n          x: centerPt[0],\n          y: centerPt[1],\n          // FIXME\n          // label rotation is not support yet in geo or regions of series-map\n          // that has no data. The rotation will be effected by this `scale`.\n          // So needed to change to RectText?\n          scaleX: 1 / group.scaleX,\n          scaleY: 1 / group.scaleY,\n          z2: 10,\n          silent: true\n        });\n        setLabelStyle(textEl, getLabelStatesModels(regionModel), {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name\n        }, {\n          normal: {\n            align: 'center',\n            verticalAlign: 'middle'\n          }\n        });\n        compoundPath.setTextContent(textEl);\n        compoundPath.setTextConfig({\n          local: true\n        });\n        compoundPath.disableLabelAnimation = true;\n\n        if (!isFirstDraw) {\n          // Text animation\n          graphic.updateProps(textEl, {\n            scaleX: 1 / targetScaleX,\n            scaleY: 1 / targetScaleY\n          }, mapOrGeoModel);\n        }\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel_1 = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        getECData(compoundPath).eventData = {\n          componentType: 'geo',\n          componentIndex: mapOrGeoModel.componentIndex,\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel_1 && regionModel_1.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      regionGroup.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode');\n      enableHoverEmphasis(regionGroup, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n      regionsGroup.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    this._updateMapSelectHandler(mapOrGeoModel, regionsGroup, api, fromView);\n  };\n\n  MapDraw.prototype.remove = function () {\n    this._regionsGroup.removeAll();\n\n    this._backgroundGroup.removeAll();\n\n    this._controller.dispose();\n\n    this._mapName && geoSourceManager.removeGraphic(this._mapName, this.uid);\n    this._mapName = null;\n    this._controllerHost = null;\n  };\n\n  MapDraw.prototype._updateBackground = function (geo) {\n    var mapName = geo.map;\n\n    if (this._mapName !== mapName) {\n      zrUtil.each(geoSourceManager.makeGraphic(mapName, this.uid), function (root) {\n        this._backgroundGroup.add(root);\n      }, this);\n    }\n\n    this._mapName = mapName;\n  };\n\n  MapDraw.prototype._updateController = function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost; // @ts-ignore FIXME:TS\n\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n    // @ts-ignore FIXME:TS\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      }));\n      var group = this.group;\n\n      this._regionsGroup.traverse(function (el) {\n        var textContent = el.getTextContent();\n\n        if (textContent) {\n          textContent.scaleX = 1 / group.scaleX;\n          textContent.scaleY = 1 / group.scaleY;\n          textContent.markRedraw();\n        }\n      });\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  };\n\n  MapDraw.prototype._updateMapSelectHandler = function (mapOrGeoModel, regionsGroup, api, fromView) {\n    var mapDraw = this;\n    regionsGroup.off('mousedown'); // @ts-ignore FIXME:TS resolve type conflict\n\n    if (mapOrGeoModel.get('selectedMode')) {\n      regionsGroup.on('mousedown', function () {\n        mapDraw._mouseDownFlag = true;\n      });\n      regionsGroup.on('click', function (e) {\n        if (!mapDraw._mouseDownFlag) {\n          return;\n        }\n\n        mapDraw._mouseDownFlag = false;\n      });\n    }\n  };\n\n  return MapDraw;\n}();\n\n;\nexport default MapDraw;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/node_modules/echarts/lib/component/helper/MapDraw.js"],"names":["zrUtil","RoamController","roamHelper","onIrrelevantElement","graphic","enableHoverEmphasis","DISPLAY_STATES","geoSourceManager","getUID","Transformable","setLabelStyle","getLabelStatesModels","getECData","createOrUpdatePatternFromDecal","getFixedItemStyle","model","itemStyle","getItemStyle","areaColor","get","fill","MapDraw","api","group","Group","uid","_controller","getZr","_controllerHost","target","add","_regionsGroup","_backgroundGroup","prototype","draw","mapOrGeoModel","ecModel","fromView","payload","isGeo","mainType","data","getData","eachComponent","subType","mapSeries","getHostGeoModel","geo","coordinateSystem","_updateBackground","regionsGroup","transformInfo","getTransformInfo","isFirstDraw","childAt","targetScaleX","targetScaleY","transform","roamTransform","decomposeTransform","dirty","props","scaleX","scaleY","x","y","updateProps","removeAll","nameMap","createHashMap","isVisualEncodedByVisualMap","getVisual","length","each","regions","region","regionGroup","name","set","compoundPath","CompoundPath","segmentIgnoreThreshold","shape","paths","regionModel","getRegionModel","itemStyleModel","getModel","emphasisModel","emphasisItemStyleModel","blurItemStyleModel","selectItemStyleModel","emphasisItemStyle","blurItemStyle","selectItemStyle","dataIdx","indexOfName","style","getItemVisual","decal","sx","rawScaleX","sy","rawScaleY","offsetX","rawX","offsetY","rawY","transformPoint","point","geometries","geometry","type","points","i","exterior","push","Polygon","interiors","interior","points_1","j","setStyle","strokeNoScale","culling","ensureState","showLabel","stateName","isDataNaN","isNaN","mapDimension","itemLayout","getItemLayout","query","labelFetcher","centerPt","center","textEl","Text","z2","silent","labelDataIndex","defaultText","normal","align","verticalAlign","setTextContent","setTextConfig","local","disableLabelAnimation","setItemGraphicEl","regionModel_1","eventData","componentType","componentIndex","geoIndex","option","groupRegions","__regions","highDownSilentOnTouch","_updateController","_updateMapSelectHandler","remove","dispose","_mapName","removeGraphic","mapName","map","makeGraphic","root","controller","controllerHost","zoomLimit","zoom","getZoom","enable","makeActionBase","action","id","off","on","e","_mouseDownFlag","updateViewOnPan","dx","dy","dispatchAction","extend","updateViewOnZoom","scale","originX","originY","traverse","el","textContent","getTextContent","markRedraw","setPointerChecker","getViewRectAfterRoam","contain","mapDraw"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport RoamController from './RoamController';\nimport * as roamHelper from '../../component/helper/roamHelper';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper';\nimport * as graphic from '../../util/graphic';\nimport { enableHoverEmphasis, DISPLAY_STATES } from '../../util/states';\nimport geoSourceManager from '../../coord/geo/geoSourceManager';\nimport { getUID } from '../../util/component';\nimport Transformable from 'zrender/lib/core/Transformable';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\nimport { getECData } from '../../util/innerStore';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal';\n\nfunction getFixedItemStyle(model) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nvar MapDraw =\n/** @class */\nfunction () {\n  function MapDraw(api) {\n    var group = new graphic.Group();\n    this.uid = getUID('ec_map_draw'); // @ts-ignore FIXME:TS\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    this.group = group;\n    group.add(this._regionsGroup = new graphic.Group());\n    group.add(this._backgroundGroup = new graphic.Group());\n  }\n\n  MapDraw.prototype.draw = function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n\n    this._updateBackground(geo);\n\n    var regionsGroup = this._regionsGroup;\n    var group = this.group;\n    var transformInfo = geo.getTransformInfo(); // No animation when first draw or in action\n\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\n    var targetScaleX;\n    var targetScaleY;\n\n    if (isFirstDraw) {\n      group.transform = transformInfo.roamTransform;\n      group.decomposeTransform();\n      group.dirty();\n    } else {\n      var target = new Transformable();\n      target.transform = transformInfo.roamTransform;\n      target.decomposeTransform();\n      var props = {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        x: target.x,\n        y: target.y\n      };\n      targetScaleX = target.scaleX;\n      targetScaleY = target.scaleY;\n      graphic.updateProps(group, props, mapOrGeoModel);\n    }\n\n    regionsGroup.removeAll();\n    var nameMap = zrUtil.createHashMap();\n    var isVisualEncodedByVisualMap = data && data.getVisual('visualMeta') && data.getVisual('visualMeta').length > 0;\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        segmentIgnoreThreshold: 1,\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel; // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      var itemStyleModel = regionModel.getModel('itemStyle'); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      var emphasisModel = regionModel.getModel('emphasis');\n      var emphasisItemStyleModel = emphasisModel.getModel('itemStyle'); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      var blurItemStyleModel = regionModel.getModel(['blur', 'itemStyle']); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      var selectItemStyleModel = regionModel.getModel(['select', 'itemStyle']); // NOTE: DONT use 'style' in visual when drawing map.\n      // This component is used for drawing underlying map for both geo component and map series.\n\n      var itemStyle = getFixedItemStyle(itemStyleModel);\n      var emphasisItemStyle = getFixedItemStyle(emphasisItemStyleModel);\n      var blurItemStyle = getFixedItemStyle(blurItemStyleModel);\n      var selectItemStyle = getFixedItemStyle(selectItemStyleModel);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by visualMap\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var style = data.getItemVisual(dataIdx, 'style');\n        var decal = data.getItemVisual(dataIdx, 'decal');\n\n        if (isVisualEncodedByVisualMap && style.fill) {\n          itemStyle.fill = style.fill;\n        }\n\n        if (decal) {\n          itemStyle.decal = createOrUpdatePatternFromDecal(decal, api);\n        }\n      }\n\n      var sx = transformInfo.rawScaleX;\n      var sy = transformInfo.rawScaleY;\n      var offsetX = transformInfo.rawX;\n      var offsetY = transformInfo.rawY;\n\n      var transformPoint = function (point) {\n        return [point[0] * sx + offsetX, point[1] * sy + offsetY];\n      };\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        var points = [];\n\n        for (var i = 0; i < geometry.exterior.length; ++i) {\n          points.push(transformPoint(geometry.exterior[i]));\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          segmentIgnoreThreshold: 1,\n          shape: {\n            points: points\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); ++i) {\n          var interior = geometry.interiors[i];\n          var points_1 = [];\n\n          for (var j = 0; j < interior.length; ++j) {\n            points_1.push(transformPoint(interior[j]));\n          }\n\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            segmentIgnoreThreshold: 1,\n            shape: {\n              points: points_1\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true;\n      compoundPath.ensureState('emphasis').style = emphasisItemStyle;\n      compoundPath.ensureState('blur').style = blurItemStyle;\n      compoundPath.ensureState('select').style = selectItemStyle;\n      var showLabel = false;\n\n      for (var i = 0; i < DISPLAY_STATES.length; i++) {\n        var stateName = DISPLAY_STATES[i]; // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n        if (regionModel.get(stateName === 'normal' ? ['label', 'show'] : [stateName, 'label', 'show'])) {\n          showLabel = true;\n          break;\n        }\n      }\n\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && showLabel || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher = void 0; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var centerPt = transformPoint(region.center);\n        var textEl = new graphic.Text({\n          x: centerPt[0],\n          y: centerPt[1],\n          // FIXME\n          // label rotation is not support yet in geo or regions of series-map\n          // that has no data. The rotation will be effected by this `scale`.\n          // So needed to change to RectText?\n          scaleX: 1 / group.scaleX,\n          scaleY: 1 / group.scaleY,\n          z2: 10,\n          silent: true\n        });\n        setLabelStyle(textEl, getLabelStatesModels(regionModel), {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name\n        }, {\n          normal: {\n            align: 'center',\n            verticalAlign: 'middle'\n          }\n        });\n        compoundPath.setTextContent(textEl);\n        compoundPath.setTextConfig({\n          local: true\n        });\n        compoundPath.disableLabelAnimation = true;\n\n        if (!isFirstDraw) {\n          // Text animation\n          graphic.updateProps(textEl, {\n            scaleX: 1 / targetScaleX,\n            scaleY: 1 / targetScaleY\n          }, mapOrGeoModel);\n        }\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel_1 = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        getECData(compoundPath).eventData = {\n          componentType: 'geo',\n          componentIndex: mapOrGeoModel.componentIndex,\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel_1 && regionModel_1.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region); // @ts-ignore FIXME:TS fix the \"compatible with each other\"?\n\n      regionGroup.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode');\n      enableHoverEmphasis(regionGroup, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n      regionsGroup.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    this._updateMapSelectHandler(mapOrGeoModel, regionsGroup, api, fromView);\n  };\n\n  MapDraw.prototype.remove = function () {\n    this._regionsGroup.removeAll();\n\n    this._backgroundGroup.removeAll();\n\n    this._controller.dispose();\n\n    this._mapName && geoSourceManager.removeGraphic(this._mapName, this.uid);\n    this._mapName = null;\n    this._controllerHost = null;\n  };\n\n  MapDraw.prototype._updateBackground = function (geo) {\n    var mapName = geo.map;\n\n    if (this._mapName !== mapName) {\n      zrUtil.each(geoSourceManager.makeGraphic(mapName, this.uid), function (root) {\n        this._backgroundGroup.add(root);\n      }, this);\n    }\n\n    this._mapName = mapName;\n  };\n\n  MapDraw.prototype._updateController = function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost; // @ts-ignore FIXME:TS\n\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n    // @ts-ignore FIXME:TS\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      }));\n      var group = this.group;\n\n      this._regionsGroup.traverse(function (el) {\n        var textContent = el.getTextContent();\n\n        if (textContent) {\n          textContent.scaleX = 1 / group.scaleX;\n          textContent.scaleY = 1 / group.scaleY;\n          textContent.markRedraw();\n        }\n      });\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  };\n\n  MapDraw.prototype._updateMapSelectHandler = function (mapOrGeoModel, regionsGroup, api, fromView) {\n    var mapDraw = this;\n    regionsGroup.off('mousedown'); // @ts-ignore FIXME:TS resolve type conflict\n\n    if (mapOrGeoModel.get('selectedMode')) {\n      regionsGroup.on('mousedown', function () {\n        mapDraw._mouseDownFlag = true;\n      });\n      regionsGroup.on('click', function (e) {\n        if (!mapDraw._mouseDownFlag) {\n          return;\n        }\n\n        mapDraw._mouseDownFlag = false;\n      });\n    }\n  };\n\n  return MapDraw;\n}();\n\n;\nexport default MapDraw;"]},"metadata":{},"sourceType":"module"}