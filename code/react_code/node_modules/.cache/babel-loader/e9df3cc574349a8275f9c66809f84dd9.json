{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each } from 'zrender/lib/core/util';\nimport parseGeoJson from './parseGeoJson';\nimport { makeInner } from '../../util/model'; // Built-in GEO fixer.\n\nimport fixNanhai from './fix/nanhai';\nimport fixTextCoord from './fix/textCoord';\nimport fixGeoCoord from './fix/geoCoord';\nimport fixDiaoyuIsland from './fix/diaoyuIsland';\nvar inner = makeInner();\nexport default {\n  load: function (mapName, mapRecord, nameProperty) {\n    var parsed = inner(mapRecord).parsed;\n\n    if (parsed) {\n      return parsed;\n    }\n\n    var specialAreas = mapRecord.specialAreas || {};\n    var geoJSON = mapRecord.geoJSON;\n    var regions; // https://jsperf.com/try-catch-performance-overhead\n\n    try {\n      regions = geoJSON ? parseGeoJson(geoJSON, nameProperty) : [];\n    } catch (e) {\n      throw new Error('Invalid geoJson format\\n' + e.message);\n    }\n\n    fixNanhai(mapName, regions);\n    each(regions, function (region) {\n      var regionName = region.name;\n      fixTextCoord(mapName, region);\n      fixGeoCoord(mapName, region);\n      fixDiaoyuIsland(mapName, region); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        region.transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    });\n    return inner(mapRecord).parsed = {\n      regions: regions,\n      boundingRect: getBoundingRect(regions)\n    };\n  }\n};\n\nfunction getBoundingRect(regions) {\n  var rect;\n\n  for (var i = 0; i < regions.length; i++) {\n    var regionRect = regions[i].getBoundingRect();\n    rect = rect || regionRect.clone();\n    rect.union(regionRect);\n  }\n\n  return rect;\n}","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/echarts/lib/coord/geo/geoJSONLoader.js"],"names":["each","parseGeoJson","makeInner","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","inner","load","mapName","mapRecord","nameProperty","parsed","specialAreas","geoJSON","regions","e","Error","message","region","regionName","name","specialArea","transformTo","left","top","width","height","boundingRect","getBoundingRect","rect","i","length","regionRect","clone","union"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CAA8C;;AAE9C,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,IAAIC,KAAK,GAAGL,SAAS,EAArB;AACA,eAAe;AACbM,EAAAA,IAAI,EAAE,UAAUC,OAAV,EAAmBC,SAAnB,EAA8BC,YAA9B,EAA4C;AAChD,QAAIC,MAAM,GAAGL,KAAK,CAACG,SAAD,CAAL,CAAiBE,MAA9B;;AAEA,QAAIA,MAAJ,EAAY;AACV,aAAOA,MAAP;AACD;;AAED,QAAIC,YAAY,GAAGH,SAAS,CAACG,YAAV,IAA0B,EAA7C;AACA,QAAIC,OAAO,GAAGJ,SAAS,CAACI,OAAxB;AACA,QAAIC,OAAJ,CATgD,CASnC;;AAEb,QAAI;AACFA,MAAAA,OAAO,GAAGD,OAAO,GAAGb,YAAY,CAACa,OAAD,EAAUH,YAAV,CAAf,GAAyC,EAA1D;AACD,KAFD,CAEE,OAAOK,CAAP,EAAU;AACV,YAAM,IAAIC,KAAJ,CAAU,6BAA6BD,CAAC,CAACE,OAAzC,CAAN;AACD;;AAEDf,IAAAA,SAAS,CAACM,OAAD,EAAUM,OAAV,CAAT;AACAf,IAAAA,IAAI,CAACe,OAAD,EAAU,UAAUI,MAAV,EAAkB;AAC9B,UAAIC,UAAU,GAAGD,MAAM,CAACE,IAAxB;AACAjB,MAAAA,YAAY,CAACK,OAAD,EAAUU,MAAV,CAAZ;AACAd,MAAAA,WAAW,CAACI,OAAD,EAAUU,MAAV,CAAX;AACAb,MAAAA,eAAe,CAACG,OAAD,EAAUU,MAAV,CAAf,CAJ8B,CAII;AAClC;;AAEA,UAAIG,WAAW,GAAGT,YAAY,CAACO,UAAD,CAA9B;;AAEA,UAAIE,WAAJ,EAAiB;AACfH,QAAAA,MAAM,CAACI,WAAP,CAAmBD,WAAW,CAACE,IAA/B,EAAqCF,WAAW,CAACG,GAAjD,EAAsDH,WAAW,CAACI,KAAlE,EAAyEJ,WAAW,CAACK,MAArF;AACD;AACF,KAZG,CAAJ;AAaA,WAAOpB,KAAK,CAACG,SAAD,CAAL,CAAiBE,MAAjB,GAA0B;AAC/BG,MAAAA,OAAO,EAAEA,OADsB;AAE/Ba,MAAAA,YAAY,EAAEC,eAAe,CAACd,OAAD;AAFE,KAAjC;AAID;AApCY,CAAf;;AAuCA,SAASc,eAAT,CAAyBd,OAAzB,EAAkC;AAChC,MAAIe,IAAJ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,OAAO,CAACiB,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,QAAIE,UAAU,GAAGlB,OAAO,CAACgB,CAAD,CAAP,CAAWF,eAAX,EAAjB;AACAC,IAAAA,IAAI,GAAGA,IAAI,IAAIG,UAAU,CAACC,KAAX,EAAf;AACAJ,IAAAA,IAAI,CAACK,KAAL,CAAWF,UAAX;AACD;;AAED,SAAOH,IAAP;AACD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each } from 'zrender/lib/core/util';\nimport parseGeoJson from './parseGeoJson';\nimport { makeInner } from '../../util/model'; // Built-in GEO fixer.\n\nimport fixNanhai from './fix/nanhai';\nimport fixTextCoord from './fix/textCoord';\nimport fixGeoCoord from './fix/geoCoord';\nimport fixDiaoyuIsland from './fix/diaoyuIsland';\nvar inner = makeInner();\nexport default {\n  load: function (mapName, mapRecord, nameProperty) {\n    var parsed = inner(mapRecord).parsed;\n\n    if (parsed) {\n      return parsed;\n    }\n\n    var specialAreas = mapRecord.specialAreas || {};\n    var geoJSON = mapRecord.geoJSON;\n    var regions; // https://jsperf.com/try-catch-performance-overhead\n\n    try {\n      regions = geoJSON ? parseGeoJson(geoJSON, nameProperty) : [];\n    } catch (e) {\n      throw new Error('Invalid geoJson format\\n' + e.message);\n    }\n\n    fixNanhai(mapName, regions);\n    each(regions, function (region) {\n      var regionName = region.name;\n      fixTextCoord(mapName, region);\n      fixGeoCoord(mapName, region);\n      fixDiaoyuIsland(mapName, region); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        region.transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    });\n    return inner(mapRecord).parsed = {\n      regions: regions,\n      boundingRect: getBoundingRect(regions)\n    };\n  }\n};\n\nfunction getBoundingRect(regions) {\n  var rect;\n\n  for (var i = 0; i < regions.length; i++) {\n    var regionRect = regions[i].getBoundingRect();\n    rect = rect || regionRect.clone();\n    rect.union(regionRect);\n  }\n\n  return rect;\n}"]},"metadata":{},"sourceType":"module"}