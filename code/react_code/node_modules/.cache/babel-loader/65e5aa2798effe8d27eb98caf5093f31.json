{"ast":null,"code":"import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/components/ProductList/index.jsx\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'; // import './index.css';\n\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IconText = ({\n  icon,\n  text\n}) => /*#__PURE__*/_jsxDEV(_Space, {\n  children: [/*#__PURE__*/React.createElement(icon), text]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n\n_c = IconText;\n\nclass ProductList extends Component {\n  //////////////////////重要\n  //this.props.productArray 为 promise\n  //promise需要解析才能使用\n  //要用.then拿promise的结果\n  //\n  // key\n  // name\n  // category\n  // descString\n  // imageUrl\n  // productCondition\n  // price\n  // processTime\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataArray: []\n    };\n\n    this.componentWillMount = async () => {\n      console.log(\"promise.then 前拿取的信息为 : \"); //这里输出一个 Promise\n\n      console.dir(this.props.productArray);\n      await this.props.productArray.then(async res => {\n        console.log(\"promise.then 后拿取的信息为 : \"); //这里输出多个 Promise, 一个 Product 就是一个 Promise\n\n        console.dir(res);\n        await res[0].then(productInfo => {\n          console.log(\"Product 1111111111111111111111111111111        \" + productInfo);\n        });\n        console.log(\"Product 22222222222222222\"); // let oneProduct;\n        // for (oneProduct in res){\n        //   oneProduct.then(res =>)\n        //   console.log(\"Product 1111111111111111111111111111111        \" + oneProduct);\n        // }\n\n        this.setState({\n          dataArray: res\n        });\n      }).catch(err => {\n        _message.error(\"获得产品信息失败\", 2);\n\n        console.log(\"产品展示列表不能获得产品信息\" + err);\n      }); //模拟数据，用来测试\n      // for (let i = 0; i < 2; i++) {\n      //   this.productListData.push({\n      //     href: 'https://ant.design',\n      //     name: '商品名称',\n      //     avatar: 'https://joeschmoe.io/api/v1/random',\n      //     category:\n      //       '商品类型',\n      //     descString:\n      //       '商品介绍',\n      //     price:\n      //       '1 ETH',\n      //     processTime:\n      //       '时间',\n      //     productCondition:\n      //       '全新',\n      //   });\n      // }\n    };\n  } //用来测试的模拟数据\n  // productListData = [];\n  //应该在调用 ProductList 的函数中，将数据格式化好，在 ProductList 中将传入的promise，用then解析出res，直接将数据放入 render，让 render 自动刷新\n\n\n  render() {\n    console.log(\"ProductList 进行了一次渲染\");\n    return /*#__PURE__*/_jsxDEV(_List, {\n      itemLayout: \"vertical\",\n      size: \"large\",\n      pagination: {\n        onChange: page => {\n          console.log(page);\n        },\n        pageSize: 5\n      },\n      dataSource: this.state.dataArray,\n      footer: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u5171 \", this.state.dataArray.length, \" \\u4E2A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this),\n      renderItem: item => /*#__PURE__*/_jsxDEV(_List.Item, {\n        actions: [/*#__PURE__*/_jsxDEV(IconText, {\n          icon: StarOutlined,\n          text: item.price\n        }, \"list-vertical-star-o\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconText, {\n          icon: LikeOutlined,\n          text: item.productCondition\n        }, \"list-vertical-like-o\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconText, {\n          icon: MessageOutlined,\n          text: item.processTime\n        }, \"list-vertical-message\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)],\n        extra: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: 130,\n          height: 130,\n          alt: \"\\u5546\\u54C1\\u56FE\\u7247\",\n          src: item.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(_List.Item.Meta, {\n          // avatar={<Avatar src={item.avatar} />}\n          title: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.href,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 18\n          }, this),\n          description: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this), item.descString]\n      }, item.index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconText\");","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/components/ProductList/index.jsx"],"names":["React","Component","ReactDOM","MessageOutlined","LikeOutlined","StarOutlined","IconText","icon","text","createElement","ProductList","constructor","props","state","dataArray","componentWillMount","console","log","dir","productArray","then","res","productInfo","setState","catch","err","error","render","onChange","page","pageSize","length","item","price","productCondition","processTime","imageUrl","href","name","category","descString","index"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n// import './index.css';\nimport { List, Avatar, Space, message } from 'antd';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\n\n\n\nconst IconText = ({ icon, text }) => (\n  <Space>\n    {React.createElement(icon)}\n    {text}\n  </Space>\n);\n\n\n\nclass ProductList extends Component {\n  state = {\n    dataArray : []\n  }\n\n  //////////////////////重要\n  //this.props.productArray 为 promise\n  //promise需要解析才能使用\n  //要用.then拿promise的结果\n  //\n  // key\n  // name\n  // category\n  // descString\n  // imageUrl\n  // productCondition\n  // price\n  // processTime\n  \n\n  constructor (props) {\n    super(props);\n  }\n\n  //用来测试的模拟数据\n  // productListData = [];\n\n\n  //应该在调用 ProductList 的函数中，将数据格式化好，在 ProductList 中将传入的promise，用then解析出res，直接将数据放入 render，让 render 自动刷新\n  componentWillMount  = async () => {\n\n    console.log(\"promise.then 前拿取的信息为 : \");\n    //这里输出一个 Promise\n    console.dir(this.props.productArray);\n\n    await this.props.productArray.then(async res =>{\n\n      console.log(\"promise.then 后拿取的信息为 : \");\n      //这里输出多个 Promise, 一个 Product 就是一个 Promise\n      console.dir(res);\n      \n      await res[0].then(productInfo =>{\n        console.log(\"Product 1111111111111111111111111111111        \" + productInfo);\n      })\n      console.log(\"Product 22222222222222222\");\n      // let oneProduct;\n      // for (oneProduct in res){\n\n      //   oneProduct.then(res =>)\n      //   console.log(\"Product 1111111111111111111111111111111        \" + oneProduct);\n      // }\n\n      this.setState({dataArray : res});\n\n\n    }).catch( err =>{\n      message.error(\"获得产品信息失败\", 2);\n      console.log(\"产品展示列表不能获得产品信息\" + err);\n    })\n    \n\n    //模拟数据，用来测试\n    // for (let i = 0; i < 2; i++) {\n    //   this.productListData.push({\n    //     href: 'https://ant.design',\n    //     name: '商品名称',\n    //     avatar: 'https://joeschmoe.io/api/v1/random',\n    //     category:\n    //       '商品类型',\n    //     descString:\n    //       '商品介绍',\n    //     price:\n    //       '1 ETH',\n    //     processTime:\n    //       '时间',\n    //     productCondition:\n    //       '全新',\n    //   });\n    // }\n\n  }\n              \n\n    render () {\n\n      console.log(\"ProductList 进行了一次渲染\");\n\n        return (\n            <List\n    itemLayout=\"vertical\"\n    size=\"large\"\n    pagination={{\n      onChange: page => {\n        console.log(page);\n      },\n      pageSize: 5,\n    }}\n    dataSource={this.state.dataArray}\n    footer={\n      <div>\n        共 {this.state.dataArray.length} 个\n      </div>\n    }\n    renderItem={item => (\n      <List.Item\n        key={item.index}\n        actions={[\n          <IconText icon={StarOutlined} text={item.price} key=\"list-vertical-star-o\" />,\n          <IconText icon={LikeOutlined} text={item.productCondition} key=\"list-vertical-like-o\" />,\n          <IconText icon={MessageOutlined} text={item.processTime} key=\"list-vertical-message\" />,\n        ]}\n        extra={\n          <img\n            width={130}\n            height={130}\n            alt=\"商品图片\"\n            src={item.imageUrl}\n          />\n        }\n      >\n        <List.Item.Meta\n          // avatar={<Avatar src={item.avatar} />}\n          title={<a href={item.href}>{item.name}</a>}\n          description={item.category}\n        />\n        {item.descString}\n      </List.Item>\n    )}\n    />\n        );\n    }\n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}