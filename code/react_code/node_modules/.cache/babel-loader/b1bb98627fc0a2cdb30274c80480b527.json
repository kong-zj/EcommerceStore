{"ast":null,"code":"/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file Registry.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\n\nvar _ = require('underscore');\n\nvar Contract = require('web3-eth-contract');\n\nvar namehash = require('eth-ens-namehash');\n\nvar PromiEvent = require('web3-core-promievent');\n\nvar REGISTRY_ABI = require('../ressources/ABI/Registry');\n\nvar RESOLVER_ABI = require('../ressources/ABI/Resolver');\n/**\n * A wrapper around the ENS registry contract.\n *\n * @method Registry\n * @param {Ens} ens\n * @constructor\n */\n\n\nfunction Registry(ens) {\n  var self = this;\n  this.ens = ens;\n  this.contract = ens.checkNetwork().then(function (address) {\n    var contract = new Contract(REGISTRY_ABI, address);\n    contract.setProvider(self.ens.eth.currentProvider);\n    return contract;\n  });\n}\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method owner\n * @param {string} name\n * @param {function} callback\n * @return {Promise<any>}\n */\n\n\nRegistry.prototype.owner = function (name, callback) {\n  var promiEvent = new PromiEvent(true);\n  this.contract.then(function (contract) {\n    contract.methods.owner(namehash.hash(name)).call().then(function (receipt) {\n      promiEvent.resolve(receipt);\n\n      if (_.isFunction(callback)) {\n        callback(receipt);\n      }\n    }).catch(function (error) {\n      promiEvent.reject(error);\n\n      if (_.isFunction(callback)) {\n        callback(error);\n      }\n    });\n  });\n  return promiEvent.eventEmitter;\n};\n/**\n * Returns the resolver contract associated with a name.\n *\n * @method resolver\n * @param {string} name\n * @return {Promise<Contract>}\n */\n\n\nRegistry.prototype.resolver = function (name) {\n  var self = this;\n  return this.contract.then(function (contract) {\n    return contract.methods.resolver(namehash.hash(name)).call();\n  }).then(function (address) {\n    var contract = new Contract(RESOLVER_ABI, address);\n    contract.setProvider(self.ens.eth.currentProvider);\n    return contract;\n  });\n};\n\nmodule.exports = Registry;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/web3-eth-ens/src/contracts/Registry.js"],"names":["_","require","Contract","namehash","PromiEvent","REGISTRY_ABI","RESOLVER_ABI","Registry","ens","self","contract","checkNetwork","then","address","setProvider","eth","currentProvider","prototype","owner","name","callback","promiEvent","methods","hash","call","receipt","resolve","isFunction","catch","error","reject","eventEmitter","resolver","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,CAAC,GAAGC,OAAO,CAAC,YAAD,CAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,mBAAD,CAAtB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,kBAAD,CAAtB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,sBAAD,CAAxB;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,4BAAD,CAA1B;;AACA,IAAIK,YAAY,GAAGL,OAAO,CAAC,4BAAD,CAA1B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,QAAT,CAAkBC,GAAlB,EAAuB;AACnB,MAAIC,IAAI,GAAG,IAAX;AACA,OAAKD,GAAL,GAAWA,GAAX;AACA,OAAKE,QAAL,GAAgBF,GAAG,CAACG,YAAJ,GAAmBC,IAAnB,CAAwB,UAAUC,OAAV,EAAmB;AACvD,QAAIH,QAAQ,GAAG,IAAIR,QAAJ,CAAaG,YAAb,EAA2BQ,OAA3B,CAAf;AACAH,IAAAA,QAAQ,CAACI,WAAT,CAAqBL,IAAI,CAACD,GAAL,CAASO,GAAT,CAAaC,eAAlC;AAEA,WAAON,QAAP;AACH,GALe,CAAhB;AAMH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAH,QAAQ,CAACU,SAAT,CAAmBC,KAAnB,GAA2B,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;AACjD,MAAIC,UAAU,GAAG,IAAIjB,UAAJ,CAAe,IAAf,CAAjB;AAEA,OAAKM,QAAL,CAAcE,IAAd,CAAmB,UAAUF,QAAV,EAAoB;AACnCA,IAAAA,QAAQ,CAACY,OAAT,CAAiBJ,KAAjB,CAAuBf,QAAQ,CAACoB,IAAT,CAAcJ,IAAd,CAAvB,EAA4CK,IAA5C,GACKZ,IADL,CACU,UAAUa,OAAV,EAAmB;AACrBJ,MAAAA,UAAU,CAACK,OAAX,CAAmBD,OAAnB;;AAEA,UAAIzB,CAAC,CAAC2B,UAAF,CAAaP,QAAb,CAAJ,EAA4B;AACxBA,QAAAA,QAAQ,CAACK,OAAD,CAAR;AACH;AACJ,KAPL,EAQKG,KARL,CAQW,UAAUC,KAAV,EAAiB;AACpBR,MAAAA,UAAU,CAACS,MAAX,CAAkBD,KAAlB;;AAEA,UAAI7B,CAAC,CAAC2B,UAAF,CAAaP,QAAb,CAAJ,EAA4B;AACxBA,QAAAA,QAAQ,CAACS,KAAD,CAAR;AACH;AACJ,KAdL;AAeH,GAhBD;AAkBA,SAAOR,UAAU,CAACU,YAAlB;AACH,CAtBD;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAxB,QAAQ,CAACU,SAAT,CAAmBe,QAAnB,GAA8B,UAAUb,IAAV,EAAgB;AAC1C,MAAIV,IAAI,GAAG,IAAX;AAEA,SAAO,KAAKC,QAAL,CAAcE,IAAd,CAAmB,UAAUF,QAAV,EAAoB;AAC1C,WAAOA,QAAQ,CAACY,OAAT,CAAiBU,QAAjB,CAA0B7B,QAAQ,CAACoB,IAAT,CAAcJ,IAAd,CAA1B,EAA+CK,IAA/C,EAAP;AACH,GAFM,EAEJZ,IAFI,CAEC,UAAUC,OAAV,EAAmB;AACvB,QAAIH,QAAQ,GAAG,IAAIR,QAAJ,CAAaI,YAAb,EAA2BO,OAA3B,CAAf;AACAH,IAAAA,QAAQ,CAACI,WAAT,CAAqBL,IAAI,CAACD,GAAL,CAASO,GAAT,CAAaC,eAAlC;AACA,WAAON,QAAP;AACH,GANM,CAAP;AAOH,CAVD;;AAYAuB,MAAM,CAACC,OAAP,GAAiB3B,QAAjB","sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Registry.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n\"use strict\";\n\nvar _ = require('underscore');\nvar Contract = require('web3-eth-contract');\nvar namehash = require('eth-ens-namehash');\nvar PromiEvent = require('web3-core-promievent');\nvar REGISTRY_ABI = require('../ressources/ABI/Registry');\nvar RESOLVER_ABI = require('../ressources/ABI/Resolver');\n\n\n/**\n * A wrapper around the ENS registry contract.\n *\n * @method Registry\n * @param {Ens} ens\n * @constructor\n */\nfunction Registry(ens) {\n    var self = this;\n    this.ens = ens;\n    this.contract = ens.checkNetwork().then(function (address) {\n        var contract = new Contract(REGISTRY_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n\n        return contract;\n    });\n}\n\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method owner\n * @param {string} name\n * @param {function} callback\n * @return {Promise<any>}\n */\nRegistry.prototype.owner = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n\n    this.contract.then(function (contract) {\n        contract.methods.owner(namehash.hash(name)).call()\n            .then(function (receipt) {\n                promiEvent.resolve(receipt);\n\n                if (_.isFunction(callback)) {\n                    callback(receipt);\n                }\n            })\n            .catch(function (error) {\n                promiEvent.reject(error);\n\n                if (_.isFunction(callback)) {\n                    callback(error);\n                }\n            });\n    });\n\n    return promiEvent.eventEmitter;\n};\n\n/**\n * Returns the resolver contract associated with a name.\n *\n * @method resolver\n * @param {string} name\n * @return {Promise<Contract>}\n */\nRegistry.prototype.resolver = function (name) {\n    var self = this;\n\n    return this.contract.then(function (contract) {\n        return contract.methods.resolver(namehash.hash(name)).call();\n    }).then(function (address) {\n        var contract = new Contract(RESOLVER_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n        return contract;\n    });\n};\n\nmodule.exports = Registry;\n"]},"metadata":{},"sourceType":"script"}