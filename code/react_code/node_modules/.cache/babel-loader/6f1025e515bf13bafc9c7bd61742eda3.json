{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/progress/style\";\nimport _Progress from \"antd/es/progress\";\nimport \"antd/es/statistic/style\";\nimport _Statistic from \"antd/es/statistic\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/TotalChart/index.jsx\";\nimport React, { Component } from 'react';\nimport * as echarts from 'echarts/core';\nimport { GridComponent, TitleComponent, TooltipComponent, ToolboxComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { AppstoreTwoTone, CloudTwoTone, ApiTwoTone } from '@ant-design/icons';\nimport { LineChart } from 'echarts/charts';\nimport './index.css';\nimport axios from \"axios\";\nimport cookie from \"react-cookies\";\nimport object_sizeof from 'object-sizeof';\nimport moment from 'moment';\nimport sizeof from \"object-sizeof\";\nimport ProductChart from \"../../components/ProductsChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\necharts.use([GridComponent, LineChart, CanvasRenderer, TitleComponent, TooltipComponent, ToolboxComponent]);\nexport default class TotalChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deviceArray: [],\n      messages: {},\n      onlineTimeInterval: {},\n      onlineTimePoint: {},\n      onlineNumber: 0,\n      offlineNumber: 0\n    };\n  }\n\n  async componentDidMount() {// console.log(object_sizeof({abc:'def'}))\n    // await axios.post(\"/getPersonalInfo\", {\n    //     username:cookie.load('username')\n    // }).then(response => {\n    //     const data =  response.data;\n    //     let online = 0, offline = 0;\n    //     if(data.code === \"success\"){\n    //         let array = data.deviceArray.map((item, index) => {\n    //             if (item.isOnline === 1) online++;\n    //             else offline++;\n    //             return {\n    //                 key: index + 1,\n    //                 deviceName: item.deviceName,\n    //                 deviceID: item.deviceID,\n    //                 deviceStatus: item.isOnline\n    //             }\n    //         });\n    //         array.forEach(item => {\n    //             const deviceID = item.deviceID;\n    //             axios.post('/getDeviceInfo', {\n    //                 deviceID:deviceID\n    //             }).then(response => {\n    //                 const data = response.data;\n    //                 const message = data.deviceMessage;\n    //                 if(data.status === 'failed'){\n    //                     message.warning(\"获取设备信息失败\")\n    //                 }\n    //                 else if(data.status === 'notExist'){\n    //                     message.warning('设备不存在')\n    //                 }\n    //                 else{\n    //                     const messageArray = message.map((item, index) => {\n    //                         const obj = JSON.parse(item.content);\n    //                         let infoItem = {\n    //                             key: item.messageID,\n    //                             messageID: item.messageID,\n    //                             messageType: obj.alert,\n    //                             messageContent: obj.info,\n    //                             lat:obj.lat,\n    //                             lng:obj.lng,\n    //                             timestamp:obj.timestamp,\n    //                             time:(new Date(parseInt(obj.timestamp))).toLocaleDateString() + ' '+ (new Date(parseInt(obj.timestamp))).toLocaleTimeString(),\n    //                             date:(new Date(parseInt(obj.timestamp))).toLocaleDateString()\n    //                         }\n    //                         return infoItem;\n    //                     });\n    //                     const messages = {...this.state.messages};\n    //                     messages[deviceID] = messageArray;\n    //                     this.setState({deviceArray:array, onlineNumber:online, offlineNumber:offline, messages:messages}, () => {\n    //                         const today = moment();\n    //                         const dateArray = [\n    //                             moment(moment().subtract(6, 'days')).format('YYYY/M/D'),\n    //                             moment(moment().subtract(5, 'days')).format('YYYY/M/D'),\n    //                             moment(moment().subtract(4, 'days')).format('YYYY/M/D'),\n    //                             moment(moment().subtract(3, 'days')).format('YYYY/M/D'),\n    //                             moment(moment().subtract(2, 'days')).format('YYYY/M/D'),\n    //                             moment(moment().subtract(1, 'days')).format('YYYY/M/D'),\n    //                             today.format('YYYY/M/D')]\n    //                         console.log(dateArray)\n    //                         let messageRound = [];\n    //                         const {messages, deviceArray} = this.state;\n    //                         let normal = 0, warning = 0, online = 0, offline = 0, day1 = 0, day2 = 0,\n    //                         day3 = 0, day4 = 0, day5 = 0, day6 = 0, day7 = 0;\n    //                         deviceArray.forEach(device => {\n    //                             if(messages[device.deviceID] !== undefined){\n    //                                 messages[device.deviceID].forEach(message => {\n    //                                     if(message.messageType === 0) normal++;\n    //                                     if(message.messageType === 1) warning++;\n    //                                     if(message.messageType === 2) online++;\n    //                                     if(message.messageType === 3) offline++;\n    //                                     const m2 = moment((new Date(message.timestamp).toLocaleDateString()));\n    //                                     const diff = today.diff(m2, 'day');\n    //                                     if(diff === 0) day1 += sizeof(message.messageContent) / 1000;\n    //                                     if(diff === 1) day2 += sizeof(message.messageContent) / 1000;\n    //                                     if(diff === 2) day3 += sizeof(message.messageContent) / 1000;\n    //                                     if(diff === 3) day4 += sizeof(message.messageContent) / 1000;\n    //                                     if(diff === 4) day5 += sizeof(message.messageContent) / 1000;\n    //                                     if(diff === 5) day6 += sizeof(message.messageContent) / 1000;\n    //                                     if(diff === 6) day7 += sizeof(message.messageContent) / 1000;\n    //                                 })\n    //                             }\n    //                         })\n    //                         messageRound.push({value:normal, name:'正常信息'});\n    //                         messageRound.push({value:warning, name:'告警信息'});\n    //                         messageRound.push({value:online, name:'上线信息'});\n    //                         messageRound.push({value:offline, name:'下线信息'});\n    //                         const chartDom = document.getElementById ('dataChart');\n    //                         let myChart = echarts.init (chartDom);\n    //                         let option = {\n    //                             xAxis: {\n    //                                 type: 'category',\n    //                                 data: dateArray\n    //                             },\n    //                             yAxis: {\n    //                                 name: '单位(KB)',\n    //                                 type: 'value'\n    //                             },\n    //                             tooltip: {\n    //                                 trigger: 'axis'\n    //                             },\n    //                             series: [\n    //                                 {\n    //                                     data: [day7.toFixed(3),\n    //                                         day6.toFixed(3),\n    //                                         day5.toFixed(3),\n    //                                         day4.toFixed(3),\n    //                                         day3.toFixed(3),\n    //                                         day2.toFixed(3),\n    //                                         day1.toFixed(3)],\n    //                                     type: 'line',\n    //                                     symbol: 'circle',\n    //                                     symbolSize: 10,\n    //                                     lineStyle: {\n    //                                         color: '#5470C6',\n    //                                         width: 4,\n    //                                         type: 'dashed'\n    //                                     },\n    //                                     itemStyle: {\n    //                                         borderWidth: 3,\n    //                                         borderColor: '#EE6666',\n    //                                         color: 'yellow'\n    //                                     }\n    //                                 }\n    //                             ]\n    //                         };\n    //                         option && myChart.setOption(option);\n    //                         const chartDom1 = document.getElementById ('messageChart');\n    //                         let myChart1 = echarts.init (chartDom1);\n    //                         let option1 = {\n    //                             tooltip: {\n    //                                 trigger: 'item'\n    //                             },\n    //                             legend: {\n    //                                 top: '5%',\n    //                                 left: 'center'\n    //                             },\n    //                             color:['rgb(134, 197, 106)', 'rgb(235, 91, 91)', 'rgb(74, 101, 191)', 'rgb(249, 193, 78)'],\n    //                             series: [\n    //                                 {\n    //                                     type: 'pie',\n    //                                     radius: ['40%', '70%'],\n    //                                     avoidLabelOverlap: false,\n    //                                     label: {\n    //                                         show: false,\n    //                                         position: 'center'\n    //                                     },\n    //                                     emphasis: {\n    //                                         label: {\n    //                                             show: true,\n    //                                             fontSize: '40',\n    //                                             fontWeight: 'bold'\n    //                                         }\n    //                                     },\n    //                                     labelLine: {\n    //                                         show: false\n    //                                     },\n    //                                     data: messageRound\n    //                                 }\n    //                             ]\n    //                         };\n    //                         option1 && myChart1.setOption(option1);\n    //                         window.addEventListener(\"resize\", function () {\n    //                             myChart.resize();\n    //                             myChart1.resize();\n    //                         });\n    //                     });\n    //                 }\n    //             })\n    //         })\n    //     }\n    //     else{\n    //         message.warning (\"获取个人信息出错\").then (r  => console.log(r));\n    //     }\n    // })\n  }\n\n  render() {\n    const {\n      onlineNumber,\n      offlineNumber,\n      deviceArray\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ProductChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chartContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"TotalChart\",\n          children: /*#__PURE__*/_jsxDEV(_Card, {\n            title: \"\\u8BBE\\u5907\\u603B\\u89C8\",\n            bordered: false,\n            style: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: 'Cards',\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"myCard\",\n                children: /*#__PURE__*/_jsxDEV(_Card, {\n                  title: \"\\u603B\\u8BBE\\u5907\\u6570\",\n                  hoverable: true,\n                  bordered: false,\n                  headStyle: {\n                    backgroundImage: 'linear-gradient(120deg, #00e795 0, #0095e2 100%)'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cardItem\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"item1\",\n                      children: /*#__PURE__*/_jsxDEV(_Statistic, {\n                        value: deviceArray.length,\n                        prefix: /*#__PURE__*/_jsxDEV(AppstoreTwoTone, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 57\n                        }, this),\n                        width: 50\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"item2\",\n                      children: /*#__PURE__*/_jsxDEV(_Progress, {\n                        status: \"active\",\n                        strokeColor: {\n                          '0%': '#00e795',\n                          '100%': '#0095e2'\n                        },\n                        percent: 100,\n                        size: 'small'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"myCard\",\n                children: /*#__PURE__*/_jsxDEV(_Card, {\n                  title: \"\\u5728\\u7EBF\\u8BBE\\u5907\\u6570\",\n                  hoverable: true,\n                  bordered: false,\n                  headStyle: {\n                    backgroundImage: 'linear-gradient(120deg, #f6d365 0, #ff7850 100%)'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cardItem\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"item1\",\n                      children: /*#__PURE__*/_jsxDEV(_Statistic, {\n                        value: onlineNumber,\n                        prefix: /*#__PURE__*/_jsxDEV(CloudTwoTone, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 250,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 248,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"item2\",\n                      children: /*#__PURE__*/_jsxDEV(_Progress, {\n                        status: \"active\",\n                        strokeColor: {\n                          '0%': '#f6d365',\n                          '100%': '#ff7850'\n                        },\n                        percent: (onlineNumber * 100 / deviceArray.length).toFixed(0),\n                        size: 'small'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 254,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"myCard\",\n                children: /*#__PURE__*/_jsxDEV(_Card, {\n                  title: \"\\u79BB\\u7EBF\\u8BBE\\u5907\\u6570\",\n                  hoverable: true,\n                  bordered: false,\n                  headStyle: {\n                    backgroundImage: 'linear-gradient(120deg, #7b78c9 0, #60c6f3 100%)'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"cardItem\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"item1\",\n                      children: /*#__PURE__*/_jsxDEV(_Statistic, {\n                        value: offlineNumber,\n                        prefix: /*#__PURE__*/_jsxDEV(ApiTwoTone, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 273,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"item2\",\n                      children: /*#__PURE__*/_jsxDEV(_Progress, {\n                        status: \"active\",\n                        strokeColor: {\n                          '0%': '#7b78c9',\n                          '100%': '#60c6f3'\n                        },\n                        percent: (offlineNumber * 100 / deviceArray.length).toFixed(0),\n                        size: 'small'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"dataContainer\",\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Card, {\n            title: \"\\u8FD1\\u4E00\\u5468\\u63A5\\u6536\\u6570\\u636E\\u91CF\\u7EDF\\u8BA1\",\n            bordered: false,\n            className: 'indexChart',\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"dataChart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Card, {\n            title: \"\\u4FE1\\u606F\\u5206\\u7C7B\",\n            bordered: false,\n            className: 'indexChart',\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"messageChart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/TotalChart/index.jsx"],"names":["React","Component","echarts","GridComponent","TitleComponent","TooltipComponent","ToolboxComponent","CanvasRenderer","AppstoreTwoTone","CloudTwoTone","ApiTwoTone","LineChart","axios","cookie","object_sizeof","moment","sizeof","ProductChart","use","TotalChart","state","deviceArray","messages","onlineTimeInterval","onlineTimePoint","onlineNumber","offlineNumber","componentDidMount","render","width","backgroundImage","length","toFixed","display","justifyContent"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as echarts from 'echarts/core';\nimport {GridComponent, TitleComponent, TooltipComponent, ToolboxComponent } from 'echarts/components';\nimport {CanvasRenderer} from 'echarts/renderers';\nimport {Card, Statistic, Progress, message} from 'antd';\nimport { AppstoreTwoTone, CloudTwoTone, ApiTwoTone } from '@ant-design/icons'\nimport { LineChart } from 'echarts/charts';\nimport './index.css'\nimport axios from \"axios\";\nimport cookie from \"react-cookies\";\nimport object_sizeof from 'object-sizeof';\nimport moment from 'moment'\nimport sizeof from \"object-sizeof\";\n\nimport ProductChart from \"../../components/ProductsChart\"\n\necharts.use(\n    [GridComponent, LineChart, CanvasRenderer, TitleComponent, TooltipComponent, ToolboxComponent]\n);\n\nexport default class TotalChart extends Component {\n\n    state = {deviceArray:[], messages:{}, onlineTimeInterval:{}, onlineTimePoint:{}, onlineNumber:0, offlineNumber:0}\n\n    async componentDidMount () {\n\n        // console.log(object_sizeof({abc:'def'}))\n        // await axios.post(\"/getPersonalInfo\", {\n        //     username:cookie.load('username')\n        // }).then(response => {\n        //     const data =  response.data;\n        //     let online = 0, offline = 0;\n        //     if(data.code === \"success\"){\n        //         let array = data.deviceArray.map((item, index) => {\n        //             if (item.isOnline === 1) online++;\n        //             else offline++;\n        //             return {\n        //                 key: index + 1,\n        //                 deviceName: item.deviceName,\n        //                 deviceID: item.deviceID,\n        //                 deviceStatus: item.isOnline\n        //             }\n        //         });\n        //         array.forEach(item => {\n        //             const deviceID = item.deviceID;\n        //             axios.post('/getDeviceInfo', {\n        //                 deviceID:deviceID\n        //             }).then(response => {\n        //                 const data = response.data;\n        //                 const message = data.deviceMessage;\n        //                 if(data.status === 'failed'){\n        //                     message.warning(\"获取设备信息失败\")\n        //                 }\n        //                 else if(data.status === 'notExist'){\n        //                     message.warning('设备不存在')\n        //                 }\n        //                 else{\n        //                     const messageArray = message.map((item, index) => {\n        //                         const obj = JSON.parse(item.content);\n        //                         let infoItem = {\n        //                             key: item.messageID,\n        //                             messageID: item.messageID,\n        //                             messageType: obj.alert,\n        //                             messageContent: obj.info,\n        //                             lat:obj.lat,\n        //                             lng:obj.lng,\n        //                             timestamp:obj.timestamp,\n        //                             time:(new Date(parseInt(obj.timestamp))).toLocaleDateString() + ' '+ (new Date(parseInt(obj.timestamp))).toLocaleTimeString(),\n        //                             date:(new Date(parseInt(obj.timestamp))).toLocaleDateString()\n        //                         }\n        //                         return infoItem;\n        //                     });\n        //                     const messages = {...this.state.messages};\n        //                     messages[deviceID] = messageArray;\n\n        //                     this.setState({deviceArray:array, onlineNumber:online, offlineNumber:offline, messages:messages}, () => {\n\n        //                         const today = moment();\n        //                         const dateArray = [\n        //                             moment(moment().subtract(6, 'days')).format('YYYY/M/D'),\n        //                             moment(moment().subtract(5, 'days')).format('YYYY/M/D'),\n        //                             moment(moment().subtract(4, 'days')).format('YYYY/M/D'),\n        //                             moment(moment().subtract(3, 'days')).format('YYYY/M/D'),\n        //                             moment(moment().subtract(2, 'days')).format('YYYY/M/D'),\n        //                             moment(moment().subtract(1, 'days')).format('YYYY/M/D'),\n        //                             today.format('YYYY/M/D')]\n        //                         console.log(dateArray)\n\n        //                         let messageRound = [];\n        //                         const {messages, deviceArray} = this.state;\n        //                         let normal = 0, warning = 0, online = 0, offline = 0, day1 = 0, day2 = 0,\n        //                         day3 = 0, day4 = 0, day5 = 0, day6 = 0, day7 = 0;\n\n        //                         deviceArray.forEach(device => {\n        //                             if(messages[device.deviceID] !== undefined){\n        //                                 messages[device.deviceID].forEach(message => {\n        //                                     if(message.messageType === 0) normal++;\n        //                                     if(message.messageType === 1) warning++;\n        //                                     if(message.messageType === 2) online++;\n        //                                     if(message.messageType === 3) offline++;\n        //                                     const m2 = moment((new Date(message.timestamp).toLocaleDateString()));\n        //                                     const diff = today.diff(m2, 'day');\n        //                                     if(diff === 0) day1 += sizeof(message.messageContent) / 1000;\n        //                                     if(diff === 1) day2 += sizeof(message.messageContent) / 1000;\n        //                                     if(diff === 2) day3 += sizeof(message.messageContent) / 1000;\n        //                                     if(diff === 3) day4 += sizeof(message.messageContent) / 1000;\n        //                                     if(diff === 4) day5 += sizeof(message.messageContent) / 1000;\n        //                                     if(diff === 5) day6 += sizeof(message.messageContent) / 1000;\n        //                                     if(diff === 6) day7 += sizeof(message.messageContent) / 1000;\n        //                                 })\n        //                             }\n        //                         })\n        //                         messageRound.push({value:normal, name:'正常信息'});\n        //                         messageRound.push({value:warning, name:'告警信息'});\n        //                         messageRound.push({value:online, name:'上线信息'});\n        //                         messageRound.push({value:offline, name:'下线信息'});\n\n        //                         const chartDom = document.getElementById ('dataChart');\n        //                         let myChart = echarts.init (chartDom);\n        //                         let option = {\n        //                             xAxis: {\n        //                                 type: 'category',\n        //                                 data: dateArray\n        //                             },\n        //                             yAxis: {\n        //                                 name: '单位(KB)',\n        //                                 type: 'value'\n        //                             },\n        //                             tooltip: {\n        //                                 trigger: 'axis'\n        //                             },\n        //                             series: [\n        //                                 {\n        //                                     data: [day7.toFixed(3),\n        //                                         day6.toFixed(3),\n        //                                         day5.toFixed(3),\n        //                                         day4.toFixed(3),\n        //                                         day3.toFixed(3),\n        //                                         day2.toFixed(3),\n        //                                         day1.toFixed(3)],\n        //                                     type: 'line',\n        //                                     symbol: 'circle',\n        //                                     symbolSize: 10,\n        //                                     lineStyle: {\n        //                                         color: '#5470C6',\n        //                                         width: 4,\n        //                                         type: 'dashed'\n        //                                     },\n        //                                     itemStyle: {\n        //                                         borderWidth: 3,\n        //                                         borderColor: '#EE6666',\n        //                                         color: 'yellow'\n        //                                     }\n        //                                 }\n        //                             ]\n        //                         };\n        //                         option && myChart.setOption(option);\n\n        //                         const chartDom1 = document.getElementById ('messageChart');\n        //                         let myChart1 = echarts.init (chartDom1);\n        //                         let option1 = {\n        //                             tooltip: {\n        //                                 trigger: 'item'\n        //                             },\n        //                             legend: {\n        //                                 top: '5%',\n        //                                 left: 'center'\n        //                             },\n        //                             color:['rgb(134, 197, 106)', 'rgb(235, 91, 91)', 'rgb(74, 101, 191)', 'rgb(249, 193, 78)'],\n        //                             series: [\n        //                                 {\n        //                                     type: 'pie',\n        //                                     radius: ['40%', '70%'],\n        //                                     avoidLabelOverlap: false,\n        //                                     label: {\n        //                                         show: false,\n        //                                         position: 'center'\n        //                                     },\n        //                                     emphasis: {\n        //                                         label: {\n        //                                             show: true,\n        //                                             fontSize: '40',\n        //                                             fontWeight: 'bold'\n        //                                         }\n        //                                     },\n        //                                     labelLine: {\n        //                                         show: false\n        //                                     },\n        //                                     data: messageRound\n        //                                 }\n        //                             ]\n        //                         };\n        //                         option1 && myChart1.setOption(option1);\n        //                         window.addEventListener(\"resize\", function () {\n        //                             myChart.resize();\n        //                             myChart1.resize();\n        //                         });\n        //                     });\n        //                 }\n        //             })\n        //         })\n        //     }\n        //     else{\n        //         message.warning (\"获取个人信息出错\").then (r  => console.log(r));\n        //     }\n        // })\n    }\n\n    render () {\n        const {onlineNumber, offlineNumber, deviceArray} = this.state;\n        return (\n            <div>\n            <ProductChart></ProductChart>\n\n            \n            <div id='chartContainer'>\n                <div id=\"TotalChart\">\n                    <Card title=\"设备总览\" bordered={false} style={{ width: '100%' }}>\n                        <div id={'Cards'}>\n                            <div className='myCard'>\n                                <Card title='总设备数' hoverable bordered={false} headStyle={{backgroundImage: 'linear-gradient(120deg, #00e795 0, #0095e2 100%)'}}>\n                                    <div className=\"cardItem\">\n                                        <div className='item1'>\n                                            <Statistic\n                                                value={deviceArray.length}\n                                                prefix={<AppstoreTwoTone />}\n                                                width={50}\n                                            />\n                                        </div>\n                                        <div className='item2'>\n                                            <Progress\n                                                status='active'\n                                                strokeColor={{\n                                                    '0%': '#00e795',\n                                                    '100%': '#0095e2',\n                                                }}\n                                                percent={100}\n                                                size={'small'}\n                                            />\n                                        </div>\n                                    </div>\n                                </Card>\n                            </div>\n                            <div className='myCard'>\n                                <Card title=\"在线设备数\" hoverable bordered={false} headStyle={{backgroundImage: 'linear-gradient(120deg, #f6d365 0, #ff7850 100%)'}}>\n                                    <div className=\"cardItem\">\n                                        <div className='item1'>\n                                            <Statistic\n                                                value={onlineNumber}\n                                                prefix={<CloudTwoTone />}\n                                            />\n                                        </div>\n                                        <div className='item2'>\n                                            <Progress\n                                                status='active'\n                                                strokeColor={{\n                                                    '0%': '#f6d365',\n                                                    '100%': '#ff7850',\n                                                }}\n                                                percent={(onlineNumber * 100 / deviceArray.length).toFixed(0)}\n                                                size={'small'}\n                                            />\n                                        </div>\n                                    </div>\n                                </Card>\n                            </div>\n                            <div className='myCard'>\n                                <Card title=\"离线设备数\" hoverable bordered={false} headStyle={{backgroundImage: 'linear-gradient(120deg, #7b78c9 0, #60c6f3 100%)'}}>\n                                    <div className=\"cardItem\">\n                                        <div className='item1'>\n                                            <Statistic\n                                                value={offlineNumber}\n                                                prefix={<ApiTwoTone />}\n                                            />\n                                        </div>\n                                        <div className='item2'>\n                                            <Progress\n                                                status = 'active'\n                                                strokeColor={{\n                                                    '0%': '#7b78c9',\n                                                    '100%': '#60c6f3',\n                                                }}\n                                                percent={(offlineNumber * 100 / deviceArray.length).toFixed(0)}\n                                                size={'small'}\n                                            />\n                                        </div>\n                                    </div>\n                                </Card>\n                            </div>\n                        </div>\n                    </Card>\n                </div>\n                <div id=\"dataContainer\" style={{display:'flex', justifyContent:'space-between'}}>\n                    <Card title=\"近一周接收数据量统计\" bordered={false} className={'indexChart'}>\n                        <div style={{width:'100%'}}>\n                            <div id='dataChart'/>\n                        </div>\n                    </Card>\n                    <Card title=\"信息分类\" bordered={false} className={'indexChart'}>\n                        <div style={{width:'100%'}}>\n                            <div id='messageChart'/>\n                        </div>\n                    </Card>\n                </div>\n            </div>\n        \n        </div>\n\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}