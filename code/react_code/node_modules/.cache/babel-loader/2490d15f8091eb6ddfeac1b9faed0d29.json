{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\nimport View from '../View';\nimport geoSourceManager from './geoSourceManager';\nimport { SINGLE_REFERRING } from '../../util/model';\n\nvar Geo =\n/** @class */\nfunction (_super) {\n  __extends(Geo, _super);\n  /**\n   * For backward compatibility, the orginal interface:\n   * `name, map, geoJson, specialAreas, nameMap` is kept.\n   *\n   * @param map Map type Specify the positioned areas by left, top, width, height.\n   * @param [nameMap] Specify name alias\n   */\n\n\n  function Geo(name, map, nameMap, invertLongitute) {\n    var _this = _super.call(this, name) || this;\n\n    _this.dimensions = ['lng', 'lat'];\n    _this.type = 'geo';\n    _this.map = map;\n    var source = geoSourceManager.load(map, nameMap);\n    _this._nameCoordMap = source.nameCoordMap;\n    _this._regionsMap = source.regionsMap;\n    _this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n    _this.regions = source.regions;\n    _this._rect = source.boundingRect;\n    return _this;\n  }\n  /**\n   * Whether contain the given [lng, lat] coord.\n   */\n\n\n  Geo.prototype.containCoord = function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Geo.prototype.transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n\n    if (invertLongitute) {\n      rawTransformable.scaleY = -rawTransformable.scaleY;\n    }\n\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  };\n\n  Geo.prototype.getRegion = function (name) {\n    return this._regionsMap.get(name);\n  };\n\n  Geo.prototype.getRegionByCoord = function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  };\n  /**\n   * Add geoCoord for indexing by name\n   */\n\n\n  Geo.prototype.addGeoCoord = function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  };\n  /**\n   * Get geoCoord by name\n   */\n\n\n  Geo.prototype.getGeoCoord = function (name) {\n    return this._nameCoordMap.get(name);\n  };\n\n  Geo.prototype.getBoundingRect = function () {\n    return this._rect;\n  };\n\n  Geo.prototype.dataToPoint = function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  };\n\n  Geo.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\n  };\n\n  Geo.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\n  };\n\n  return Geo;\n}(View);\n\n;\nzrUtil.mixin(Geo, View);\n\nfunction getCoordSys(finder) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  return geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map series.\n  || (seriesModel.getReferringComponents('geo', SINGLE_REFERRING).models[0] || {}).coordinateSystem : null;\n}\n\nexport default Geo;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/echarts/lib/coord/geo/Geo.js"],"names":["__extends","zrUtil","BoundingRect","View","geoSourceManager","SINGLE_REFERRING","Geo","_super","name","map","nameMap","invertLongitute","_this","call","dimensions","type","source","load","_nameCoordMap","nameCoordMap","_regionsMap","regionsMap","_invertLongitute","regions","_rect","boundingRect","prototype","containCoord","coord","i","length","contain","transformTo","x","y","width","height","rect","getBoundingRect","clone","rawTransformable","_rawTransformable","transform","calculateTransform","decomposeTransform","scaleY","updateTransform","_updateTransform","getRegion","get","getRegionByCoord","addGeoCoord","geoCoord","set","getGeoCoord","dataToPoint","data","noRoam","out","convertToPixel","ecModel","finder","value","coordSys","getCoordSys","convertFromPixel","pixel","pointToData","mixin","geoModel","seriesModel","coordinateSystem","getReferringComponents","models"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport BoundingRect from 'zrender/lib/core/BoundingRect';\nimport View from '../View';\nimport geoSourceManager from './geoSourceManager';\nimport { SINGLE_REFERRING } from '../../util/model';\n\nvar Geo =\n/** @class */\nfunction (_super) {\n  __extends(Geo, _super);\n  /**\n   * For backward compatibility, the orginal interface:\n   * `name, map, geoJson, specialAreas, nameMap` is kept.\n   *\n   * @param map Map type Specify the positioned areas by left, top, width, height.\n   * @param [nameMap] Specify name alias\n   */\n\n\n  function Geo(name, map, nameMap, invertLongitute) {\n    var _this = _super.call(this, name) || this;\n\n    _this.dimensions = ['lng', 'lat'];\n    _this.type = 'geo';\n    _this.map = map;\n    var source = geoSourceManager.load(map, nameMap);\n    _this._nameCoordMap = source.nameCoordMap;\n    _this._regionsMap = source.regionsMap;\n    _this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n    _this.regions = source.regions;\n    _this._rect = source.boundingRect;\n    return _this;\n  }\n  /**\n   * Whether contain the given [lng, lat] coord.\n   */\n\n\n  Geo.prototype.containCoord = function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Geo.prototype.transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n\n    if (invertLongitute) {\n      rawTransformable.scaleY = -rawTransformable.scaleY;\n    }\n\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  };\n\n  Geo.prototype.getRegion = function (name) {\n    return this._regionsMap.get(name);\n  };\n\n  Geo.prototype.getRegionByCoord = function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  };\n  /**\n   * Add geoCoord for indexing by name\n   */\n\n\n  Geo.prototype.addGeoCoord = function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  };\n  /**\n   * Get geoCoord by name\n   */\n\n\n  Geo.prototype.getGeoCoord = function (name) {\n    return this._nameCoordMap.get(name);\n  };\n\n  Geo.prototype.getBoundingRect = function () {\n    return this._rect;\n  };\n\n  Geo.prototype.dataToPoint = function (data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  };\n\n  Geo.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\n  };\n\n  Geo.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\n  };\n\n  return Geo;\n}(View);\n\n;\nzrUtil.mixin(Geo, View);\n\nfunction getCoordSys(finder) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  return geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map series.\n  || (seriesModel.getReferringComponents('geo', SINGLE_REFERRING).models[0] || {}).coordinateSystem : null;\n}\n\nexport default Geo;"]},"metadata":{},"sourceType":"module"}