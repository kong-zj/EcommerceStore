{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// These APIs are for more advanced usages\n// For example extend charts and components, creating graphic elements, formatting.\nimport ComponentModel from '../model/Component';\nimport ComponentView from '../view/Component';\nimport SeriesModel from '../model/Series';\nimport ChartView from '../view/Chart';\nimport * as zrender_1 from 'zrender/lib/zrender';\nexport { zrender_1 as zrender };\nimport * as matrix_1 from 'zrender/lib/core/matrix';\nexport { matrix_1 as matrix };\nimport * as vector_1 from 'zrender/lib/core/vector';\nexport { vector_1 as vector };\nimport * as zrUtil_1 from 'zrender/lib/core/util';\nexport { zrUtil_1 as zrUtil };\nimport * as color_1 from 'zrender/lib/tool/color';\nexport { color_1 as color };\nexport { throttle } from '../util/throttle';\nimport * as helper_1 from './api/helper';\nexport { helper_1 as helper };\nexport { use } from '../extension'; //////////////// Helper Methods /////////////////////\n\nexport { default as parseGeoJSON } from '../coord/geo/parseGeoJson';\nexport { default as parseGeoJson } from '../coord/geo/parseGeoJson';\nimport * as number_1 from './api/number';\nexport { number_1 as number };\nimport * as time_1 from './api/time';\nexport { time_1 as time };\nimport * as graphic_1 from './api/graphic';\nexport { graphic_1 as graphic };\nimport * as format_1 from './api/format';\nexport { format_1 as format };\nimport * as util_1 from './api/util';\nexport { util_1 as util };\nexport { default as env } from 'zrender/lib/core/env'; //////////////// Export for Exension Usage ////////////////\n\nexport { default as List } from '../data/List';\nexport { default as Model } from '../model/Model';\nexport { default as Axis } from '../coord/Axis';\nexport { ComponentModel, ComponentView, SeriesModel, ChartView }; // Only for GL\n\nexport { brushSingle as innerDrawElementOnCanvas } from 'zrender/lib/canvas/graphic'; //////////////// Deprecated Extension Methods ////////////////\n// Should use `ComponentModel.extend` or `class XXXX extend ComponentModel` to create class.\n// Then use `registerComponentModel` in `install` parameter when `use` this extension. For example:\n// class Bar3DModel extends ComponentModel {}\n// export function install(registers) { regsiters.registerComponentModel(Bar3DModel); }\n// echarts.use(install);\n\nexport function extendComponentModel(proto) {\n  var Model = ComponentModel.extend(proto);\n  ComponentModel.registerClass(Model);\n  return Model;\n}\nexport function extendComponentView(proto) {\n  var View = ComponentView.extend(proto);\n  ComponentView.registerClass(View);\n  return View;\n}\nexport function extendSeriesModel(proto) {\n  var Model = SeriesModel.extend(proto);\n  SeriesModel.registerClass(Model);\n  return Model;\n}\nexport function extendChartView(proto) {\n  var View = ChartView.extend(proto);\n  ChartView.registerClass(View);\n  return View;\n}","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/node_modules/echarts/lib/export/api.js"],"names":["ComponentModel","ComponentView","SeriesModel","ChartView","zrender_1","zrender","matrix_1","matrix","vector_1","vector","zrUtil_1","zrUtil","color_1","color","throttle","helper_1","helper","use","default","parseGeoJSON","parseGeoJson","number_1","number","time_1","time","graphic_1","graphic","format_1","format","util_1","util","env","List","Model","Axis","brushSingle","innerDrawElementOnCanvas","extendComponentModel","proto","extend","registerClass","extendComponentView","View","extendSeriesModel","extendChartView"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,cAAP,MAA2B,oBAA3B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAO,KAAKC,SAAZ,MAA2B,qBAA3B;AACA,SAASA,SAAS,IAAIC,OAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,yBAA1B;AACA,SAASA,QAAQ,IAAIC,MAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,yBAA1B;AACA,SAASA,QAAQ,IAAIC,MAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,uBAA1B;AACA,SAASA,QAAQ,IAAIC,MAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AACA,SAASA,OAAO,IAAIC,KAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,SAASA,QAAQ,IAAIC,MAArB;AACA,SAASC,GAAT,QAAoB,cAApB,C,CAAoC;;AAEpC,SAASC,OAAO,IAAIC,YAApB,QAAwC,2BAAxC;AACA,SAASD,OAAO,IAAIE,YAApB,QAAwC,2BAAxC;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,SAASA,QAAQ,IAAIC,MAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,YAAxB;AACA,SAASA,MAAM,IAAIC,IAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,eAA3B;AACA,SAASA,SAAS,IAAIC,OAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,SAASA,QAAQ,IAAIC,MAArB;AACA,OAAO,KAAKC,MAAZ,MAAwB,YAAxB;AACA,SAASA,MAAM,IAAIC,IAAnB;AACA,SAASZ,OAAO,IAAIa,GAApB,QAA+B,sBAA/B,C,CAAuD;;AAEvD,SAASb,OAAO,IAAIc,IAApB,QAAgC,cAAhC;AACA,SAASd,OAAO,IAAIe,KAApB,QAAiC,gBAAjC;AACA,SAASf,OAAO,IAAIgB,IAApB,QAAgC,eAAhC;AACA,SAASlC,cAAT,EAAyBC,aAAzB,EAAwCC,WAAxC,EAAqDC,SAArD,G,CAAkE;;AAElE,SAASgC,WAAW,IAAIC,wBAAxB,QAAwD,4BAAxD,C,CAAsF;AACtF;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAC1C,MAAIL,KAAK,GAAGjC,cAAc,CAACuC,MAAf,CAAsBD,KAAtB,CAAZ;AACAtC,EAAAA,cAAc,CAACwC,aAAf,CAA6BP,KAA7B;AACA,SAAOA,KAAP;AACD;AACD,OAAO,SAASQ,mBAAT,CAA6BH,KAA7B,EAAoC;AACzC,MAAII,IAAI,GAAGzC,aAAa,CAACsC,MAAd,CAAqBD,KAArB,CAAX;AACArC,EAAAA,aAAa,CAACuC,aAAd,CAA4BE,IAA5B;AACA,SAAOA,IAAP;AACD;AACD,OAAO,SAASC,iBAAT,CAA2BL,KAA3B,EAAkC;AACvC,MAAIL,KAAK,GAAG/B,WAAW,CAACqC,MAAZ,CAAmBD,KAAnB,CAAZ;AACApC,EAAAA,WAAW,CAACsC,aAAZ,CAA0BP,KAA1B;AACA,SAAOA,KAAP;AACD;AACD,OAAO,SAASW,eAAT,CAAyBN,KAAzB,EAAgC;AACrC,MAAII,IAAI,GAAGvC,SAAS,CAACoC,MAAV,CAAiBD,KAAjB,CAAX;AACAnC,EAAAA,SAAS,CAACqC,aAAV,CAAwBE,IAAxB;AACA,SAAOA,IAAP;AACD","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// These APIs are for more advanced usages\n// For example extend charts and components, creating graphic elements, formatting.\nimport ComponentModel from '../model/Component';\nimport ComponentView from '../view/Component';\nimport SeriesModel from '../model/Series';\nimport ChartView from '../view/Chart';\nimport * as zrender_1 from 'zrender/lib/zrender';\nexport { zrender_1 as zrender };\nimport * as matrix_1 from 'zrender/lib/core/matrix';\nexport { matrix_1 as matrix };\nimport * as vector_1 from 'zrender/lib/core/vector';\nexport { vector_1 as vector };\nimport * as zrUtil_1 from 'zrender/lib/core/util';\nexport { zrUtil_1 as zrUtil };\nimport * as color_1 from 'zrender/lib/tool/color';\nexport { color_1 as color };\nexport { throttle } from '../util/throttle';\nimport * as helper_1 from './api/helper';\nexport { helper_1 as helper };\nexport { use } from '../extension'; //////////////// Helper Methods /////////////////////\n\nexport { default as parseGeoJSON } from '../coord/geo/parseGeoJson';\nexport { default as parseGeoJson } from '../coord/geo/parseGeoJson';\nimport * as number_1 from './api/number';\nexport { number_1 as number };\nimport * as time_1 from './api/time';\nexport { time_1 as time };\nimport * as graphic_1 from './api/graphic';\nexport { graphic_1 as graphic };\nimport * as format_1 from './api/format';\nexport { format_1 as format };\nimport * as util_1 from './api/util';\nexport { util_1 as util };\nexport { default as env } from 'zrender/lib/core/env'; //////////////// Export for Exension Usage ////////////////\n\nexport { default as List } from '../data/List';\nexport { default as Model } from '../model/Model';\nexport { default as Axis } from '../coord/Axis';\nexport { ComponentModel, ComponentView, SeriesModel, ChartView }; // Only for GL\n\nexport { brushSingle as innerDrawElementOnCanvas } from 'zrender/lib/canvas/graphic'; //////////////// Deprecated Extension Methods ////////////////\n// Should use `ComponentModel.extend` or `class XXXX extend ComponentModel` to create class.\n// Then use `registerComponentModel` in `install` parameter when `use` this extension. For example:\n// class Bar3DModel extends ComponentModel {}\n// export function install(registers) { regsiters.registerComponentModel(Bar3DModel); }\n// echarts.use(install);\n\nexport function extendComponentModel(proto) {\n  var Model = ComponentModel.extend(proto);\n  ComponentModel.registerClass(Model);\n  return Model;\n}\nexport function extendComponentView(proto) {\n  var View = ComponentView.extend(proto);\n  ComponentView.registerClass(View);\n  return View;\n}\nexport function extendSeriesModel(proto) {\n  var Model = SeriesModel.extend(proto);\n  SeriesModel.registerClass(Model);\n  return Model;\n}\nexport function extendChartView(proto) {\n  var View = ChartView.extend(proto);\n  ChartView.registerClass(View);\n  return View;\n}"]},"metadata":{},"sourceType":"module"}