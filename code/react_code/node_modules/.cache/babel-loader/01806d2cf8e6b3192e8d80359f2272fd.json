{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/descriptions/style\";\nimport _Descriptions from \"antd/es/descriptions\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/tag/style\";\nimport _Tag from \"antd/es/tag\";\nvar _jsxFileName = \"/home/kzj/project/finalize/B-S-/\\u6E90\\u7801/react_code/src/pages/EditDevice/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport EditDeviceModal from \"../EditDeviceModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst messageColumns = [{\n  title: '消息ID',\n  dataIndex: 'messageID',\n  key: 'messageID'\n}, {\n  title: '发送位置',\n  dataIndex: 'location',\n  key: 'location'\n}, {\n  title: '消息类型',\n  key: 'messageType',\n  dataIndex: 'messageType',\n  render: tag => {\n    if (tag === 0) return /*#__PURE__*/_jsxDEV(_Tag, {\n      color: 'green',\n      children: \"\\u6B63\\u5E38\\u6D88\\u606F\"\n    }, tag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 34\n    }, this);\n    if (tag === 1) return /*#__PURE__*/_jsxDEV(_Tag, {\n      color: 'red',\n      children: \"\\u544A\\u8B66\\u6D88\\u606F\"\n    }, tag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 34\n    }, this);\n    if (tag === 2) return /*#__PURE__*/_jsxDEV(_Tag, {\n      color: 'blue',\n      children: \"\\u8BBE\\u5907\\u4E0A\\u7EBF\"\n    }, tag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 34\n    }, this);\n    if (tag === 3) return /*#__PURE__*/_jsxDEV(_Tag, {\n      color: 'yellow',\n      children: \"\\u8BBE\\u5907\\u79BB\\u7EBF\"\n    }, tag, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 34\n    }, this);\n  }\n}, {\n  title: '消息内容',\n  dataIndex: 'messageContent',\n  key: 'messageContent'\n}];\n\nclass EditDevice extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deviceID: \"\",\n      deviceInfo: {},\n      deviceMessage: [],\n      deviceName: \"\",\n      path: [],\n      isLoading: true\n    };\n    this.deviceColumns = [{\n      title: '设备ID',\n      dataIndex: 'deviceID',\n      key: 'deviceID'\n    }, {\n      title: '设备名称',\n      dataIndex: 'deviceName',\n      key: 'deviceName'\n    }, {\n      title: '拥有者ID',\n      dataIndex: 'ownerName',\n      key: 'ownerName'\n    }, {\n      title: '设备状态',\n      key: 'deviceStatus',\n      dataIndex: 'deviceStatus',\n      render: tag => /*#__PURE__*/_jsxDEV(_Tag, {\n        color: tag === 0 ? 'red' : 'green',\n        children: tag === 0 ? '离线' : '在线'\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }, this)\n    }, {\n      title: '操作',\n      key: 'edit',\n      render: (text, record) => /*#__PURE__*/_jsxDEV(EditDeviceModal, {\n        deviceID: this.state.deviceID,\n        deviceName: this.state.deviceName,\n        deleteDevice: this.deleteDevice,\n        path: this.state.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 39\n      }, this)\n    }];\n\n    this.setMessage = message => {\n      this.setState({\n        deviceMessage: message\n      });\n    };\n\n    this.deleteDevice = () => {\n      const deviceID = this.state.deviceID;\n      console.log(deviceID);\n      axios.post('/deleteDevice', {\n        deviceID: deviceID\n      }).then(response => {\n        const data = response.data;\n\n        if (data.status === 'success') {\n          cookie.save('deleteSuccess', true, {\n            path: '/'\n          });\n          window.location.href = '/index/personalInfo';\n        } else {\n          _message.warning('删除失败');\n        }\n      });\n    };\n\n    this.updateDevice = deviceName => {\n      this.setState({\n        deviceName\n      });\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.location.state.deviceID !== \"\") {\n      return {\n        deviceID: props.location.state.deviceID\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    setTimeout(() => this.setState({ ...this.state\n    }), 500);\n    const deviceID = this.state.deviceID;\n    let path = [];\n    axios.post('/getDeviceInfo', {\n      deviceID: deviceID\n    }).then(response => {\n      const data = response.data;\n      const message = data.deviceMessage;\n\n      if (data.status === 'failed') {\n        message.warning(\"获取设备信息失败\");\n      } else if (data.status === 'notExist') {\n        message.warning('设备不存在');\n      } else {\n        const messageArray = message.map((item, index) => {\n          const obj = JSON.parse(item.content);\n          let infoItem = {\n            key: item.messageID,\n            messageID: item.messageID,\n            messageType: obj.alert,\n            messageContent: obj.info,\n            location: \"无\",\n            lat: obj.lat,\n            lng: obj.lng\n          };\n\n          if (obj.lat !== undefined && obj.lng !== undefined) {\n            path = [...path, [{\n              lng: obj.lng,\n              lat: obj.lat\n            }, obj.alert]];\n            axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n                                    \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`).then(response => {\n              const data = response.data;\n              infoItem.location = data.regeocode.addressComponent.city;\n            });\n          }\n\n          return infoItem;\n        });\n        setTimeout(() => {\n          this.setState({\n            deviceInfo: data.deviceInfo,\n            deviceMessage: [...messageArray],\n            deviceName: data.deviceInfo.deviceName,\n            path: path,\n            isLoading: false\n          });\n        }, 1000);\n      }\n    });\n  }\n\n  render() {\n    const {\n      deviceID,\n      isOnline,\n      ownerName\n    } = this.state.deviceInfo;\n    const {\n      deviceName,\n      isLoading\n    } = this.state;\n    const info = [{\n      key: 1,\n      deviceName,\n      deviceID,\n      deviceStatus: isOnline,\n      ownerName\n    }];\n    const messageArray = this.state.deviceMessage;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u8BBE\\u5907\\u4FE1\\u606F\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(_Spin, {\n        style: {\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(_Table, {\n        columns: this.deviceColumns,\n        dataSource: info,\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(_Descriptions, {\n        title: \"\\u6D88\\u606F\\u4FE1\\u606F\",\n        bordered: true,\n        column: {\n          xxl: 4,\n          xl: 3,\n          lg: 3,\n          md: 3,\n          sm: 2,\n          xs: 1\n        },\n        style: {\n          marginTop: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(_Spin, {\n        style: {\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(_Table, {\n        columns: messageColumns,\n        dataSource: messageArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 70\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditDevice;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/src/pages/EditDevice/index.jsx"],"names":["React","Component","axios","cookie","EditDeviceModal","messageColumns","title","dataIndex","key","render","tag","EditDevice","state","deviceID","deviceInfo","deviceMessage","deviceName","path","isLoading","deviceColumns","text","record","deleteDevice","setMessage","message","setState","console","log","post","then","response","data","status","save","window","location","href","warning","updateDevice","getDerivedStateFromProps","props","componentDidMount","setTimeout","messageArray","map","item","index","obj","JSON","parse","content","infoItem","messageID","messageType","alert","messageContent","info","lat","lng","undefined","get","regeocode","addressComponent","city","isOnline","ownerName","deviceStatus","xxl","xl","lg","md","sm","xs","marginTop"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies'\nimport {Descriptions, message, Spin, Table, Tag} from \"antd\";\nimport EditDeviceModal from \"../EditDeviceModal\";\n\nconst messageColumns = [\n    {\n        title: '消息ID',\n        dataIndex: 'messageID',\n        key: 'messageID',\n    },\n    {\n        title: '发送位置',\n        dataIndex: 'location',\n        key: 'location'\n    },\n    {\n        title: '消息类型',\n        key: 'messageType',\n        dataIndex: 'messageType',\n        render: tag => {\n            if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n            if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n            if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n            if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n\n        }\n    },\n    {\n        title: '消息内容',\n        dataIndex: 'messageContent',\n        key: 'messageContent',\n    }\n\n]\n\nclass EditDevice extends Component {\n\n    state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n\n    deviceColumns = [\n        {\n            title: '设备ID',\n            dataIndex: 'deviceID',\n            key: 'deviceID',\n        },\n        {\n            title: '设备名称',\n            dataIndex: 'deviceName',\n            key: 'deviceName',\n        },\n        {\n            title: '拥有者ID',\n            dataIndex: 'ownerName',\n            key: 'ownerName',\n        },\n        {\n            title: '设备状态',\n            key: 'deviceStatus',\n            dataIndex: 'deviceStatus',\n            render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n        },\n        {\n            title: '操作',\n            key: 'edit',\n            render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n                                        path={this.state.path}/>,\n        }\n    ];\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.location.state.deviceID !== \"\") {\n            return {\n                deviceID: props.location.state.deviceID\n            }\n        }\n        return null\n    }\n\n    setMessage = message => {\n        this.setState({deviceMessage:message})\n    }\n\n    componentDidMount () {\n        setTimeout(() => this.setState({...this.state}), 500);\n        const deviceID = this.state.deviceID;\n        let path = [];\n        axios.post('/getDeviceInfo', {\n            deviceID:deviceID\n        }).then(response => {\n            const data = response.data;\n            const message = data.deviceMessage;\n            if(data.status === 'failed'){\n                message.warning(\"获取设备信息失败\")\n            }\n            else if(data.status === 'notExist'){\n                message.warning('设备不存在')\n            }\n            else{\n                const messageArray = message.map((item, index) => {\n                    const obj = JSON.parse(item.content);\n                    let infoItem =  {\n                        key: item.messageID,\n                        messageID: item.messageID,\n                        messageType: obj.alert,\n                        messageContent: obj.info,\n                        location:\"无\",\n                        lat:obj.lat,\n                        lng:obj.lng\n                    }\n                    if(obj.lat !== undefined && obj.lng !== undefined) {\n                        path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n                        axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n                                    \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n                            .then(response => {\n                                const data = response.data;\n                                infoItem.location = data.regeocode.addressComponent.city;\n                            });\n                    }\n                    return infoItem;\n                });\n                setTimeout(() => {\n                    this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n                }, 1000);\n            }\n        })\n\n    }\n\n    deleteDevice = () => {\n        const deviceID = this.state.deviceID;\n        console.log(deviceID)\n        axios.post('/deleteDevice', {\n            deviceID:deviceID\n        }).then(response => {\n            const data = response.data;\n            if(data.status === 'success') {\n                cookie.save('deleteSuccess', true, {path: '/'});\n                window.location.href='/index/personalInfo';\n            }\n            else{\n                message.warning('删除失败');\n            }\n        })\n    }\n\n    updateDevice = deviceName => {\n       this.setState({deviceName}) ;\n    }\n\n    render () {\n        const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n        const {deviceName, isLoading} = this.state;\n        const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n        const messageArray = this.state.deviceMessage;\n        return (\n            <div>\n                <Descriptions\n                    title=\"设备信息\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                />\n                {\n                    isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n                }\n\n                <Descriptions\n                    title=\"消息信息\"\n                    bordered\n                    column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n                    style={{marginTop:'50px'}}\n                />\n                {\n                    isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default EditDevice;"]},"metadata":{},"sourceType":"module"}