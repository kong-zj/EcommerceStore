{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/slider/style\";\nimport _Slider from \"antd/es/slider\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/AuctionOut/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api'; // import EditDeviceModal from \"../../EditDeviceModal\";\n\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons'; //接入合约\n\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\"; //静态资源\n\nimport ProductClass from '../../../static/ProductClass'; //ipfs配置文件\n\nimport ipfsConfig from '../../../config/ipfs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nconst {\n  RangePicker\n} = _DatePicker; //ipfs实例\n\nconst ipfs = ipfsAPI({\n  host: ipfsConfig.host,\n  port: ipfsConfig.port,\n  protocol: ipfsConfig.protocol\n});\n\nconst suffixSelector = /*#__PURE__*/_jsxDEV(_Form.Item, {\n  name: \"PriceUnit\",\n  noStyle: true,\n  children: /*#__PURE__*/_jsxDEV(_Select, {\n    style: {\n      width: 70\n    },\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      value: \"ETH\",\n      children: \"ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"wei\",\n      children: \"wei\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 5\n}, this);\n\nconst selectAfter = /*#__PURE__*/_jsxDEV(_Select, {\n  defaultValue: \"USD\",\n  style: {\n    width: 60\n  },\n  children: [/*#__PURE__*/_jsxDEV(Option, {\n    value: \"USD\",\n    children: \"$\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Option, {\n    value: \"EUR\",\n    children: \"\\u20AC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Option, {\n    value: \"GBP\",\n    children: \"\\xA3\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(Option, {\n    value: \"CNY\",\n    children: \"\\xA5\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 5\n}, this);\n\nconst rangeConfig = {\n  rules: [{\n    type: 'array',\n    required: true,\n    message: '请选择时间'\n  }]\n}; //向区块链写入商品信息\n\nclass AuctionOut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: cookie.load('username'),\n      web3: null,\n      truffleContract: null,\n      //读取上传的图片\n      picReader: null\n    };\n\n    this.normFile = e => {\n      console.log(\"调用上传图片的 getValueFromEvent\");\n      console.log(e);\n      let reader = null; //如果列表里至少有一张图片的话\n\n      if (e.fileList[0] !== undefined) {\n        //这里只拿了第一张图片，用下标索引可以拿到更多张\n        const file = e.fileList[0].originFileObj;\n        reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n        console.log(\"图片读取为 : \");\n        console.log(reader);\n      } else {\n        //清空，防止上传已经取消的\n        reader = null;\n        console.log(\"图片列表为空\");\n      } //在方法的最外层使用 this.setState 更新值，不然组件会一直处于uploading状态\n\n\n      this.setState({\n        picReader: reader\n      });\n      console.log(\"this.state.picReader : \");\n      console.log(this.state.picReader);\n    };\n\n    this.uploadFile = e => {\n      _message.info(\"正在上传图片\", 2);\n\n      console.log(\"调用上传图片的 customRequest\");\n      console.log(e); //判断是否上传完成\n\n      if (this.state.picReader !== null) {\n        e.onSuccess(200, this.state.picReader);\n      }\n    };\n\n    this.getBlockChainInfo = async () => {\n      try {\n        const web3 = await getWeb3();\n        const EcommerceStore = await getEcommerceStore(web3);\n        this.setState({\n          web3: web3,\n          truffleContract: EcommerceStore\n        });\n\n        _message.success(\"接入智能合约成功\", 2);\n\n        return true;\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`[ERROR]接入智能合约失败.`);\n        console.error(error);\n        return false;\n      }\n    };\n\n    this.onFinish = values => {\n      const ProductValue = values.serialize();\n      console.log('Success:', values); //ProductName (String)\n      //ProductDesc (String)\n      //this.state.picReader \n      //ProductRevealTime (int)\n      //ProductCondition (String)\n      //BeginAndEndTime (长度为2的Moment数组)\n      //ProductClass (字符串数组)\n      //StartPrice (int)\n      //PriceUnit (String)\n\n      _message.info(\"正在提交拍卖商品数据\");\n    };\n\n    this.onFinishFailed = errorInfo => {\n      _message.warning(\"请正确填写商品信息\", 2);\n    };\n\n    this.saveProduct = (reader, decodedParams) => {\n      let imageId, descId;\n      this.saveImageOnIpfs(reader).then(function (id) {\n        imageId = id;\n        this.saveTextBlobOnIpfs(decodedParams[\"product-description\"]).then(function (id) {\n          descId = id;\n          this.saveProductToBlockchain(decodedParams, imageId, descId);\n        });\n      });\n    };\n\n    this.saveImageOnIpfs = reader => {\n      return new Promise((resolve, reject) => {\n        let buffer = Buffer.from(reader.result);\n        ipfs.add(buffer).then(res => {\n          console.log(\"ImgRes: \", res);\n          resolve(res[0].hash);\n        }).catch(err => {\n          console.error(err);\n          reject(err);\n        });\n      });\n    };\n\n    this.saveTextBlobOnIpfs = blob => {\n      return new Promise((resolve, reject) => {\n        let buffer = Buffer.from(blob, 'utf-8');\n        ipfs.add(buffer).then(res => {\n          console.log(\"TextRes: \", res);\n          resolve(res[0].hash);\n        }).catch(err => {\n          console.error(err);\n          reject(err);\n        });\n      });\n    };\n\n    this.saveProductToBlockchain = (params, imageId, descId) => {\n      console.log(\"params in save product: \", params);\n      let auctionStartTime = Date.parse(params[\"product-auction-start\"]) / 1000;\n      let auctionEndTime = auctionStartTime + parseInt(params[\"product-auction-end\"]) * 24 * 60 * 60;\n      this.state.truffleContract.deployed().then(i => {\n        //要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n        //即时获取当前地址，用该地址发交易\n        let currentAccount = this.state.web3.eth.getAccounts();\n\n        _message.info(\"交易发起地址为: \" + currentAccount, 2); //尝试实现事件event NewProduct监听\n\n\n        i.addProductToStore(params[\"product-name\"], params[\"product-category\"], imageId, descId, auctionStartTime, auctionEndTime, this.state.web3.utils.toWei(params[\"product-price\"], 'ether'), parseInt(params[\"product-condition\"]), {\n          from: currentAccount,\n          gas: 440000\n        }).then(function (f) {\n          console.log(\"成功调用合约的addProductToStore方法\");\n          console.log(f);\n        });\n      });\n    };\n  } //当文件选择变化时\n  //getValueFromEvent调用它\n\n\n  componentDidMount() {\n    console.log(\"生成AuctionOut模块\");\n\n    if (this.getBlockChainInfo()) {\n      console.log(\"成功获得合约信息\");\n    } else {\n      console.log(\"获得合约信息失败\");\n    }\n  } //点击提交按钮，表单可以提交时\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(_Card, {\n        title: \"\\u4E0A\\u67B6\\u5F85\\u62CD\\u5356\\u5546\\u54C1\",\n        bordered: false,\n        style: {\n          width: '80%'\n        },\n        headStyle: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Form, {\n          initialValues: {\n            remember: true\n          },\n          onFinish: this.onFinish,\n          onFinishFailed: this.onFinishFailed,\n          style: {\n            margin: \"auto\",\n            width: \"60%\",\n            marginTop: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductName\",\n            rules: [{\n              required: true,\n              message: '请输入商品名称'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              placeholder: \"\\u5546\\u54C1\\u540D\\u79F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductDesc\",\n            label: \"\\u5546\\u54C1\\u4ECB\\u7ECD\",\n            rules: [{\n              required: true,\n              message: '请输入商品介绍'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n              showCount: true,\n              maxLength: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"UploadPic\",\n            label: \"\\u4E0A\\u4F20\\u56FE\\u7247\",\n            valuePropName: \"fileList\",\n            getValueFromEvent: this.normFile,\n            extra: \"\",\n            children: /*#__PURE__*/_jsxDEV(_Upload, {\n              name: \"logo\",\n              customRequest: this.uploadFile,\n              listType: \"picture\",\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 43\n                }, this),\n                children: \"\\u70B9\\u51FB\\u4E0A\\u4F20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductClass\",\n            label: \"\\u5546\\u54C1\\u79CD\\u7C7B\",\n            rules: [{\n              type: 'array',\n              required: true,\n              message: '请选择商品种类'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Cascader, {\n              placeholder: \"\\u8BF7\\u9009\\u62E9\",\n              options: ProductClass\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"StartPrice\",\n            label: \"\\u8D77\\u62CD\\u4EF7\\u683C\",\n            rules: [{\n              required: true,\n              message: '请输入起拍价格'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_InputNumber, {\n              addonAfter: suffixSelector,\n              style: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"BeginAndEndTime\",\n            label: \"\\u8D77\\u6B62\\u65F6\\u95F4\",\n            ...rangeConfig,\n            children: /*#__PURE__*/_jsxDEV(RangePicker, {\n              showTime: true,\n              format: \"YYYY-MM-DD HH:mm:ss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductCondition\",\n            label: \"\\u4EA7\\u54C1\\u72B6\\u51B5\",\n            rules: [{\n              required: true,\n              message: '请选择状况'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Select, {\n              placeholder: \"\\u8BF7\\u9009\\u62E9\",\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"new\",\n                children: \"\\u5168\\u65B0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"used\",\n                children: \"\\u4E8C\\u624B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductRevealTime\",\n            label: \"\\u63ED\\u793A\\u62A5\\u4EF7\\u6301\\u7EED\\u65F6\\u95F4\",\n            children: /*#__PURE__*/_jsxDEV(_Slider, {\n              marks: {\n                0: '0',\n                20: '20',\n                40: '40',\n                60: '60',\n                80: '80',\n                100: '100 分钟'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            wrapperCol: {\n              offset: 10,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"\\u53D1\\u5E03\\u5546\\u54C1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuctionOut; // import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n// class CreateDevice extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n//         \n//         );\n//     }\n// }\n// export default CreateDevice;\n// const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n// ]\n// class EditDevice extends Component {\n//     state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n//     deviceColumns = [\n//         {\n//             title: '设备ID',\n//             dataIndex: 'deviceID',\n//             key: 'deviceID',\n//         },\n//         {\n//             title: '设备名称',\n//             dataIndex: 'deviceName',\n//             key: 'deviceName',\n//         },\n//         {\n//             title: '拥有者ID',\n//             dataIndex: 'ownerName',\n//             key: 'ownerName',\n//         },\n//         {\n//             title: '设备状态',\n//             key: 'deviceStatus',\n//             dataIndex: 'deviceStatus',\n//             render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n//         },\n//         // {\n//         //     title: '操作',\n//         //     key: 'edit',\n//         //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n//         //                                 path={this.state.path}/>,\n//         // }\n//     ];\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n//     }\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n//     render () {\n//         const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n//         const {deviceName, isLoading} = this.state;\n//         const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n//         const messageArray = this.state.deviceMessage;\n//         return (\n//             <div>\n//                 <Descriptions\n//                     title=\"设备信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                 />\n//                 {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n//                 }\n//                 <Descriptions\n//                     title=\"消息信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                     style={{marginTop:'50px'}}\n//                 />\n//                 {/* {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n//                 } */}\n//             </div>\n//         );\n//     }\n// }\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n// class AuctionOut extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n// export default AuctionOut;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/AuctionOut/index.jsx"],"names":["React","Component","axios","cookie","ipfsAPI","UploadOutlined","InboxOutlined","getWeb3","getEcommerceStore","ProductClass","ipfsConfig","Option","RangePicker","ipfs","host","port","protocol","suffixSelector","width","selectAfter","rangeConfig","rules","type","required","message","AuctionOut","constructor","props","state","username","load","web3","truffleContract","picReader","normFile","e","console","log","reader","fileList","undefined","file","originFileObj","window","FileReader","readAsArrayBuffer","setState","uploadFile","info","onSuccess","getBlockChainInfo","EcommerceStore","success","error","alert","onFinish","values","ProductValue","serialize","onFinishFailed","errorInfo","warning","saveProduct","decodedParams","imageId","descId","saveImageOnIpfs","then","id","saveTextBlobOnIpfs","saveProductToBlockchain","Promise","resolve","reject","buffer","Buffer","from","result","add","res","hash","catch","err","blob","params","auctionStartTime","Date","parse","auctionEndTime","parseInt","deployed","i","currentAccount","eth","getAccounts","addProductToStore","utils","toWei","gas","f","componentDidMount","render","display","justifyContent","remember","margin","marginTop","offset","span"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api';\n// import EditDeviceModal from \"../../EditDeviceModal\";\nimport { message, Card} from 'antd';\nimport {\n    Form,\n    Input,\n    InputNumber,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    Upload,\n    AutoComplete,\n    DatePicker,\n    Slider,\n  } from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\n\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\n\n//静态资源\nimport ProductClass from '../../../static/ProductClass';\n\n//ipfs配置文件\nimport ipfsConfig from '../../../config/ipfs';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n//ipfs实例\nconst ipfs = ipfsAPI({ host: ipfsConfig.host, port: ipfsConfig.port, protocol: ipfsConfig.protocol });\n\n\nconst suffixSelector = (\n    <Form.Item name=\"PriceUnit\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option value=\"ETH\">ETH</Option>\n        <Option value=\"wei\">wei</Option>\n      </Select>\n    </Form.Item>\n);\n\n\nconst selectAfter = (\n    <Select defaultValue=\"USD\" style={{ width: 60 }}>\n      <Option value=\"USD\">$</Option>\n      <Option value=\"EUR\">€</Option>\n      <Option value=\"GBP\">£</Option>\n      <Option value=\"CNY\">¥</Option>\n    </Select>\n);\n\n  const rangeConfig = {\n    rules: [\n      {\n        type: 'array',\n        required: true,\n        message: '请选择时间',\n      },\n    ],\n  };\n\n\n\n\n//向区块链写入商品信息\nclass AuctionOut extends Component {\n\n    state = {\n        username:cookie.load('username'),\n        web3 : null,\n        truffleContract : null,\n        //读取上传的图片\n        picReader : null\n    }\n\n    constructor (props) {\n        super(props);\n    }\n\n    //当文件选择变化时\n    //getValueFromEvent调用它\n    normFile = (e) => {\n        console.log(\"调用上传图片的 getValueFromEvent\");\n        console.log(e);\n        let reader = null;\n        //如果列表里至少有一张图片的话\n        if(e.fileList[0] !== undefined){\n            //这里只拿了第一张图片，用下标索引可以拿到更多张\n            const file = e.fileList[0].originFileObj;\n            reader = new window.FileReader();\n            reader.readAsArrayBuffer(file);\n            console.log(\"图片读取为 : \");\n            console.log(reader);\n        }else{\n            //清空，防止上传已经取消的\n            reader = null;\n            console.log(\"图片列表为空\");\n        } \n        //在方法的最外层使用 this.setState 更新值，不然组件会一直处于uploading状态\n        this.setState({\n            picReader: reader\n        });\n        console.log(\"this.state.picReader : \");\n        console.log(this.state.picReader);\n    }\n\n\n    //customRequest调用它\n    uploadFile = (e) => {\n        message.info(\"正在上传图片\", 2);\n        console.log(\"调用上传图片的 customRequest\");\n        console.log(e);\n        //判断是否上传完成\n        if(this.state.picReader !== null){\n            e.onSuccess(200,this.state.picReader);\n        }\n      }\n\n    \n\n    getBlockChainInfo = async() => {\n        try{\n            const web3 = await getWeb3();\n            const EcommerceStore = await getEcommerceStore(web3);\n            this.setState({\n                web3: web3,\n                truffleContract:EcommerceStore\n            });\n            message.success(\"接入智能合约成功\", 2);\n            return true;\n        }catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n              `[ERROR]接入智能合约失败.`,\n            );\n            console.error(error);\n            return false;\n          }\n        \n    }\n\n    componentDidMount () {\n        console.log(\"生成AuctionOut模块\");\n        if(this.getBlockChainInfo()){\n            console.log(\"成功获得合约信息\");\n        }else{\n            console.log(\"获得合约信息失败\");\n        }\n    }\n\n    //点击提交按钮，表单可以提交时\n    onFinish = (values) => {\n        const ProductValue = values.serialize();\n        console.log('Success:', values);\n        //ProductName (String)\n        //ProductDesc (String)\n        //this.state.picReader \n        //ProductRevealTime (int)\n        //ProductCondition (String)\n        //BeginAndEndTime (长度为2的Moment数组)\n        //ProductClass (字符串数组)\n        //StartPrice (int)\n        //PriceUnit (String)\n        message.info(\"正在提交拍卖商品数据\");\n\n\n    }\n\n\n    //点击提交按钮，表单不能提交时\n    onFinishFailed = (errorInfo) => {\n        message.warning(\"请正确填写商品信息\",2);\n    }\n\n\n    //向区块链保存商品入口函数\n    saveProduct = (reader, decodedParams) => {\n        let imageId, descId;\n        this.saveImageOnIpfs(reader).then(function(id) {\n            imageId = id;\n            this.saveTextBlobOnIpfs(decodedParams[\"product-description\"]).then(function(id) {\n                descId = id;\n                this.saveProductToBlockchain(decodedParams, imageId, descId);\n            });\n        });\n    }\n    \n    //图片上传ipfs并获取hash\n    saveImageOnIpfs = (reader) => {\n        return new Promise((resolve, reject) => {\n            let buffer = Buffer.from(reader.result);\n            ipfs.add(buffer).then(res => {\n                console.log(\"ImgRes: \", res);\n                resolve(res[0].hash);\n            }).catch(err => {\n                console.error(err);\n                reject(err);\n            });\n        });\n    }\n    \n    //简介上传ipfs并获取hash\n    saveTextBlobOnIpfs = (blob) => {\n        return new Promise((resolve, reject) => {\n            let buffer = Buffer.from(blob, 'utf-8');\n            ipfs.add(buffer).then(res => {\n                console.log(\"TextRes: \", res);\n                resolve(res[0].hash);\n            }).catch(err => {\n                console.error(err);\n                reject(err);\n            });\n        });\n    }\n\n    //调用区块链方法\n    saveProductToBlockchain = (params, imageId, descId) => {\n        console.log(\"params in save product: \", params);\n        let auctionStartTime = Date.parse(params[\"product-auction-start\"]) / 1000;\n        let auctionEndTime = auctionStartTime + parseInt(params[\"product-auction-end\"]) * 24 * 60 * 60;\n    \n        this.state.truffleContract.deployed().then(i => {\n            //要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n            //即时获取当前地址，用该地址发交易\n            let currentAccount = this.state.web3.eth.getAccounts();\n                message.info(\"交易发起地址为: \"+currentAccount, 2);\n    \n            //尝试实现事件event NewProduct监听\n            i.addProductToStore(params[\"product-name\"], params[\"product-category\"], imageId, descId, auctionStartTime,\n                    auctionEndTime, this.state.web3.utils.toWei(params[\"product-price\"], 'ether'), parseInt(params[\"product-condition\"]), { from: currentAccount, gas: 440000 }).then(function(f) {\n                    console.log(\"成功调用合约的addProductToStore方法\");\n                    console.log(f);\n            });\n    \n        });\n    }\n\n\n    \n    render () {\n        return (\n            <div style={{display:'flex', justifyContent:'center'}}>\n            <Card title=\"上架待拍卖商品\" bordered={false} style={{ width: '80%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n                <Form\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={this.onFinish}\n                    onFinishFailed={this.onFinishFailed}\n                    style={{margin:\"auto\", width:\"60%\", marginTop:\"15px\"}}\n                >\n                    <Form.Item\n                        name=\"ProductName\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '请输入商品名称',\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"商品名称\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"ProductDesc\"\n                        label=\"商品介绍\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请输入商品介绍',\n                                },\n                        ]}\n                    >\n                        <Input.TextArea showCount maxLength={100} />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"UploadPic\"\n                        label=\"上传图片\"\n                        valuePropName=\"fileList\"\n                        getValueFromEvent={this.normFile}\n                        extra=\"\"\n                    >\n                        <Upload name=\"logo\" \n                            customRequest={this.uploadFile} \n                            listType=\"picture\">\n                            <Button icon={<UploadOutlined />}>点击上传</Button>\n                        </Upload>\n                    </Form.Item>\n                    \n                    <Form.Item\n                        name=\"ProductClass\"\n                        label=\"商品种类\"\n                        rules={[\n                                {\n                                    type: 'array',\n                                    required: true,\n                                    message: '请选择商品种类',\n                                },\n                            ]}\n                    >\n                        <Cascader placeholder=\"请选择\" options={ProductClass} />\n                    </Form.Item>\n\n\n                    <Form.Item\n                        name=\"StartPrice\"\n                        label=\"起拍价格\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请输入起拍价格',\n                                },\n                            ]}\n                    >\n                    <InputNumber\n                    \n                        addonAfter={suffixSelector}\n                        style={{\n                            width: '100%',\n                        }}\n                    />\n                    </Form.Item>\n\n                    <Form.Item name=\"BeginAndEndTime\" label=\"起止时间\" {...rangeConfig}>\n                        <RangePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        name=\"ProductCondition\"\n                        label=\"产品状况\"\n                        rules={[\n                                {\n                                    required: true,\n                                    message: '请选择状况',\n                                },\n                        ]}\n                    >\n                        <Select placeholder=\"请选择\">\n                            <Option value=\"new\">全新</Option>\n                            <Option value=\"used\">二手</Option>\n                        </Select>\n                    </Form.Item>\n\n\n                    <Form.Item name=\"ProductRevealTime\" label=\"揭示报价持续时间\">\n                        <Slider\n                            marks={{\n                                0: '0',\n                                20: '20',\n                                40: '40',\n                                60: '60',\n                                80: '80',\n                                100: '100 分钟',\n                            }}\n                        />\n                    </Form.Item>\n                \n\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 10,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            发布商品\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n        );\n    }\n}\n\nexport default AuctionOut;\n\n\n\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\n// class CreateDevice extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n\n//         \n//         );\n//     }\n// }\n\n// export default CreateDevice;\n\n\n\n\n// const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n\n// ]\n\n// class EditDevice extends Component {\n\n//     state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n\n//     deviceColumns = [\n//         {\n//             title: '设备ID',\n//             dataIndex: 'deviceID',\n//             key: 'deviceID',\n//         },\n//         {\n//             title: '设备名称',\n//             dataIndex: 'deviceName',\n//             key: 'deviceName',\n//         },\n//         {\n//             title: '拥有者ID',\n//             dataIndex: 'ownerName',\n//             key: 'ownerName',\n//         },\n//         {\n//             title: '设备状态',\n//             key: 'deviceStatus',\n//             dataIndex: 'deviceStatus',\n//             render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n//         },\n//         // {\n//         //     title: '操作',\n//         //     key: 'edit',\n//         //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n//         //                                 path={this.state.path}/>,\n//         // }\n//     ];\n\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n\n//     }\n\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n\n//     render () {\n//         const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n//         const {deviceName, isLoading} = this.state;\n//         const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n//         const messageArray = this.state.deviceMessage;\n//         return (\n//             <div>\n//                 <Descriptions\n//                     title=\"设备信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                 />\n//                 {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n//                 }\n\n//                 <Descriptions\n//                     title=\"消息信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                     style={{marginTop:'50px'}}\n//                 />\n//                 {/* {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n//                 } */}\n\n//             </div>\n//         );\n//     }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\n// class AuctionOut extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n\n// export default AuctionOut;"]},"metadata":{},"sourceType":"module"}