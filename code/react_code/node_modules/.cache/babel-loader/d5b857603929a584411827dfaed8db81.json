{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\nimport Single from './Single';\nimport { SINGLE_REFERRING } from '../../util/model';\n/**\n * Create single coordinate system and inject it into seriesModel.\n */\n\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = seriesModel.getReferringComponents('singleAxis', SINGLE_REFERRING).models[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nvar singleCreator = {\n  create: create,\n  dimensions: Single.prototype.dimensions\n};\nexport default singleCreator;","map":{"version":3,"sources":["/home/kzj/project/finalize/B-S-/源码/react_code/node_modules/echarts/lib/coord/single/singleCreator.js"],"names":["Single","SINGLE_REFERRING","create","ecModel","api","singles","eachComponent","axisModel","idx","single","name","resize","coordinateSystem","push","eachSeries","seriesModel","get","singleAxisModel","getReferringComponents","models","singleCreator","dimensions","prototype"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA;AACA;AACA;;AAEA,SAASC,MAAT,CAAgBC,OAAhB,EAAyBC,GAAzB,EAA8B;AAC5B,MAAIC,OAAO,GAAG,EAAd;AACAF,EAAAA,OAAO,CAACG,aAAR,CAAsB,YAAtB,EAAoC,UAAUC,SAAV,EAAqBC,GAArB,EAA0B;AAC5D,QAAIC,MAAM,GAAG,IAAIT,MAAJ,CAAWO,SAAX,EAAsBJ,OAAtB,EAA+BC,GAA/B,CAAb;AACAK,IAAAA,MAAM,CAACC,IAAP,GAAc,YAAYF,GAA1B;AACAC,IAAAA,MAAM,CAACE,MAAP,CAAcJ,SAAd,EAAyBH,GAAzB;AACAG,IAAAA,SAAS,CAACK,gBAAV,GAA6BH,MAA7B;AACAJ,IAAAA,OAAO,CAACQ,IAAR,CAAaJ,MAAb;AACD,GAND;AAOAN,EAAAA,OAAO,CAACW,UAAR,CAAmB,UAAUC,WAAV,EAAuB;AACxC,QAAIA,WAAW,CAACC,GAAZ,CAAgB,kBAAhB,MAAwC,YAA5C,EAA0D;AACxD,UAAIC,eAAe,GAAGF,WAAW,CAACG,sBAAZ,CAAmC,YAAnC,EAAiDjB,gBAAjD,EAAmEkB,MAAnE,CAA0E,CAA1E,CAAtB;AACAJ,MAAAA,WAAW,CAACH,gBAAZ,GAA+BK,eAAe,IAAIA,eAAe,CAACL,gBAAlE;AACD;AACF,GALD;AAMA,SAAOP,OAAP;AACD;;AAED,IAAIe,aAAa,GAAG;AAClBlB,EAAAA,MAAM,EAAEA,MADU;AAElBmB,EAAAA,UAAU,EAAErB,MAAM,CAACsB,SAAP,CAAiBD;AAFX,CAApB;AAIA,eAAeD,aAAf","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\nimport Single from './Single';\nimport { SINGLE_REFERRING } from '../../util/model';\n/**\n * Create single coordinate system and inject it into seriesModel.\n */\n\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = seriesModel.getReferringComponents('singleAxis', SINGLE_REFERRING).models[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nvar singleCreator = {\n  create: create,\n  dimensions: Single.prototype.dimensions\n};\nexport default singleCreator;"]},"metadata":{},"sourceType":"module"}