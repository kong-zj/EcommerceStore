{"ast":null,"code":"import { useCallback, useRef } from 'react';\n\nvar useRefFunction = function useRefFunction(reFunction) {\n  var ref = useRef(null);\n  ref.current = reFunction;\n  return useCallback(function () {\n    var _ref$current;\n\n    for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n      rest[_key] = arguments[_key];\n    }\n\n    return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.call.apply(_ref$current, [ref].concat(rest));\n  }, []);\n};\n\nexport { useRefFunction };","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/@ant-design/pro-card/node_modules/@ant-design/pro-utils/es/hooks/useRefFunction/index.js"],"names":["useCallback","useRef","useRefFunction","reFunction","ref","current","_ref$current","_len","arguments","length","rest","Array","_key","call","apply","concat"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,OAApC;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,UAAxB,EAAoC;AACvD,MAAIC,GAAG,GAAGH,MAAM,CAAC,IAAD,CAAhB;AACAG,EAAAA,GAAG,CAACC,OAAJ,GAAcF,UAAd;AACA,SAAOH,WAAW,CAAC,YAAY;AAC7B,QAAIM,YAAJ;;AAEA,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,WAAO,CAACN,YAAY,GAAGF,GAAG,CAACC,OAApB,MAAiC,IAAjC,IAAyCC,YAAY,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,YAAY,CAACO,IAAb,CAAkBC,KAAlB,CAAwBR,YAAxB,EAAsC,CAACF,GAAD,EAAMW,MAAN,CAAaL,IAAb,CAAtC,CAAnF;AACD,GARiB,EAQf,EARe,CAAlB;AASD,CAZD;;AAcA,SAASR,cAAT","sourcesContent":["import { useCallback, useRef } from 'react';\n\nvar useRefFunction = function useRefFunction(reFunction) {\n  var ref = useRef(null);\n  ref.current = reFunction;\n  return useCallback(function () {\n    var _ref$current;\n\n    for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n      rest[_key] = arguments[_key];\n    }\n\n    return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.call.apply(_ref$current, [ref].concat(rest));\n  }, []);\n};\n\nexport { useRefFunction };"]},"metadata":{},"sourceType":"module"}