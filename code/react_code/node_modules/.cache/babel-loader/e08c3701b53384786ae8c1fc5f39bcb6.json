{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/AuctionOut/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies'; // import EditDeviceModal from \"../../EditDeviceModal\";\n\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\nimport UploadPic from '../../../components/UploadPic'; //接入合约\n\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}]; //从数据库拿商品信息\n\nclass AuctionOut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: cookie.load('username'),\n      web3: null,\n      truffleContract: null\n    };\n\n    this.getBlockChainInfo = async () => {\n      const web3 = await getWeb3();\n      const EcommerceStore = await getEcommerceStore(web3);\n      this.setState({\n        web3: web3,\n        currentContract: EcommerceStore\n      });\n    };\n\n    this.onFinish = values => {\n      console.log('Success:', values); //ProductName\n\n      axios.post('/createDevice', {\n        deviceID: values.deviceID,\n        deviceName: values.deviceName,\n        ownerName: cookie.load('username')\n      }).then(response => {\n        const data = response.data;\n\n        if (data.status === \"success\") {\n          _message.success(\"设备创建成功\", 2);\n\n          let deviceArray = cookie.load('deviceArray');\n          cookie.remove('deviceArray', {\n            path: '/'\n          });\n          deviceArray = [...deviceArray, values.deviceID];\n          cookie.save('deviceArray', deviceArray, {\n            path: '/'\n          });\n        } else if (data.status === \"duplicated\") {\n          _message.warning(\"该设备已被绑定\", 2);\n        } else {\n          _message.warning(\"创建设备失败\", 2);\n        }\n      });\n    };\n\n    this.onFinishFailed = errorInfo => {\n      _message.warning(\"请正确填写表单！\", 2);\n    };\n\n    this.handleChange = value => {\n      console.log(`selected ${value}`);\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"生成AuctionOut模块\");\n\n    if (this.getBlockChainInfo()) {\n      console.log(\"成功获得合约信息\");\n    } else {\n      console.log(\"获得合约信息失败\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(_Card, {\n        title: \"\\u4E0A\\u67B6\\u62CD\\u5356\\u5546\\u54C1\",\n        bordered: false,\n        style: {\n          width: '70%'\n        },\n        headStyle: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Form, {\n          initialValues: {\n            remember: true\n          },\n          onFinish: this.onFinish,\n          onFinishFailed: this.onFinishFailed,\n          style: {\n            margin: \"auto\",\n            width: \"50%\",\n            marginTop: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"ProductName\",\n            rules: [{\n              required: true,\n              message: '请输入商品名称'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              placeholder: \"\\u5546\\u54C1\\u540D\\u79F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"residence\",\n            label: \"Habitual Residence\",\n            rules: [{\n              type: 'array',\n              required: true,\n              message: 'Please select your habitual residence!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Cascader, {\n              options: residences\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            name: \"deviceName\",\n            rules: [{\n              required: true,\n              message: '请输入设备名称！'\n            }],\n            children: /*#__PURE__*/_jsxDEV(_Input, {\n              placeholder: \"\\u8BBE\\u5907\\u540D\\u79F0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n            wrapperCol: {\n              offset: 10,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(_Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"\\u521B\\u5EFA\\u8BBE\\u5907\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AuctionOut; // import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n// class CreateDevice extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n//         \n//         );\n//     }\n// }\n// export default CreateDevice;\n// const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n// ]\n// class EditDevice extends Component {\n//     state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n//     deviceColumns = [\n//         {\n//             title: '设备ID',\n//             dataIndex: 'deviceID',\n//             key: 'deviceID',\n//         },\n//         {\n//             title: '设备名称',\n//             dataIndex: 'deviceName',\n//             key: 'deviceName',\n//         },\n//         {\n//             title: '拥有者ID',\n//             dataIndex: 'ownerName',\n//             key: 'ownerName',\n//         },\n//         {\n//             title: '设备状态',\n//             key: 'deviceStatus',\n//             dataIndex: 'deviceStatus',\n//             render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n//         },\n//         // {\n//         //     title: '操作',\n//         //     key: 'edit',\n//         //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n//         //                                 path={this.state.path}/>,\n//         // }\n//     ];\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n//     }\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n//     render () {\n//         const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n//         const {deviceName, isLoading} = this.state;\n//         const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n//         const messageArray = this.state.deviceMessage;\n//         return (\n//             <div>\n//                 <Descriptions\n//                     title=\"设备信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                 />\n//                 {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n//                 }\n//                 <Descriptions\n//                     title=\"消息信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                     style={{marginTop:'50px'}}\n//                 />\n//                 {/* {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n//                 } */}\n//             </div>\n//         );\n//     }\n// }\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n// class AuctionOut extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n// export default AuctionOut;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Publish/AuctionOut/index.jsx"],"names":["React","Component","axios","cookie","UploadPic","getWeb3","getEcommerceStore","residences","value","label","children","AuctionOut","constructor","props","state","username","load","web3","truffleContract","getBlockChainInfo","EcommerceStore","setState","currentContract","onFinish","values","console","log","post","deviceID","deviceName","ownerName","then","response","data","status","success","deviceArray","remove","path","save","warning","onFinishFailed","errorInfo","handleChange","componentDidMount","render","display","justifyContent","width","remember","margin","marginTop","required","message","type","offset","span"],"mappings":"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EAAC,YADT;AAEI,YAAA,KAAK,EAAE,CACH;AACI6C,cAAAA,QAAQ,EAAE,IADd;AAEIC,cAAAA,OAAO,EAAE;AAFb,aADG,CAFX;AAAA,mCASI;AAAO,cAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,kBApCJ,eAgDI,cAAM,IAAN;AACI,YAAA,UAAU,EAAE;AACRE,cAAAA,MAAM,EAAE,EADA;AAERC,cAAAA,IAAI,EAAE;AAFE,aADhB;AAAA,mCAMI;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,kBAhDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiEH;;AAxI8B;;AA2InC,eAAe7C,UAAf,C,CAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies'\n// import EditDeviceModal from \"../../EditDeviceModal\";\nimport { message, Card} from 'antd';\nimport {\n    Form,\n    Input,\n    InputNumber,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    AutoComplete,\n  } from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\nimport UploadPic from '../../../components/UploadPic';\n\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\n\n\nconst residences = [\n    {\n      value: 'zhejiang',\n      label: 'Zhejiang',\n      children: [\n        {\n          value: 'hangzhou',\n          label: 'Hangzhou',\n          children: [\n            {\n              value: 'xihu',\n              label: 'West Lake',\n            },\n          ],\n        },\n      ],\n    },\n    {\n      value: 'jiangsu',\n      label: 'Jiangsu',\n      children: [\n        {\n          value: 'nanjing',\n          label: 'Nanjing',\n          children: [\n            {\n              value: 'zhonghuamen',\n              label: 'Zhong Hua Men',\n            },\n          ],\n        },\n      ],\n    },\n  ];\n\n\n//从数据库拿商品信息\nclass AuctionOut extends Component {\n\n    state = {\n        username:cookie.load('username'),\n        web3 : null,\n        truffleContract : null\n    }\n\n    constructor (props) {\n        super(props);\n    }\n\n    getBlockChainInfo = async() => {\n        const web3 = await getWeb3();\n        const EcommerceStore = await getEcommerceStore(web3);\n        this.setState({\n            web3: web3,\n            currentContract:EcommerceStore\n        });\n    }\n\n    componentDidMount () {\n        console.log(\"生成AuctionOut模块\");\n        if(this.getBlockChainInfo()){\n            console.log(\"成功获得合约信息\");\n        }else{\n            console.log(\"获得合约信息失败\");\n        }\n    }\n\n    onFinish = (values) => {\n        console.log('Success:', values);\n        //ProductName\n\n\n        axios.post('/createDevice', {\n            deviceID:values.deviceID,\n            deviceName:values.deviceName,\n            ownerName:cookie.load('username')\n        }).then(response => {\n            const data = response.data;\n            if(data.status === \"success\"){\n                message.success(\"设备创建成功\", 2);\n                let deviceArray = cookie.load('deviceArray');\n                cookie.remove('deviceArray', {path:'/'});\n                deviceArray = [...deviceArray, values.deviceID];\n                cookie.save('deviceArray', deviceArray, {path:'/'});\n\n            }\n            else if(data.status === \"duplicated\"){\n                message.warning(\"该设备已被绑定\", 2)\n            }\n            else{\n                message.warning(\"创建设备失败\", 2)\n            }\n        })\n\n    }\n    onFinishFailed = (errorInfo) => {\n        message.warning(\"请正确填写表单！\",2)\n    }\n\n\n    //选择器的值改变时\n    handleChange = (value) => {\n        console.log(`selected ${value}`);\n      }\n\n\n    \n    render () {\n        return (\n            <div style={{display:'flex', justifyContent:'center'}}>\n            <Card title=\"上架拍卖商品\" bordered={false} style={{ width: '70%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n                <Form\n                    initialValues={{\n                        remember: true,\n                    }}\n                    onFinish={this.onFinish}\n                    onFinishFailed={this.onFinishFailed}\n                    style={{margin:\"auto\", width:\"50%\", marginTop:\"15px\"}}\n                >\n                    <Form.Item\n                        name=\"ProductName\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '请输入商品名称',\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"商品名称\"/>\n                    </Form.Item>\n\n                    \n                    <Form.Item\n                        name=\"residence\"\n                        label=\"Habitual Residence\"\n                        rules={[\n                                {\n                                    type: 'array',\n                                    required: true,\n                                    message: 'Please select your habitual residence!',\n                                },\n                            ]}\n                    >\n                        <Cascader options={residences} />\n                    </Form.Item>\n                \n\n                    <Form.Item\n                        name=\"deviceName\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '请输入设备名称！',\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"设备名称\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        wrapperCol={{\n                            offset: 10,\n                            span: 16,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            创建设备\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n        );\n    }\n}\n\nexport default AuctionOut;\n\n\n\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\n// class CreateDevice extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n\n//         \n//         );\n//     }\n// }\n\n// export default CreateDevice;\n\n\n\n\n// const Shoppi1ng = [\n//     {\n//         title: '消息ID',\n//         dataIndex: 'messageID',\n//         key: 'messageID',\n//     },\n//     {\n//         title: '发送位置',\n//         dataIndex: 'location',\n//         key: 'location'\n//     },\n//     {\n//         title: '消息类型',\n//         key: 'messageType',\n//         dataIndex: 'messageType',\n//         render: tag => {\n//             if(tag === 0) return <Tag color={'green'} key={tag}>正常消息</Tag>\n//             if(tag === 1) return <Tag color={'red'} key={tag}>告警消息</Tag>\n//             if(tag === 2) return <Tag color={'blue'} key={tag}>设备上线</Tag>\n//             if(tag === 3) return <Tag color={'yellow'} key={tag}>设备离线</Tag>\n\n//         }\n//     },\n//     {\n//         title: '消息内容',\n//         dataIndex: 'messageContent',\n//         key: 'messageContent',\n//     }\n\n// ]\n\n// class EditDevice extends Component {\n\n//     state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n\n//     deviceColumns = [\n//         {\n//             title: '设备ID',\n//             dataIndex: 'deviceID',\n//             key: 'deviceID',\n//         },\n//         {\n//             title: '设备名称',\n//             dataIndex: 'deviceName',\n//             key: 'deviceName',\n//         },\n//         {\n//             title: '拥有者ID',\n//             dataIndex: 'ownerName',\n//             key: 'ownerName',\n//         },\n//         {\n//             title: '设备状态',\n//             key: 'deviceStatus',\n//             dataIndex: 'deviceStatus',\n//             render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n//         },\n//         // {\n//         //     title: '操作',\n//         //     key: 'edit',\n//         //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n//         //                                 path={this.state.path}/>,\n//         // }\n//     ];\n\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n\n//     }\n\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n\n//     render () {\n//         const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n//         const {deviceName, isLoading} = this.state;\n//         const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n//         const messageArray = this.state.deviceMessage;\n//         return (\n//             <div>\n//                 <Descriptions\n//                     title=\"设备信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                 />\n//                 {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n//                 }\n\n//                 <Descriptions\n//                     title=\"消息信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                     style={{marginTop:'50px'}}\n//                 />\n//                 {/* {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n//                 } */}\n\n//             </div>\n//         );\n//     }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\n// class AuctionOut extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n\n// export default AuctionOut;"]},"metadata":{},"sourceType":"module"}