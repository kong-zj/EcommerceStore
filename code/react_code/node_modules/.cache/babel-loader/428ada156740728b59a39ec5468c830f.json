{"ast":null,"code":"/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @file ENS.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\n\nvar config = require('./config');\n\nvar Registry = require('./contracts/Registry');\n\nvar ResolverMethodHandler = require('./lib/ResolverMethodHandler');\n/**\n * Constructs a new instance of ENS\n *\n * @method ENS\n * @param {Object} eth\n * @constructor\n */\n\n\nfunction ENS(eth) {\n  this.eth = eth;\n}\n\nObject.defineProperty(ENS.prototype, 'registry', {\n  get: function () {\n    return new Registry(this);\n  },\n  enumerable: true\n});\nObject.defineProperty(ENS.prototype, 'resolverMethodHandler', {\n  get: function () {\n    return new ResolverMethodHandler(this.registry);\n  },\n  enumerable: true\n});\n/**\n * @param {string} name\n * @returns {Promise<Contract>}\n */\n\nENS.prototype.resolver = function (name) {\n  return this.registry.resolver(name);\n};\n/**\n * Returns the address record associated with a name.\n *\n * @method getAddress\n * @param {string} name\n * @param {function} callback\n * @return {eventifiedPromise}\n */\n\n\nENS.prototype.getAddress = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\n};\n/**\n * Sets a new address\n *\n * @method setAddress\n * @param {string} name\n * @param {string} address\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nENS.prototype.setAddress = function (name, address, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(sendOptions, callback);\n};\n/**\n * Returns the public key\n *\n * @method getPubkey\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nENS.prototype.getPubkey = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'pubkey', [], callback).call(callback);\n};\n/**\n * Set the new public key\n *\n * @method setPubkey\n * @param {string} name\n * @param {string} x\n * @param {string} y\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nENS.prototype.setPubkey = function (name, x, y, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(sendOptions, callback);\n};\n/**\n * Returns the content\n *\n * @method getContent\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nENS.prototype.getContent = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'content', []).call(callback);\n};\n/**\n * Set the content\n *\n * @method setContent\n * @param {string} name\n * @param {string} hash\n * @param {function} callback\n * @param {Object} sendOptions\n * @returns {eventifiedPromise}\n */\n\n\nENS.prototype.setContent = function (name, hash, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(sendOptions, callback);\n};\n/**\n * Get the multihash\n *\n * @method getMultihash\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nENS.prototype.getMultihash = function (name, callback) {\n  return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\n};\n/**\n * Set the multihash\n *\n * @method setMultihash\n * @param {string} name\n * @param {string} hash\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\n\n\nENS.prototype.setMultihash = function (name, hash, sendOptions, callback) {\n  return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(sendOptions, callback);\n};\n/**\n * Checks if the current used network is synced and looks for ENS support there.\n * Throws an error if not.\n *\n * @returns {Promise<Block>}\n */\n\n\nENS.prototype.checkNetwork = function () {\n  var self = this;\n  return self.eth.getBlock('latest').then(function (block) {\n    var headAge = new Date() / 1000 - block.timestamp;\n\n    if (headAge > 3600) {\n      throw new Error(\"Network not synced; last block was \" + headAge + \" seconds ago\");\n    }\n\n    return self.eth.net.getNetworkType();\n  }).then(function (networkType) {\n    var addr = config.addresses[networkType];\n\n    if (typeof addr === 'undefined') {\n      throw new Error(\"ENS is not supported on network \" + networkType);\n    }\n\n    return addr;\n  });\n};\n\nmodule.exports = ENS;","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/node_modules/web3-eth-ens/src/ENS.js"],"names":["config","require","Registry","ResolverMethodHandler","ENS","eth","Object","defineProperty","prototype","get","enumerable","registry","resolver","name","getAddress","callback","resolverMethodHandler","method","call","setAddress","address","sendOptions","send","getPubkey","setPubkey","x","y","getContent","setContent","hash","getMultihash","setMultihash","checkNetwork","self","getBlock","then","block","headAge","Date","timestamp","Error","net","getNetworkType","networkType","addr","addresses","module","exports"],"mappings":"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","sourcesContent":["/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file ENS.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\n\"use strict\";\n\nvar config = require('./config');\nvar Registry = require('./contracts/Registry');\nvar ResolverMethodHandler = require('./lib/ResolverMethodHandler');\n\n/**\n * Constructs a new instance of ENS\n *\n * @method ENS\n * @param {Object} eth\n * @constructor\n */\nfunction ENS(eth) {\n    this.eth = eth;\n}\n\nObject.defineProperty(ENS.prototype, 'registry', {\n    get: function () {\n        return new Registry(this);\n    },\n    enumerable: true\n});\n\nObject.defineProperty(ENS.prototype, 'resolverMethodHandler', {\n    get: function () {\n        return new ResolverMethodHandler(this.registry);\n    },\n    enumerable: true\n});\n\n/**\n * @param {string} name\n * @returns {Promise<Contract>}\n */\nENS.prototype.resolver = function (name) {\n    return this.registry.resolver(name);\n};\n\n/**\n * Returns the address record associated with a name.\n *\n * @method getAddress\n * @param {string} name\n * @param {function} callback\n * @return {eventifiedPromise}\n */\nENS.prototype.getAddress = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'addr', []).call(callback);\n};\n\n/**\n * Sets a new address\n *\n * @method setAddress\n * @param {string} name\n * @param {string} address\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setAddress = function (name, address, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'setAddr', [address]).send(sendOptions, callback);\n};\n\n/**\n * Returns the public key\n *\n * @method getPubkey\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getPubkey = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'pubkey', [], callback).call(callback);\n};\n\n/**\n * Set the new public key\n *\n * @method setPubkey\n * @param {string} name\n * @param {string} x\n * @param {string} y\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setPubkey = function (name, x, y, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'setPubkey', [x, y]).send(sendOptions, callback);\n};\n\n/**\n * Returns the content\n *\n * @method getContent\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getContent = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'content', []).call(callback);\n};\n\n/**\n * Set the content\n *\n * @method setContent\n * @param {string} name\n * @param {string} hash\n * @param {function} callback\n * @param {Object} sendOptions\n * @returns {eventifiedPromise}\n */\nENS.prototype.setContent = function (name, hash, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'setContent', [hash]).send(sendOptions, callback);\n};\n\n/**\n * Get the multihash\n *\n * @method getMultihash\n * @param {string} name\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.getMultihash = function (name, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', []).call(callback);\n};\n\n/**\n * Set the multihash\n *\n * @method setMultihash\n * @param {string} name\n * @param {string} hash\n * @param {Object} sendOptions\n * @param {function} callback\n * @returns {eventifiedPromise}\n */\nENS.prototype.setMultihash = function (name, hash, sendOptions, callback) {\n    return this.resolverMethodHandler.method(name, 'multihash', [hash]).send(sendOptions, callback);\n};\n\n/**\n * Checks if the current used network is synced and looks for ENS support there.\n * Throws an error if not.\n *\n * @returns {Promise<Block>}\n */\nENS.prototype.checkNetwork = function () {\n    var self = this;\n    return self.eth.getBlock('latest').then(function (block) {\n        var headAge = new Date() / 1000 - block.timestamp;\n        if (headAge > 3600) {\n            throw new Error(\"Network not synced; last block was \" + headAge + \" seconds ago\");\n        }\n        return self.eth.net.getNetworkType();\n    }).then(function (networkType) {\n        var addr = config.addresses[networkType];\n        if (typeof addr === 'undefined') {\n            throw new Error(\"ENS is not supported on network \" + networkType);\n        }\n\n        return addr;\n    });\n};\n\nmodule.exports = ENS;\n"]},"metadata":{},"sourceType":"script"}