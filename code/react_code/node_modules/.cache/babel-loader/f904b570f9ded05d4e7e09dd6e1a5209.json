{"ast":null,"code":"import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/slider/style\";\nimport _Slider from \"antd/es/slider\";\nimport \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/space/style\";\nimport _Space from \"antd/es/space\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/kzj/project/finalize/final/code/react_code/src/pages/Market/ProductInfo/index.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api'; // import EditDeviceModal from \"../../EditDeviceModal\";\n\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'; // import './index.css';\n\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons'; //接入合约\n\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\"; //静态资源\n\nimport ProductClass from '../../../static/ProductClass'; //ipfs配置文件\n\nimport ipfsAddAndCatConfig from '../../../config/ipfsAddAndCat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = _Select;\nconst {\n  RangePicker\n} = _DatePicker;\n\nconst IconText = ({\n  icon,\n  text\n}) => /*#__PURE__*/_jsxDEV(_Space, {\n  children: [/*#__PURE__*/React.createElement(icon), text]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 5\n}, this); //ipfs实例\n\n\n_c = IconText;\nconst ipfs = ipfsAPI({\n  host: ipfsAddAndCatConfig.host,\n  port: ipfsAddAndCatConfig.port,\n  protocol: ipfsAddAndCatConfig.protocol\n});\n\nconst suffixSelector = /*#__PURE__*/_jsxDEV(_Form.Item, {\n  name: \"PriceUnit\",\n  noStyle: true,\n  children: /*#__PURE__*/_jsxDEV(_Select, {\n    style: {\n      width: 70\n    },\n    children: [/*#__PURE__*/_jsxDEV(Option, {\n      selected: \"selected\",\n      value: \"ETH\",\n      children: \"ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Option, {\n      value: \"wei\",\n      children: \"wei\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 5\n}, this);\n\nconst rangeConfig = {\n  rules: [{\n    type: 'array',\n    required: true,\n    message: '请选择时间'\n  }]\n}; //向区块链写入商品信息\n\nclass AuctionOut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.state = {\n      username: cookie.load('username'),\n      web3: null,\n      truffleContract: null,\n      //读取上传的图片\n      picReader: null,\n      dataArray: []\n    };\n\n    this.normFile = e => {\n      console.log(\"上传图片的 getValueFromEvent 调用\");\n      console.log(e);\n      let reader = null; //如果列表里至少有一张图片的话\n\n      if (e.fileList[0] !== undefined) {\n        //这里只拿了第一张图片，用下标索引可以拿到更多张\n        const file = e.fileList[0].originFileObj;\n        reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n        console.log(\"图片读取为 : \");\n        console.log(reader);\n      } else {\n        //清空，防止上传已经取消的\n        reader = null;\n        console.log(\"图片列表为空\");\n      } //在方法的最外层使用 this.setState 更新值，不然组件会一直处于uploading状态\n\n\n      this.setState({\n        picReader: reader\n      });\n      console.log(\"this.state.picReader : \");\n      console.log(this.state.picReader);\n    };\n\n    this.uploadFile = e => {\n      _message.info(\"正在上传图片\", 2);\n\n      console.log(\"上传图片的 customRequest 调用\");\n      console.log(e); //判断是否上传完成\n\n      if (this.state.picReader !== null) {\n        //告诉组件成功了，不要一直 uploading\n        e.onSuccess(200, this.state.picReader);\n      }\n    };\n\n    this.getBlockChainInfo = async () => {\n      try {\n        const web3 = await getWeb3();\n        const EcommerceStore = await getEcommerceStore(web3);\n        this.setState({\n          web3: web3,\n          truffleContract: EcommerceStore\n        });\n\n        _message.success(\"接入智能合约成功\", 2);\n\n        console.log(\"AuctionOut 的 web3 : \");\n        console.dir(web3);\n        console.log(\"AuctionOut 的 EcommerceStore : \");\n        console.dir(this.state.truffleContract);\n        return true;\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`[ERROR]接入智能合约失败.`);\n        console.error(error);\n        return false;\n      }\n    };\n\n    this.onFinish = values => {\n      //传过来的数据为\n      //values 已经是json格式了\n      //ProductName (String)\n      //ProductDesc (String)\n      //this.state.picReader \n      //ProductRevealTime (int)\n      //ProductCondition (String)\n      //BeginAndEndTime (长度为2的Moment数组)\n      //ProductClass (字符串数组)\n      //StartPrice (int)\n      //PriceUnit (String)\n      //UploadPic用不到，从字典中删掉\n      //优化传参大小\n      delete values.UploadPic; //把开始时间和结束时间拆分开，BeginAndEndTime 拆为 AuctionStartTime 和 AuctionEndTime\n\n      let AuctionStartTime = values.BeginAndEndTime[0];\n      let AuctionEndTime = values.BeginAndEndTime[1];\n      values.AuctionStartTime = AuctionStartTime;\n      values.AuctionEndTime = AuctionEndTime;\n      delete values.BeginAndEndTime; // console.log('onFinish 的 values : ', values);\n\n      let decodedParams = {};\n      Object.keys(values).forEach(key => {\n        decodedParams[key] = decodeURIComponent(decodeURI(values[key]));\n      }); // console.log('onFinish 的 values 解析为 decodedParams : ', decodedParams);\n      //decodedParams 进一步格式化\n      //参数全都变成String\n\n      _message.info(\"正在提交拍卖商品数据\", 2);\n\n      try {\n        this.saveProduct(this.state.picReader, decodedParams);\n      } catch (err) {\n        // message.error(\"向链上提交商品数据出错\",2);\n        return;\n      } // message.success(\"向链上提交商品数据成功\",2);\n\n    };\n\n    this.onFinishFailed = errorInfo => {\n      _message.warning(\"请正确填写商品信息\", 2);\n    };\n\n    this.saveProduct = (reader, decodedParams) => {\n      //注意这里的各个函数里的this，已经不再是最外层的this，如果在内层用this，就调用不到外层的函数\n      //想办法用that将外层的this传进去\n      let that = this;\n      let imageId, descId;\n      this.saveImageOnIpfs(reader).then(function (id) {\n        imageId = id;\n        that.saveTextBlobOnIpfs(decodedParams[\"ProductDesc\"]).then(function (id) {\n          descId = id; //ProductDesc用不到，从字典中删掉\n          //优化传参大小\n\n          delete decodedParams.ProductDesc; //只传过去要上区块链的\n\n          that.saveProductToBlockchain(decodedParams, imageId, descId);\n        });\n      });\n    };\n\n    this.saveImageOnIpfs = reader => {\n      return new Promise((resolve, reject) => {\n        //有图片传过来\n        if (reader) {\n          let buffer = Buffer.from(reader.result);\n          ipfs.add(buffer).then(res => {\n            console.log(\"ImgRes: \", res);\n\n            _message.success(\"图片保存成功\", 2);\n\n            resolve(res[0].hash);\n          }).catch(err => {\n            console.error(err);\n\n            _message.error(\"图片保存失败\", 2);\n\n            reject(err);\n          }); //没传图片\n        } else {\n          _message.info(\"未上传商品图片\");\n\n          resolve(\"\");\n        }\n      });\n    };\n\n    this.saveTextBlobOnIpfs = blob => {\n      return new Promise((resolve, reject) => {\n        let buffer = Buffer.from(blob, 'utf-8');\n        ipfs.add(buffer).then(res => {\n          console.log(\"TextRes: \", res);\n\n          _message.success(\"简介文字保存成功\", 2);\n\n          resolve(res[0].hash);\n        }).catch(err => {\n          console.error(err);\n\n          _message.error(\"简介文字保存失败\", 2);\n\n          reject(err);\n        });\n      });\n    };\n\n    this.saveProductToBlockchain = (params, imageId, descId) => {\n      // console.log(\"params in save product: \", params);\n      if (this.state.truffleContract === null || this.state.web3 === null) {\n        _message.error(\"连接合约失败\", 2);\n\n        console.log(\"[ERROR]web3 或者 truffleContract 为 null\");\n        return;\n      } //处理时间\n\n\n      let auctionStartTime = Date.parse(params[\"AuctionStartTime\"]) / 1000;\n      let auctionEndTime = Date.parse(params[\"AuctionEndTime\"]) / 1000; //处理价格，把单位转为 wei\n\n      let startPrice = -1;\n\n      if (params.PriceUnit === \"ETH\") {\n        startPrice = this.state.web3.utils.toWei(params.StartPrice, 'ether');\n      } else if (params.PriceUnit === \"wei\") {\n        startPrice = parseInt(params.StartPrice);\n      } //处理新旧状态，从String变成int\n\n\n      let productCondition = parseInt(params.ProductCondition); //处理揭示报价时间，从String变成int\n\n      let productRevealTime = parseInt(params.ProductRevealTime); //传来的数据已格式化为\n      //params.ProductName (String)\n      //descId (String)\n      //imageId (String)\n      //auctionStartTime (int)\n      //auctionEndTime (int)\n      //productCondition (int)\n      //params.ProductClass (String)\n      //startPrice (int)\n      //productRevealTime (int)\n      //这是先暂时不传入productRevealTime\n\n      console.log(\"最终上传区块链的数据为 : \");\n      console.log(params.ProductName);\n      console.log(descId);\n      console.log(imageId);\n      console.log(params.ProductClass);\n      console.log(startPrice);\n      console.log(auctionStartTime);\n      console.log(auctionEndTime);\n      console.log(productCondition);\n      console.log(productRevealTime);\n      console.log(\"合约为 : \");\n      console.dir(this.state.truffleContract); //注意回调函数中的this，和外界的this不同，如果向使用外界的this，要赋值成that传过去\n      //注意要使用async，确保先拿到地址，用await关键字确保运行的先后顺序，再用这个地址调用合约方法\n\n      let that = this;\n      console.dir(this.state.truffleContract.deployed());\n      this.state.truffleContract.deployed().then(async i => {\n        console.log(\"进入 this.state.truffleContract.deployed() 的回调函数\"); //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n        //即时获取当前地址，用该地址发交易\n\n        let currentAccount = await that.state.web3.eth.getAccounts();\n\n        _message.info(\"交易发起地址为: \" + currentAccount, 2);\n\n        console.log(\"交易发起地址为: \" + currentAccount);\n\n        try {\n          //合约中实现事件event NewProduct监听\n          await i.addProductToStore(params.ProductName, params.ProductClass, imageId, descId, auctionStartTime, auctionEndTime, startPrice, productCondition, {\n            from: currentAccount.toString(),\n            gas: 440000\n          }).then(function (f) {\n            //注意这里调用合约方法使用的地址，必须是字符串形式，要用 toString() 转化为字符串\n            _message.success(\"向链上提交商品数据成功\", 2);\n\n            console.log(\"成功调用合约的addProductToStore方法\");\n            console.log(f);\n          });\n        } catch (err) {\n          _message.error(\"向链上提交商品数据失败\", 2);\n\n          console.log(\"调用合约的addProductToStore方法失败 \" + err);\n        }\n      });\n    };\n  } //当文件选择变化时\n  //getValueFromEvent调用它\n\n\n  //componentWillMount在render之前运行\n  //componentDidMount 在render之后运行\n  componentDidMount() {\n    // componentWillMount () {\n    console.log(\"生成AuctionOut模块\");\n\n    if (this.getBlockChainInfo()) {\n      //注意，这里打印 this.state.truffleContract 为 null，因为异步执行\n      // console.log(\"成功获得合约信息, this.state.truffleContract : \");\n      // console.dir(this.state.truffleContract);\n      console.log(\"获得合约信息成功\");\n    } else {\n      console.log(\"获得合约信息失败\");\n    }\n  } //点击提交按钮，表单可以提交时\n\n\n  render() {\n    if (false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(_Card, {\n          title: \"\\u4E0A\\u67B6\\u5F85\\u62CD\\u5356\\u5546\\u54C1\",\n          bordered: false,\n          style: {\n            width: '80%'\n          },\n          headStyle: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(_Form, {\n            initialValues: {\n              remember: true\n            },\n            onFinish: this.onFinish,\n            onFinishFailed: this.onFinishFailed,\n            style: {\n              margin: \"auto\",\n              width: \"60%\",\n              marginTop: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"ProductName\",\n              rules: [{\n                required: true,\n                message: '请输入商品名称'\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Input, {\n                placeholder: \"\\u5546\\u54C1\\u540D\\u79F0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"ProductDesc\",\n              label: \"\\u5546\\u54C1\\u4ECB\\u7ECD\",\n              rules: [{\n                required: true,\n                message: '请输入商品介绍'\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Input.TextArea, {\n                showCount: true,\n                maxLength: 500\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"UploadPic\",\n              label: \"\\u4E0A\\u4F20\\u56FE\\u7247\",\n              valuePropName: \"fileList\",\n              getValueFromEvent: this.normFile,\n              extra: \"\",\n              children: /*#__PURE__*/_jsxDEV(_Upload, {\n                name: \"logo\",\n                customRequest: this.uploadFile,\n                listType: \"picture\",\n                children: /*#__PURE__*/_jsxDEV(_Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 47\n                  }, this),\n                  children: \"\\u70B9\\u51FB\\u4E0A\\u4F20\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"ProductClass\",\n              label: \"\\u5546\\u54C1\\u79CD\\u7C7B\",\n              rules: [{\n                type: 'array',\n                required: true,\n                message: '请选择商品种类'\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Cascader, {\n                placeholder: \"\\u8BF7\\u9009\\u62E9\",\n                options: ProductClass\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"StartPrice\",\n              label: \"\\u8D77\\u62CD\\u4EF7\\u683C\",\n              rules: [{\n                required: true,\n                message: '请输入起拍价格'\n              }],\n              children: /*#__PURE__*/_jsxDEV(_InputNumber, {\n                addonAfter: suffixSelector,\n                style: {\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"BeginAndEndTime\",\n              label: \"\\u8D77\\u6B62\\u65F6\\u95F4\",\n              ...rangeConfig,\n              children: /*#__PURE__*/_jsxDEV(RangePicker, {\n                showTime: true,\n                format: \"YYYY-MM-DD HH:mm:ss\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"ProductCondition\",\n              label: \"\\u4EA7\\u54C1\\u72B6\\u51B5\",\n              rules: [{\n                required: true,\n                message: '请选择状况'\n              }],\n              children: /*#__PURE__*/_jsxDEV(_Select, {\n                placeholder: \"\\u8BF7\\u9009\\u62E9\",\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"0\",\n                  children: \"\\u5168\\u65B0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"1\",\n                  children: \"\\u4E8C\\u624B\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              name: \"ProductRevealTime\",\n              label: \"\\u63ED\\u793A\\u62A5\\u4EF7\\u6301\\u7EED\\u65F6\\u95F4\",\n              children: /*#__PURE__*/_jsxDEV(_Slider, {\n                marks: {\n                  0: '0',\n                  20: '20',\n                  40: '40',\n                  60: '60',\n                  80: '80',\n                  100: '100 分钟'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(_Form.Item, {\n              wrapperCol: {\n                offset: 10,\n                span: 16\n              },\n              children: /*#__PURE__*/_jsxDEV(_Button, {\n                disabled: this.state.truffleContract === null || this.state.web3 === null,\n                type: \"primary\",\n                htmlType: \"submit\",\n                children: \"\\u53D1\\u5E03\\u5546\\u54C1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (true) {\n      return /*#__PURE__*/_jsxDEV(_List, {\n        itemLayout: \"vertical\",\n        size: \"large\",\n        pagination: {\n          onChange: page => {\n            console.log(page);\n          },\n          pageSize: 5\n        },\n        dataSource: this.state.dataArray,\n        footer: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u5171 \", this.state.dataArray.length, \" \\u4E2A\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this),\n        renderItem: item => /*#__PURE__*/_jsxDEV(_List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(IconText, {\n            icon: StarOutlined,\n            text: item.price\n          }, \"list-vertical-star-o\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconText, {\n            icon: LikeOutlined,\n            text: item.productCondition\n          }, \"list-vertical-like-o\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconText, {\n            icon: MessageOutlined,\n            text: item.processTime\n          }, \"list-vertical-message\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this)],\n          extra: /*#__PURE__*/_jsxDEV(\"img\", {\n            width: 130,\n            height: 130,\n            alt: \"\\u5546\\u54C1\\u56FE\\u7247\",\n            src: item.imageUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(_List.Item.Meta, {\n            // avatar={<Avatar src={item.avatar} />}\n            title: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.href,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 22\n            }, this),\n            description: item.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), item.descString.length > 150 ? item.descString.slice(0, 150) + \"......\" : item.descString]\n        }, item.index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default AuctionOut; // class EditDevice extends Component {\n//     state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n//     deviceColumns = [\n//         {\n//             title: '设备ID',\n//             dataIndex: 'deviceID',\n//             key: 'deviceID',\n//         },\n//         {\n//             title: '设备名称',\n//             dataIndex: 'deviceName',\n//             key: 'deviceName',\n//         },\n//         {\n//             title: '拥有者ID',\n//             dataIndex: 'ownerName',\n//             key: 'ownerName',\n//         },\n//         {\n//             title: '设备状态',\n//             key: 'deviceStatus',\n//             dataIndex: 'deviceStatus',\n//             render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n//         },\n//         // {\n//         //     title: '操作',\n//         //     key: 'edit',\n//         //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n//         //                                 path={this.state.path}/>,\n//         // }\n//     ];\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n//     }\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n//     render () {\n//         const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n//         const {deviceName, isLoading} = this.state;\n//         const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n//         const messageArray = this.state.deviceMessage;\n//         return (\n//             <div>\n//                 <Descriptions\n//                     title=\"设备信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                 />\n//                 {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n//                 }\n//                 <Descriptions\n//                     title=\"消息信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                     style={{marginTop:'50px'}}\n//                 />\n//                 {/* {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n//                 } */}\n//             </div>\n//         );\n//     }\n// }\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n// class AuctionOut extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n// export default AuctionOut;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconText\");","map":{"version":3,"sources":["/home/kzj/project/finalize/final/code/react_code/src/pages/Market/ProductInfo/index.jsx"],"names":["React","Component","axios","cookie","ipfsAPI","ReactDOM","MessageOutlined","LikeOutlined","StarOutlined","UploadOutlined","InboxOutlined","getWeb3","getEcommerceStore","ProductClass","ipfsAddAndCatConfig","Option","RangePicker","IconText","icon","text","createElement","ipfs","host","port","protocol","suffixSelector","width","rangeConfig","rules","type","required","message","AuctionOut","constructor","props","state","username","load","web3","truffleContract","picReader","dataArray","normFile","e","console","log","reader","fileList","undefined","file","originFileObj","window","FileReader","readAsArrayBuffer","setState","uploadFile","info","onSuccess","getBlockChainInfo","EcommerceStore","success","dir","error","alert","onFinish","values","UploadPic","AuctionStartTime","BeginAndEndTime","AuctionEndTime","decodedParams","Object","keys","forEach","key","decodeURIComponent","decodeURI","saveProduct","err","onFinishFailed","errorInfo","warning","that","imageId","descId","saveImageOnIpfs","then","id","saveTextBlobOnIpfs","ProductDesc","saveProductToBlockchain","Promise","resolve","reject","buffer","Buffer","from","result","add","res","hash","catch","blob","params","auctionStartTime","Date","parse","auctionEndTime","startPrice","PriceUnit","utils","toWei","StartPrice","parseInt","productCondition","ProductCondition","productRevealTime","ProductRevealTime","ProductName","deployed","i","currentAccount","eth","getAccounts","addProductToStore","toString","gas","f","componentDidMount","render","display","justifyContent","remember","margin","marginTop","offset","span","onChange","page","pageSize","length","item","price","processTime","imageUrl","href","name","category","descString","slice","index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,OAAP,MAAoB,UAApB,C,CACA;;AAiBA;AACA;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP,C,CACA;;AAEA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,YAAxC,QAA4D,mBAA5D;AAGA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,mBAA9C,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,8BAAzB,C,CAEA;;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;;AAEA,MAAM;AAAEC,EAAAA;AAAF,WAAN;AACA,MAAM;AAAEC,EAAAA;AAAF,eAAN;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,kBACb;AAAA,0BACGnB,KAAK,CAACoB,aAAN,CAAoBF,IAApB,CADH,EAEGC,IAFH;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,C,CAOA;;;KAPMF,Q;AAQN,MAAMI,IAAI,GAAGjB,OAAO,CAAC;AAAEkB,EAAAA,IAAI,EAAER,mBAAmB,CAACQ,IAA5B;AAAkCC,EAAAA,IAAI,EAAET,mBAAmB,CAACS,IAA5D;AAAkEC,EAAAA,QAAQ,EAAEV,mBAAmB,CAACU;AAAhG,CAAD,CAApB;;AAGA,MAAMC,cAAc,gBAChB,cAAM,IAAN;AAAW,EAAA,IAAI,EAAC,WAAhB;AAA4B,EAAA,OAAO,MAAnC;AAAA,yBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE;AADF,KADT;AAAA,4BAKE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADJ;;AAaE,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,QAAQ,EAAE,IAFZ;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADK;AADW,CAApB,C,CAaF;;AACA,MAAMC,UAAN,SAAyB/B,SAAzB,CAAmC;AAe/BgC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AADgB,SAbpBC,KAaoB,GAbZ,EAaY;AAAA,SATpBA,KASoB,GATZ;AACJC,MAAAA,QAAQ,EAACjC,MAAM,CAACkC,IAAP,CAAY,UAAZ,CADL;AAEJC,MAAAA,IAAI,EAAG,IAFH;AAGJC,MAAAA,eAAe,EAAG,IAHd;AAIJ;AACAC,MAAAA,SAAS,EAAG,IALR;AAMJC,MAAAA,SAAS,EAAG;AANR,KASY;;AAAA,SAMpBC,QANoB,GAMRC,CAAD,IAAO;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,UAAIG,MAAM,GAAG,IAAb,CAHc,CAId;;AACA,UAAGH,CAAC,CAACI,QAAF,CAAW,CAAX,MAAkBC,SAArB,EAA+B;AAC3B;AACA,cAAMC,IAAI,GAAGN,CAAC,CAACI,QAAF,CAAW,CAAX,EAAcG,aAA3B;AACAJ,QAAAA,MAAM,GAAG,IAAIK,MAAM,CAACC,UAAX,EAAT;AACAN,QAAAA,MAAM,CAACO,iBAAP,CAAyBJ,IAAzB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACH,OAPD,MAOK;AACD;AACAA,QAAAA,MAAM,GAAG,IAAT;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,OAhBa,CAiBd;;;AACA,WAAKS,QAAL,CAAc;AACVd,QAAAA,SAAS,EAAEM;AADD,OAAd;AAGAF,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWK,SAAvB;AACH,KA7BmB;;AAAA,SAiCpBe,UAjCoB,GAiCNZ,CAAD,IAAO;AAChB,eAAQa,IAAR,CAAa,QAAb,EAAuB,CAAvB;;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ,EAHgB,CAIhB;;AACA,UAAG,KAAKR,KAAL,CAAWK,SAAX,KAAyB,IAA5B,EAAiC;AAC7B;AACAG,QAAAA,CAAC,CAACc,SAAF,CAAY,GAAZ,EAAgB,KAAKtB,KAAL,CAAWK,SAA3B;AACH;AACF,KA1CiB;;AAAA,SA8CpBkB,iBA9CoB,GA8CA,YAAW;AAC3B,UAAG;AACC,cAAMpB,IAAI,GAAG,MAAM3B,OAAO,EAA1B;AACA,cAAMgD,cAAc,GAAG,MAAM/C,iBAAiB,CAAC0B,IAAD,CAA9C;AACA,aAAKgB,QAAL,CAAc;AACVhB,UAAAA,IAAI,EAAEA,IADI;AAEVC,UAAAA,eAAe,EAACoB;AAFN,SAAd;;AAIA,iBAAQC,OAAR,CAAgB,UAAhB,EAA4B,CAA5B;;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,QAAAA,OAAO,CAACiB,GAAR,CAAYvB,IAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAD,QAAAA,OAAO,CAACiB,GAAR,CAAY,KAAK1B,KAAL,CAAWI,eAAvB;AACA,eAAO,IAAP;AACH,OAbD,CAaC,OAAOuB,KAAP,EAAc;AACX;AACAC,QAAAA,KAAK,CACF,kBADE,CAAL;AAGAnB,QAAAA,OAAO,CAACkB,KAAR,CAAcA,KAAd;AACA,eAAO,KAAP;AACD;AAEN,KArEmB;;AAAA,SAuFpBE,QAvFoB,GAuFRC,MAAD,IAAY;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,aAAOA,MAAM,CAACC,SAAd,CAfmB,CAgBnB;;AACA,UAAIC,gBAAgB,GAAGF,MAAM,CAACG,eAAP,CAAuB,CAAvB,CAAvB;AACA,UAAIC,cAAc,GAAGJ,MAAM,CAACG,eAAP,CAAuB,CAAvB,CAArB;AACAH,MAAAA,MAAM,CAACE,gBAAP,GAA0BA,gBAA1B;AACAF,MAAAA,MAAM,CAACI,cAAP,GAAwBA,cAAxB;AACA,aAAOJ,MAAM,CAACG,eAAd,CArBmB,CAwBnB;;AAEA,UAAIE,aAAa,GAAG,EAApB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,OAApB,CAA4BC,GAAG,IAAI;AAC/BJ,QAAAA,aAAa,CAACI,GAAD,CAAb,GAAqBC,kBAAkB,CAACC,SAAS,CAACX,MAAM,CAACS,GAAD,CAAP,CAAV,CAAvC;AACH,OAFD,EA3BmB,CA8BnB;AAEA;AACA;;AAEA,eAAQlB,IAAR,CAAa,YAAb,EAA0B,CAA1B;;AACA,UAAG;AACC,aAAKqB,WAAL,CAAiB,KAAK1C,KAAL,CAAWK,SAA5B,EAAuC8B,aAAvC;AACH,OAFD,CAEC,OAAMQ,GAAN,EAAU;AACP;AACA;AACH,OAzCkB,CA0CnB;;AAEH,KAnImB;;AAAA,SAuIpBC,cAvIoB,GAuIFC,SAAD,IAAe;AAC5B,eAAQC,OAAR,CAAgB,WAAhB,EAA4B,CAA5B;AACH,KAzImB;;AAAA,SA6IpBJ,WA7IoB,GA6IN,CAAC/B,MAAD,EAASwB,aAAT,KAA2B;AACrC;AACA;AACA,UAAIY,IAAI,GAAG,IAAX;AACA,UAAIC,OAAJ,EAAaC,MAAb;AACA,WAAKC,eAAL,CAAqBvC,MAArB,EAA6BwC,IAA7B,CAAkC,UAASC,EAAT,EAAa;AAC3CJ,QAAAA,OAAO,GAAGI,EAAV;AACAL,QAAAA,IAAI,CAACM,kBAAL,CAAwBlB,aAAa,CAAC,aAAD,CAArC,EAAsDgB,IAAtD,CAA2D,UAASC,EAAT,EAAa;AACpEH,UAAAA,MAAM,GAAGG,EAAT,CADoE,CAEpE;AACA;;AACA,iBAAOjB,aAAa,CAACmB,WAArB,CAJoE,CAKpE;;AACAP,UAAAA,IAAI,CAACQ,uBAAL,CAA6BpB,aAA7B,EAA4Ca,OAA5C,EAAqDC,MAArD;AACH,SAPD;AAQH,OAVD;AAWH,KA7JmB;;AAAA,SAgKpBC,eAhKoB,GAgKDvC,MAAD,IAAY;AAC1B,aAAO,IAAI6C,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC;AACA,YAAG/C,MAAH,EAAU;AACN,cAAIgD,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYlD,MAAM,CAACmD,MAAnB,CAAb;AACI5E,UAAAA,IAAI,CAAC6E,GAAL,CAASJ,MAAT,EAAiBR,IAAjB,CAAsBa,GAAG,IAAI;AAC7BvD,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsD,GAAxB;;AACA,qBAAQvC,OAAR,CAAgB,QAAhB,EAAyB,CAAzB;;AACAgC,YAAAA,OAAO,CAACO,GAAG,CAAC,CAAD,CAAH,CAAOC,IAAR,CAAP;AACH,WAJG,EAIDC,KAJC,CAIKvB,GAAG,IAAI;AACZlC,YAAAA,OAAO,CAACkB,KAAR,CAAcgB,GAAd;;AACA,qBAAQhB,KAAR,CAAc,QAAd,EAAuB,CAAvB;;AACA+B,YAAAA,MAAM,CAACf,GAAD,CAAN;AACH,WARG,EAFE,CAWV;AACC,SAZD,MAYM;AACF,mBAAQtB,IAAR,CAAa,SAAb;;AACAoC,UAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AAGJ,OApBM,CAAP;AAqBH,KAtLmB;;AAAA,SAyLpBJ,kBAzLoB,GAyLEc,IAAD,IAAU;AAC3B,aAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,YAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYM,IAAZ,EAAkB,OAAlB,CAAb;AACAjF,QAAAA,IAAI,CAAC6E,GAAL,CAASJ,MAAT,EAAiBR,IAAjB,CAAsBa,GAAG,IAAI;AACzBvD,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBsD,GAAzB;;AACA,mBAAQvC,OAAR,CAAgB,UAAhB,EAA2B,CAA3B;;AACAgC,UAAAA,OAAO,CAACO,GAAG,CAAC,CAAD,CAAH,CAAOC,IAAR,CAAP;AACH,SAJD,EAIGC,KAJH,CAISvB,GAAG,IAAI;AACZlC,UAAAA,OAAO,CAACkB,KAAR,CAAcgB,GAAd;;AACA,mBAAQhB,KAAR,CAAc,UAAd,EAAyB,CAAzB;;AACA+B,UAAAA,MAAM,CAACf,GAAD,CAAN;AACH,SARD;AASH,OAXM,CAAP;AAYH,KAtMmB;;AAAA,SAyMpBY,uBAzMoB,GAyMM,CAACa,MAAD,EAASpB,OAAT,EAAkBC,MAAlB,KAA6B;AACnD;AAEA,UAAG,KAAKjD,KAAL,CAAWI,eAAX,KAA+B,IAA/B,IAAuC,KAAKJ,KAAL,CAAWG,IAAX,KAAoB,IAA9D,EAAmE;AAC/D,iBAAQwB,KAAR,CAAc,QAAd,EAAuB,CAAvB;;AACAlB,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACA;AACH,OAPkD,CASnD;;;AACA,UAAI2D,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,kBAAD,CAAjB,IAAyC,IAAhE;AACA,UAAII,cAAc,GAAGF,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,gBAAD,CAAjB,IAAuC,IAA5D,CAXmD,CAYnD;;AACA,UAAIK,UAAU,GAAG,CAAC,CAAlB;;AACA,UAAGL,MAAM,CAACM,SAAP,KAAqB,KAAxB,EAA8B;AAC1BD,QAAAA,UAAU,GAAG,KAAKzE,KAAL,CAAWG,IAAX,CAAgBwE,KAAhB,CAAsBC,KAAtB,CAA4BR,MAAM,CAACS,UAAnC,EAA+C,OAA/C,CAAb;AACH,OAFD,MAEM,IAAGT,MAAM,CAACM,SAAP,KAAqB,KAAxB,EAA8B;AAChCD,QAAAA,UAAU,GAAGK,QAAQ,CAACV,MAAM,CAACS,UAAR,CAArB;AACH,OAlBkD,CAmBnD;;;AACA,UAAIE,gBAAgB,GAAGD,QAAQ,CAACV,MAAM,CAACY,gBAAR,CAA/B,CApBmD,CAqBnD;;AACA,UAAIC,iBAAiB,GAAGH,QAAQ,CAACV,MAAM,CAACc,iBAAR,CAAhC,CAtBmD,CAwBnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEAzE,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY0D,MAAM,CAACe,WAAnB;AACA1E,MAAAA,OAAO,CAACC,GAAR,CAAYuC,MAAZ;AACAxC,MAAAA,OAAO,CAACC,GAAR,CAAYsC,OAAZ;AACAvC,MAAAA,OAAO,CAACC,GAAR,CAAY0D,MAAM,CAAC1F,YAAnB;AACA+B,MAAAA,OAAO,CAACC,GAAR,CAAY+D,UAAZ;AACAhE,MAAAA,OAAO,CAACC,GAAR,CAAY2D,gBAAZ;AACA5D,MAAAA,OAAO,CAACC,GAAR,CAAY8D,cAAZ;AACA/D,MAAAA,OAAO,CAACC,GAAR,CAAYqE,gBAAZ;AACAtE,MAAAA,OAAO,CAACC,GAAR,CAAYuE,iBAAZ;AAEAxE,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACiB,GAAR,CAAY,KAAK1B,KAAL,CAAWI,eAAvB,EAjDmD,CAoDnD;AACA;;AACA,UAAI2C,IAAI,GAAG,IAAX;AACAtC,MAAAA,OAAO,CAACiB,GAAR,CAAY,KAAK1B,KAAL,CAAWI,eAAX,CAA2BgF,QAA3B,EAAZ;AACA,WAAKpF,KAAL,CAAWI,eAAX,CAA2BgF,QAA3B,GAAsCjC,IAAtC,CAA2C,MAAOkC,CAAP,IAAa;AACpD5E,QAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ,EADoD,CAEpD;AACA;;AACA,YAAI4E,cAAc,GAAG,MAAMvC,IAAI,CAAC/C,KAAL,CAAWG,IAAX,CAAgBoF,GAAhB,CAAoBC,WAApB,EAA3B;;AACA,iBAAQnE,IAAR,CAAa,cAAYiE,cAAzB,EAAyC,CAAzC;;AACA7E,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAY4E,cAAxB;;AAEA,YAAG;AACC;AACA,gBAAMD,CAAC,CAACI,iBAAF,CAAoBrB,MAAM,CAACe,WAA3B,EAAwCf,MAAM,CAAC1F,YAA/C,EAA6DsE,OAA7D,EAAsEC,MAAtE,EAA8EoB,gBAA9E,EACFG,cADE,EACcC,UADd,EAC0BM,gBAD1B,EAC4C;AAAElB,YAAAA,IAAI,EAAEyB,cAAc,CAACI,QAAf,EAAR;AAAmCC,YAAAA,GAAG,EAAE;AAAxC,WAD5C,EAC8FxC,IAD9F,CACmG,UAASyC,CAAT,EAAY;AACjH;AAEA,qBAAQnE,OAAR,CAAgB,aAAhB,EAA8B,CAA9B;;AACAhB,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYkF,CAAZ;AACH,WAPK,CAAN;AAQH,SAVD,CAUC,OAAMjD,GAAN,EAAW;AACR,mBAAQhB,KAAR,CAAc,aAAd,EAA4B,CAA5B;;AACAlB,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAgCiC,GAA5C;AACH;AAGJ,OAxBD;AAyBH,KA1RmB;AAEnB,GAjB8B,CAmB/B;AACA;;;AAkEA;AACA;AACAkD,EAAAA,iBAAiB,GAAI;AACrB;AACIpF,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,QAAG,KAAKa,iBAAL,EAAH,EAA4B;AACxB;AACA;AACA;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KALD,MAKK;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AACJ,GAnG8B,CAqG/B;;;AAuMAoF,EAAAA,MAAM,GAAI;AAEN,QAAG,KAAH,EAAS;AACL,0BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAC,MAAT;AAAiBC,UAAAA,cAAc,EAAC;AAAhC,SAAZ;AAAA,+BACA;AAAM,UAAA,KAAK,EAAC,4CAAZ;AAAsB,UAAA,QAAQ,EAAE,KAAhC;AAAuC,UAAA,KAAK,EAAE;AAAEzG,YAAAA,KAAK,EAAE;AAAT,WAA9C;AAAgE,UAAA,SAAS,EAAE;AAACwG,YAAAA,OAAO,EAAC,MAAT;AAAiBC,YAAAA,cAAc,EAAC;AAAhC,WAA3E;AAAA,iCACI;AACI,YAAA,aAAa,EAAE;AACXC,cAAAA,QAAQ,EAAE;AADC,aADnB;AAII,YAAA,QAAQ,EAAE,KAAKpE,QAJnB;AAKI,YAAA,cAAc,EAAE,KAAKe,cALzB;AAMI,YAAA,KAAK,EAAE;AAACsD,cAAAA,MAAM,EAAC,MAAR;AAAgB3G,cAAAA,KAAK,EAAC,KAAtB;AAA6B4G,cAAAA,SAAS,EAAC;AAAvC,aANX;AAAA,oCAQI,cAAM,IAAN;AACI,cAAA,IAAI,EAAC,aADT;AAEI,cAAA,KAAK,EAAE,CACH;AACIxG,gBAAAA,QAAQ,EAAE,IADd;AAEIC,gBAAAA,OAAO,EAAE;AAFb,eADG,CAFX;AAAA,qCASI;AAAO,gBAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,oBARJ,eAoBI,cAAM,IAAN;AACI,cAAA,IAAI,EAAC,aADT;AAEI,cAAA,KAAK,EAAC,0BAFV;AAGI,cAAA,KAAK,EAAE,CACC;AACID,gBAAAA,QAAQ,EAAE,IADd;AAEIC,gBAAAA,OAAO,EAAE;AAFb,eADD,CAHX;AAAA,qCAUI,eAAO,QAAP;AAAgB,gBAAA,SAAS,MAAzB;AAA0B,gBAAA,SAAS,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,oBApBJ,eAiCI,cAAM,IAAN;AACI,cAAA,IAAI,EAAC,WADT;AAEI,cAAA,KAAK,EAAC,0BAFV;AAGI,cAAA,aAAa,EAAC,UAHlB;AAII,cAAA,iBAAiB,EAAE,KAAKW,QAJ5B;AAKI,cAAA,KAAK,EAAC,EALV;AAAA,qCAOI;AAAQ,gBAAA,IAAI,EAAC,MAAb;AACI,gBAAA,aAAa,EAAE,KAAKa,UADxB;AAEI,gBAAA,QAAQ,EAAC,SAFb;AAAA,uCAGI;AAAQ,kBAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,oBAjCJ,eA+CI,cAAM,IAAN;AACI,cAAA,IAAI,EAAC,cADT;AAEI,cAAA,KAAK,EAAC,0BAFV;AAGI,cAAA,KAAK,EAAE,CACC;AACI1B,gBAAAA,IAAI,EAAE,OADV;AAEIC,gBAAAA,QAAQ,EAAE,IAFd;AAGIC,gBAAAA,OAAO,EAAE;AAHb,eADD,CAHX;AAAA,qCAWI;AAAU,gBAAA,WAAW,EAAC,oBAAtB;AAA4B,gBAAA,OAAO,EAAElB;AAArC;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,oBA/CJ,eA8DI,cAAM,IAAN;AACI,cAAA,IAAI,EAAC,YADT;AAEI,cAAA,KAAK,EAAC,0BAFV;AAGI,cAAA,KAAK,EAAE,CACC;AACIiB,gBAAAA,QAAQ,EAAE,IADd;AAEIC,gBAAAA,OAAO,EAAE;AAFb,eADD,CAHX;AAAA,qCAUA;AAEI,gBAAA,UAAU,EAAEN,cAFhB;AAGI,gBAAA,KAAK,EAAE;AACHC,kBAAAA,KAAK,EAAE;AADJ;AAHX;AAAA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA,oBA9DJ,eAiFI,cAAM,IAAN;AAAW,cAAA,IAAI,EAAC,iBAAhB;AAAkC,cAAA,KAAK,EAAC,0BAAxC;AAAA,iBAAmDC,WAAnD;AAAA,qCACI,QAAC,WAAD;AAAa,gBAAA,QAAQ,MAArB;AAAsB,gBAAA,MAAM,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAjFJ,eAqFI,cAAM,IAAN;AACI,cAAA,IAAI,EAAC,kBADT;AAEI,cAAA,KAAK,EAAC,0BAFV;AAGI,cAAA,KAAK,EAAE,CACC;AACIG,gBAAAA,QAAQ,EAAE,IADd;AAEIC,gBAAAA,OAAO,EAAE;AAFb,eADD,CAHX;AAAA,qCAUI;AAAQ,gBAAA,WAAW,EAAC,oBAApB;AAAA,wCACI,QAAC,MAAD;AAAQ,kBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,QAAC,MAAD;AAAQ,kBAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,oBArFJ,eAsGI,cAAM,IAAN;AAAW,cAAA,IAAI,EAAC,mBAAhB;AAAoC,cAAA,KAAK,EAAC,kDAA1C;AAAA,qCACI;AACI,gBAAA,KAAK,EAAE;AACH,qBAAG,GADA;AAEH,sBAAI,IAFD;AAGH,sBAAI,IAHD;AAIH,sBAAI,IAJD;AAKH,sBAAI,IALD;AAMH,uBAAK;AANF;AADX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAtGJ,eAoHI,cAAM,IAAN;AACI,cAAA,UAAU,EAAE;AACRwG,gBAAAA,MAAM,EAAE,EADA;AAERC,gBAAAA,IAAI,EAAE;AAFE,eADhB;AAAA,qCAMI;AAAQ,gBAAA,QAAQ,EAAG,KAAKrG,KAAL,CAAWI,eAAX,KAA+B,IAA/B,IAAuC,KAAKJ,KAAL,CAAWG,IAAX,KAAoB,IAA9E;AAAqF,gBAAA,IAAI,EAAC,SAA1F;AAAoG,gBAAA,QAAQ,EAAC,QAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,oBApHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADJ;AAqIH;;AACD,QAAG,IAAH,EAAQ;AACJ,0BACI;AACR,QAAA,UAAU,EAAC,UADH;AAER,QAAA,IAAI,EAAC,OAFG;AAGR,QAAA,UAAU,EAAE;AACVmG,UAAAA,QAAQ,EAAEC,IAAI,IAAI;AAChB9F,YAAAA,OAAO,CAACC,GAAR,CAAY6F,IAAZ;AACD,WAHS;AAIVC,UAAAA,QAAQ,EAAE;AAJA,SAHJ;AASR,QAAA,UAAU,EAAE,KAAKxG,KAAL,CAAWM,SATf;AAUR,QAAA,MAAM,eACJ;AAAA,gCACK,KAAKN,KAAL,CAAWM,SAAX,CAAqBmG,MAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXM;AAeR,QAAA,UAAU,EAAEC,IAAI,iBACd,cAAM,IAAN;AAEE,UAAA,OAAO,EAAE,cACP,QAAC,QAAD;AAAU,YAAA,IAAI,EAAErI,YAAhB;AAA8B,YAAA,IAAI,EAAEqI,IAAI,CAACC;AAAzC,aAAoD,sBAApD;AAAA;AAAA;AAAA;AAAA,kBADO,eAEP,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEvI,YAAhB;AAA8B,YAAA,IAAI,EAAEsI,IAAI,CAAC3B;AAAzC,aAA+D,sBAA/D;AAAA;AAAA;AAAA;AAAA,kBAFO,eAGP,QAAC,QAAD;AAAU,YAAA,IAAI,EAAE5G,eAAhB;AAAiC,YAAA,IAAI,EAAEuI,IAAI,CAACE;AAA5C,aAA6D,uBAA7D;AAAA;AAAA;AAAA;AAAA,kBAHO,CAFX;AAOE,UAAA,KAAK,eACH;AACE,YAAA,KAAK,EAAE,GADT;AAEE,YAAA,MAAM,EAAE,GAFV;AAGE,YAAA,GAAG,EAAC,0BAHN;AAIE,YAAA,GAAG,EAAEF,IAAI,CAACG;AAJZ;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA,kCAgBE,cAAM,IAAN,CAAW,IAAX;AACE;AACA,YAAA,KAAK,eAAE;AAAG,cAAA,IAAI,EAAEH,IAAI,CAACI,IAAd;AAAA,wBAAqBJ,IAAI,CAACK;AAA1B;AAAA;AAAA;AAAA;AAAA,oBAFT;AAGE,YAAA,WAAW,EAAEL,IAAI,CAACM;AAHpB;AAAA;AAAA;AAAA;AAAA,kBAhBF,EAqBIN,IAAI,CAACO,UAAL,CAAgBR,MAAhB,GAAyB,GAA1B,GAAiCC,IAAI,CAACO,UAAL,CAAgBC,KAAhB,CAAsB,CAAtB,EAAwB,GAAxB,IAA6B,QAA9D,GAA0ER,IAAI,CAACO,UArBlF;AAAA,WACOP,IAAI,CAACS,KADZ;AAAA;AAAA;AAAA;AAAA;AAhBM;AAAA;AAAA;AAAA;AAAA,cADJ;AA2CH;AAEJ;;AAne8B;;AAsenC,eAAetH,UAAfaA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport cookie from 'react-cookies';\nimport ipfsAPI from 'ipfs-api';\n// import EditDeviceModal from \"../../EditDeviceModal\";\nimport { message, Card} from 'antd';\nimport {\n    Form,\n    Input,\n    InputNumber,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    Upload,\n    AutoComplete,\n    DatePicker,\n    Slider,\n  } from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n// import './index.css';\nimport { List, Avatar, Space} from 'antd';\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\n\n\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\n\n//接入合约\nimport getWeb3 from \"../../../utils/getWeb3\";\nimport getEcommerceStore from \"../../../utils/getEcommerceStore\";\n\n//静态资源\nimport ProductClass from '../../../static/ProductClass';\n\n//ipfs配置文件\nimport ipfsAddAndCatConfig from '../../../config/ipfsAddAndCat';\n\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n\nconst IconText = ({ icon, text }) => (\n    <Space>\n      {React.createElement(icon)}\n      {text}\n    </Space>\n  );\n\n//ipfs实例\nconst ipfs = ipfsAPI({ host: ipfsAddAndCatConfig.host, port: ipfsAddAndCatConfig.port, protocol: ipfsAddAndCatConfig.protocol });\n\n\nconst suffixSelector = (\n    <Form.Item name=\"PriceUnit\" noStyle>\n      <Select\n        style={{\n          width: 70,\n        }}\n      >\n        <Option selected=\"selected\" value=\"ETH\">ETH</Option>\n        <Option value=\"wei\">wei</Option>\n      </Select>\n    </Form.Item>\n);\n\n  const rangeConfig = {\n    rules: [\n      {\n        type: 'array',\n        required: true,\n        message: '请选择时间',\n      },\n    ],\n  };\n\n\n\n\n//向区块链写入商品信息\nclass AuctionOut extends Component {\n\n    state = {\n        \n      }\n\n    state = {\n        username:cookie.load('username'),\n        web3 : null,\n        truffleContract : null,\n        //读取上传的图片\n        picReader : null,\n        dataArray : []\n    }\n\n    constructor (props) {\n        super(props);\n    }\n\n    //当文件选择变化时\n    //getValueFromEvent调用它\n    normFile = (e) => {\n        console.log(\"上传图片的 getValueFromEvent 调用\");\n        console.log(e);\n        let reader = null;\n        //如果列表里至少有一张图片的话\n        if(e.fileList[0] !== undefined){\n            //这里只拿了第一张图片，用下标索引可以拿到更多张\n            const file = e.fileList[0].originFileObj;\n            reader = new window.FileReader();\n            reader.readAsArrayBuffer(file);\n            console.log(\"图片读取为 : \");\n            console.log(reader);\n        }else{\n            //清空，防止上传已经取消的\n            reader = null;\n            console.log(\"图片列表为空\");\n        } \n        //在方法的最外层使用 this.setState 更新值，不然组件会一直处于uploading状态\n        this.setState({\n            picReader: reader\n        });\n        console.log(\"this.state.picReader : \");\n        console.log(this.state.picReader);\n    }\n\n\n    //customRequest调用它\n    uploadFile = (e) => {\n        message.info(\"正在上传图片\", 2);\n        console.log(\"上传图片的 customRequest 调用\");\n        console.log(e);\n        //判断是否上传完成\n        if(this.state.picReader !== null){\n            //告诉组件成功了，不要一直 uploading\n            e.onSuccess(200,this.state.picReader);\n        }\n      }\n\n    \n\n    getBlockChainInfo = async() => {\n        try{\n            const web3 = await getWeb3();\n            const EcommerceStore = await getEcommerceStore(web3);\n            this.setState({\n                web3: web3,\n                truffleContract:EcommerceStore\n            });\n            message.success(\"接入智能合约成功\", 2);\n            console.log(\"AuctionOut 的 web3 : \");\n            console.dir(web3);\n            console.log(\"AuctionOut 的 EcommerceStore : \");\n            console.dir(this.state.truffleContract);\n            return true;\n        }catch (error) {\n            // Catch any errors for any of the above operations.\n            alert(\n              `[ERROR]接入智能合约失败.`,\n            );\n            console.error(error);\n            return false;\n          }\n        \n    }\n\n    //componentWillMount在render之前运行\n    //componentDidMount 在render之后运行\n    componentDidMount () {\n    // componentWillMount () {\n        console.log(\"生成AuctionOut模块\");\n        if(this.getBlockChainInfo()){\n            //注意，这里打印 this.state.truffleContract 为 null，因为异步执行\n            // console.log(\"成功获得合约信息, this.state.truffleContract : \");\n            // console.dir(this.state.truffleContract);\n            console.log(\"获得合约信息成功\");\n        }else{\n            console.log(\"获得合约信息失败\");\n        }\n    }\n\n    //点击提交按钮，表单可以提交时\n    onFinish = (values) => {\n        //传过来的数据为\n        //values 已经是json格式了\n        //ProductName (String)\n        //ProductDesc (String)\n        //this.state.picReader \n        //ProductRevealTime (int)\n        //ProductCondition (String)\n        //BeginAndEndTime (长度为2的Moment数组)\n        //ProductClass (字符串数组)\n        //StartPrice (int)\n        //PriceUnit (String)\n\n        //UploadPic用不到，从字典中删掉\n        //优化传参大小\n        delete values.UploadPic;\n        //把开始时间和结束时间拆分开，BeginAndEndTime 拆为 AuctionStartTime 和 AuctionEndTime\n        let AuctionStartTime = values.BeginAndEndTime[0]; \n        let AuctionEndTime = values.BeginAndEndTime[1]; \n        values.AuctionStartTime = AuctionStartTime;\n        values.AuctionEndTime = AuctionEndTime;\n        delete values.BeginAndEndTime;\n\n        \n        // console.log('onFinish 的 values : ', values);\n\n        let decodedParams = {};\n        Object.keys(values).forEach(key => {\n            decodedParams[key] = decodeURIComponent(decodeURI(values[key]));\n        });\n        // console.log('onFinish 的 values 解析为 decodedParams : ', decodedParams);\n\n        //decodedParams 进一步格式化\n        //参数全都变成String\n\n        message.info(\"正在提交拍卖商品数据\",2);\n        try{\n            this.saveProduct(this.state.picReader, decodedParams);\n        }catch(err){\n            // message.error(\"向链上提交商品数据出错\",2);\n            return;\n        }\n        // message.success(\"向链上提交商品数据成功\",2);\n\n    }\n\n\n    //点击提交按钮，表单不能提交时\n    onFinishFailed = (errorInfo) => {\n        message.warning(\"请正确填写商品信息\",2);\n    }\n\n\n    //向区块链保存商品入口函数\n    saveProduct = (reader, decodedParams) => {\n        //注意这里的各个函数里的this，已经不再是最外层的this，如果在内层用this，就调用不到外层的函数\n        //想办法用that将外层的this传进去\n        let that = this;\n        let imageId, descId;\n        this.saveImageOnIpfs(reader).then(function(id) {\n            imageId = id;\n            that.saveTextBlobOnIpfs(decodedParams[\"ProductDesc\"]).then(function(id) {\n                descId = id;\n                //ProductDesc用不到，从字典中删掉\n                //优化传参大小\n                delete decodedParams.ProductDesc;\n                //只传过去要上区块链的\n                that.saveProductToBlockchain(decodedParams, imageId, descId);\n            });\n        });\n    }\n    \n    //图片上传ipfs并获取hash\n    saveImageOnIpfs = (reader) => {\n        return new Promise((resolve, reject) => {\n            //有图片传过来\n            if(reader){\n                let buffer = Buffer.from(reader.result);\n                    ipfs.add(buffer).then(res => {\n                    console.log(\"ImgRes: \", res);\n                    message.success(\"图片保存成功\",2);\n                    resolve(res[0].hash);\n                }).catch(err => {\n                    console.error(err);\n                    message.error(\"图片保存失败\",2);\n                    reject(err);\n                });\n            //没传图片\n            } else{\n                message.info(\"未上传商品图片\");\n                resolve(\"\");\n            }\n            \n            \n        });\n    }\n    \n    //简介上传ipfs并获取hash\n    saveTextBlobOnIpfs = (blob) => {\n        return new Promise((resolve, reject) => {\n            let buffer = Buffer.from(blob, 'utf-8');\n            ipfs.add(buffer).then(res => {\n                console.log(\"TextRes: \", res);\n                message.success(\"简介文字保存成功\",2);\n                resolve(res[0].hash);\n            }).catch(err => {\n                console.error(err);\n                message.error(\"简介文字保存失败\",2);\n                reject(err);\n            });\n        });\n    }\n\n    //调用区块链方法\n    saveProductToBlockchain = (params, imageId, descId) => {\n        // console.log(\"params in save product: \", params);\n\n        if(this.state.truffleContract === null || this.state.web3 === null){\n            message.error(\"连接合约失败\",2);\n            console.log(\"[ERROR]web3 或者 truffleContract 为 null\");\n            return;\n        }\n\n        //处理时间\n        let auctionStartTime = Date.parse(params[\"AuctionStartTime\"]) / 1000;\n        let auctionEndTime = Date.parse(params[\"AuctionEndTime\"]) / 1000;\n        //处理价格，把单位转为 wei\n        let startPrice = -1;\n        if(params.PriceUnit === \"ETH\"){\n            startPrice = this.state.web3.utils.toWei(params.StartPrice, 'ether');\n        }else if(params.PriceUnit === \"wei\"){\n            startPrice = parseInt(params.StartPrice);\n        }\n        //处理新旧状态，从String变成int\n        let productCondition = parseInt(params.ProductCondition);\n        //处理揭示报价时间，从String变成int\n        let productRevealTime = parseInt(params.ProductRevealTime);\n\n        //传来的数据已格式化为\n        //params.ProductName (String)\n        //descId (String)\n        //imageId (String)\n        //auctionStartTime (int)\n        //auctionEndTime (int)\n        //productCondition (int)\n        //params.ProductClass (String)\n        //startPrice (int)\n        //productRevealTime (int)\n\n        //这是先暂时不传入productRevealTime\n\n        console.log(\"最终上传区块链的数据为 : \");\n        console.log(params.ProductName);\n        console.log(descId);\n        console.log(imageId);\n        console.log(params.ProductClass);\n        console.log(startPrice);\n        console.log(auctionStartTime);\n        console.log(auctionEndTime);\n        console.log(productCondition);\n        console.log(productRevealTime);\n\n        console.log(\"合约为 : \");\n        console.dir(this.state.truffleContract);\n        \n    \n        //注意回调函数中的this，和外界的this不同，如果向使用外界的this，要赋值成that传过去\n        //注意要使用async，确保先拿到地址，用await关键字确保运行的先后顺序，再用这个地址调用合约方法\n        let that = this;\n        console.dir(this.state.truffleContract.deployed());\n        this.state.truffleContract.deployed().then(async (i) => {\n            console.log(\"进入 this.state.truffleContract.deployed() 的回调函数\");\n            //测试时要在MetaMask中选中ganache提供的10个地址之一，from自己创建的地址会失败\n            //即时获取当前地址，用该地址发交易\n            let currentAccount = await that.state.web3.eth.getAccounts();\n            message.info(\"交易发起地址为: \"+currentAccount, 2);\n            console.log(\"交易发起地址为: \"+currentAccount);\n\n            try{\n                //合约中实现事件event NewProduct监听\n                await i.addProductToStore(params.ProductName, params.ProductClass, imageId, descId, auctionStartTime,\n                    auctionEndTime, startPrice, productCondition, { from: currentAccount.toString(), gas: 440000 }).then(function(f) {\n                    //注意这里调用合约方法使用的地址，必须是字符串形式，要用 toString() 转化为字符串\n\n                    message.success(\"向链上提交商品数据成功\",2);\n                    console.log(\"成功调用合约的addProductToStore方法\");\n                    console.log(f);\n                });  \n            }catch(err) {\n                message.error(\"向链上提交商品数据失败\",2);\n                console.log(\"调用合约的addProductToStore方法失败 \" + err);\n            }\n\n            \n        });\n    }\n\n    \n    render () {\n\n        if(false){\n            return (\n                <div style={{display:'flex', justifyContent:'center'}}>\n                <Card title=\"上架待拍卖商品\" bordered={false} style={{ width: '80%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n                    <Form\n                        initialValues={{\n                            remember: true,\n                        }}\n                        onFinish={this.onFinish}\n                        onFinishFailed={this.onFinishFailed}\n                        style={{margin:\"auto\", width:\"60%\", marginTop:\"15px\"}}\n                    >\n                        <Form.Item\n                            name=\"ProductName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: '请输入商品名称',\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"商品名称\"/>\n                        </Form.Item>\n    \n                        <Form.Item\n                            name=\"ProductDesc\"\n                            label=\"商品介绍\"\n                            rules={[\n                                    {\n                                        required: true,\n                                        message: '请输入商品介绍',\n                                    },\n                            ]}\n                        >\n                            <Input.TextArea showCount maxLength={500} />\n                        </Form.Item>\n    \n                        <Form.Item\n                            name=\"UploadPic\"\n                            label=\"上传图片\"\n                            valuePropName=\"fileList\"\n                            getValueFromEvent={this.normFile}\n                            extra=\"\"\n                        >\n                            <Upload name=\"logo\" \n                                customRequest={this.uploadFile} \n                                listType=\"picture\">\n                                <Button icon={<UploadOutlined />}>点击上传</Button>\n                            </Upload>\n                        </Form.Item>\n                        \n                        <Form.Item\n                            name=\"ProductClass\"\n                            label=\"商品种类\"\n                            rules={[\n                                    {\n                                        type: 'array',\n                                        required: true,\n                                        message: '请选择商品种类',\n                                    },\n                                ]}\n                        >\n                            <Cascader placeholder=\"请选择\" options={ProductClass} />\n                        </Form.Item>\n    \n    \n                        <Form.Item\n                            name=\"StartPrice\"\n                            label=\"起拍价格\"\n                            rules={[\n                                    {\n                                        required: true,\n                                        message: '请输入起拍价格',\n                                    },\n                                ]}\n                        >\n                        <InputNumber\n                        \n                            addonAfter={suffixSelector}\n                            style={{\n                                width: '100%',\n                            }}\n                        />\n                        </Form.Item>\n    \n                        <Form.Item name=\"BeginAndEndTime\" label=\"起止时间\" {...rangeConfig}>\n                            <RangePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n                        </Form.Item>\n    \n                        <Form.Item\n                            name=\"ProductCondition\"\n                            label=\"产品状况\"\n                            rules={[\n                                    {\n                                        required: true,\n                                        message: '请选择状况',\n                                    },\n                            ]}\n                        >\n                            <Select placeholder=\"请选择\">\n                                <Option value=\"0\">全新</Option>\n                                <Option value=\"1\">二手</Option>\n                            </Select>\n                        </Form.Item>\n    \n    \n                        <Form.Item name=\"ProductRevealTime\" label=\"揭示报价持续时间\">\n                            <Slider\n                                marks={{\n                                    0: '0',\n                                    20: '20',\n                                    40: '40',\n                                    60: '60',\n                                    80: '80',\n                                    100: '100 分钟',\n                                }}\n                            />\n                        </Form.Item>\n                    \n    \n                        <Form.Item\n                            wrapperCol={{\n                                offset: 10,\n                                span: 16,\n                            }}\n                        >\n                            <Button disabled={ this.state.truffleContract === null || this.state.web3 === null } type=\"primary\" htmlType=\"submit\">\n                                发布商品\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n            );\n        }\n        if(true){\n            return (\n                <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        pagination={{\n          onChange: page => {\n            console.log(page);\n          },\n          pageSize: 5,\n        }}\n        dataSource={this.state.dataArray}\n        footer={\n          <div>\n            共 {this.state.dataArray.length} 个\n          </div>\n        }\n        renderItem={item => (\n          <List.Item\n            key={item.index}\n            actions={[\n              <IconText icon={StarOutlined} text={item.price} key=\"list-vertical-star-o\" />,\n              <IconText icon={LikeOutlined} text={item.productCondition} key=\"list-vertical-like-o\" />,\n              <IconText icon={MessageOutlined} text={item.processTime} key=\"list-vertical-message\" />,\n            ]}\n            extra={\n              <img\n                width={130}\n                height={130}\n                alt=\"商品图片\"\n                src={item.imageUrl}\n              />\n            }\n          >\n            <List.Item.Meta\n              // avatar={<Avatar src={item.avatar} />}\n              title={<a href={item.href}>{item.name}</a>}\n              description={item.category}\n            />\n            {(item.descString.length > 150) ? item.descString.slice(0,150)+\"......\"  : item.descString}\n          </List.Item>\n        )}\n        />\n            );\n        }\n        \n    }\n}\n\nexport default AuctionOut;\n\n\n\n\n\n// class EditDevice extends Component {\n\n//     state = {deviceID:\"\", deviceInfo:{}, deviceMessage:[], deviceName:\"\", path:[], isLoading:true}\n\n//     deviceColumns = [\n//         {\n//             title: '设备ID',\n//             dataIndex: 'deviceID',\n//             key: 'deviceID',\n//         },\n//         {\n//             title: '设备名称',\n//             dataIndex: 'deviceName',\n//             key: 'deviceName',\n//         },\n//         {\n//             title: '拥有者ID',\n//             dataIndex: 'ownerName',\n//             key: 'ownerName',\n//         },\n//         {\n//             title: '设备状态',\n//             key: 'deviceStatus',\n//             dataIndex: 'deviceStatus',\n//             render: tag => <Tag color={tag === 0 ? 'red' : 'green'} key={tag}>{tag === 0 ? '离线' : '在线'}</Tag>\n//         },\n//         // {\n//         //     title: '操作',\n//         //     key: 'edit',\n//         //     render: (text, record) => <EditDeviceModal deviceID={this.state.deviceID} deviceName={this.state.deviceName} deleteDevice={this.deleteDevice}\n//         //                                 path={this.state.path}/>,\n//         // }\n//     ];\n\n//     static getDerivedStateFromProps(props, state) {\n//         if (props.location.state.deviceID !== \"\") {\n//             return {\n//                 deviceID: props.location.state.deviceID\n//             }\n//         }\n//         return null\n//     }\n\n//     setMessage = message => {\n//         this.setState({deviceMessage:message})\n//     }\n\n//     componentDidMount () {\n//         setTimeout(() => this.setState({...this.state}), 500);\n//         const deviceID = this.state.deviceID;\n//         let path = [];\n//         axios.post('/getDeviceInfo', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             const message = data.deviceMessage;\n//             if(data.status === 'failed'){\n//                 message.warning(\"获取设备信息失败\")\n//             }\n//             else if(data.status === 'notExist'){\n//                 message.warning('设备不存在')\n//             }\n//             else{\n//                 const messageArray = message.map((item, index) => {\n//                     const obj = JSON.parse(item.content);\n//                     let infoItem =  {\n//                         key: item.messageID,\n//                         messageID: item.messageID,\n//                         messageType: obj.alert,\n//                         messageContent: obj.info,\n//                         location:\"无\",\n//                         lat:obj.lat,\n//                         lng:obj.lng\n//                     }\n//                     if(obj.lat !== undefined && obj.lng !== undefined) {\n//                         path = [...path, [{lng:obj.lng, lat:obj.lat}, obj.alert]];\n//                         axios.get(`https://restapi.amap.com/v3/geocode/regeo?\" +\n//                                     \"output=xml&location=${infoItem.lng},${infoItem.lat}&key=167046dfd610b3eea087876e05ee0181&radius=1000&extensions=base`)\n//                             .then(response => {\n//                                 const data = response.data;\n//                                 infoItem.location = data.regeocode.addressComponent.city;\n//                             });\n//                     }\n//                     return infoItem;\n//                 });\n//                 setTimeout(() => {\n//                     this.setState({deviceInfo:data.deviceInfo, deviceMessage:[...messageArray], deviceName: data.deviceInfo.deviceName, path:path, isLoading:false});\n//                 }, 1000);\n//             }\n//         })\n\n//     }\n\n//     deleteDevice = () => {\n//         const deviceID = this.state.deviceID;\n//         console.log(deviceID)\n//         axios.post('/deleteDevice', {\n//             deviceID:deviceID\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === 'success') {\n//                 cookie.save('deleteSuccess', true, {path: '/'});\n//                 window.location.href='/index/personalInfo';\n//             }\n//             else{\n//                 message.warning('删除失败');\n//             }\n//         })\n//     }\n\n//     updateDevice = deviceName => {\n//        this.setState({deviceName}) ;\n//     }\n\n//     render () {\n//         const { deviceID, isOnline, ownerName} = this.state.deviceInfo;\n//         const {deviceName, isLoading} = this.state;\n//         const info = [{key:1, deviceName, deviceID, deviceStatus:isOnline, ownerName}];\n//         const messageArray = this.state.deviceMessage;\n//         return (\n//             <div>\n//                 <Descriptions\n//                     title=\"设备信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                 />\n//                 {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={this.deviceColumns} dataSource={info} pagination={false}/>\n//                 }\n\n//                 <Descriptions\n//                     title=\"消息信息\"\n//                     bordered\n//                     column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n//                     style={{marginTop:'50px'}}\n//                 />\n//                 {/* {\n//                     isLoading ? <Spin style={{marginTop:'20px'}}/> : <Table columns={messageColumns} dataSource={messageArray}/>\n//                 } */}\n\n//             </div>\n//         );\n//     }\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, {Component} from 'react';\n// import {Form, Input, Button, message, Card} from 'antd';\n// import axios from \"axios\";\n// import cookie from \"react-cookies\";\n\n// class AuctionOut extends Component {\n//     onFinish = (values) => {\n//         console.log('Success:', values);\n//         axios.post('/createDevice', {\n//             deviceID:values.deviceID,\n//             deviceName:values.deviceName,\n//             ownerName:cookie.load('username')\n//         }).then(response => {\n//             const data = response.data;\n//             if(data.status === \"success\"){\n//                 message.success(\"设备创建成功\", 2);\n//                 let deviceArray = cookie.load('deviceArray');\n//                 cookie.remove('deviceArray', {path:'/'});\n//                 deviceArray = [...deviceArray, values.deviceID];\n//                 cookie.save('deviceArray', deviceArray, {path:'/'});\n\n//             }\n//             else if(data.status === \"duplicated\"){\n//                 message.warning(\"该设备已被绑定\", 2)\n//             }\n//             else{\n//                 message.warning(\"创建设备失败\", 2)\n//             }\n//         })\n//     }\n//     onFinishFailed = (errorInfo) => {\n//         message.warning(\"请正确填写表单！\",2)\n//     }\n//     render () {\n//         return (\n\n//         <div style={{display:'flex', justifyContent:'center'}}>\n//             <Card title=\"创建设备\" bordered={false} style={{ width: '60%' }} headStyle={{display:'flex', justifyContent:'center'}}>\n//                 <Form\n//                     initialValues={{\n//                         remember: true,\n//                     }}\n//                     onFinish={this.onFinish}\n//                     onFinishFailed={this.onFinishFailed}\n//                     style={{margin:\"auto\", width:\"40%\", marginTop:\"15px\"}}\n//                 >\n//                     <Form.Item\n//                         name=\"deviceID\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备ID!',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备ID\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         name=\"deviceName\"\n//                         rules={[\n//                             {\n//                                 required: true,\n//                                 message: '请输入设备名称！',\n//                             },\n//                         ]}\n//                     >\n//                         <Input placeholder=\"设备名称\"/>\n//                     </Form.Item>\n\n//                     <Form.Item\n//                         wrapperCol={{\n//                             offset: 10,\n//                             span: 16,\n//                         }}\n//                     >\n//                         <Button type=\"primary\" htmlType=\"submit\">\n//                             创建设备\n//                         </Button>\n//                     </Form.Item>\n//                 </Form>\n//             </Card>\n//         </div>\n//         );\n//     }\n// }\n\n// export default AuctionOut;"]},"metadata":{},"sourceType":"module"}