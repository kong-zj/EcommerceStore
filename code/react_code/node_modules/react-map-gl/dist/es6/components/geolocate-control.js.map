{"version":3,"sources":["../../../src/components/geolocate-control.js"],"names":["React","useRef","useEffect","useState","useCallback","useMemo","PropTypes","document","mapboxgl","MapState","LINEAR_TRANSITION_PROPS","isGeolocationSupported","useMapControl","mapControlDefaultProps","mapControlPropTypes","noop","propTypes","Object","assign","className","string","style","object","label","disabledLabel","auto","bool","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","showAccuracyCircle","onViewStateChange","func","onViewportChange","onGeolocate","defaultProps","enableHighAccuracy","timeout","maxZoom","getBounds","position","center","LngLat","coords","longitude","latitude","radius","accuracy","bounds","toBounds","_ne","lng","lat","_sw","setupMapboxGeolocateControl","context","props","geolocateButton","control","GeolocateControl","_container","createElement","_map","on","_getUIString","_setupUI","map","_geolocateButton","eventManager","options","_watchState","classList","add","remove","updateCamera","zoom","viewport","fitBounds","newViewState","mapState","viewState","getViewportProps","thisRef","containerRef","geolocateButtonRef","mapboxGeolocateControl","createMapboxGeolocateControl","supportsGeolocation","setSupportsGeolocation","then","result","current","_updateCamera","_clearWatch","triggerGeolocate","trigger","_onZoom","memo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {useRef, useEffect, useState, useCallback, useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport {document} from '../utils/globals';\nimport mapboxgl from '../utils/mapboxgl';\n\nimport MapState from '../utils/map-state';\nimport {LINEAR_TRANSITION_PROPS} from '../utils/map-controller';\nimport {isGeolocationSupported} from '../utils/geolocate-utils';\n\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst noop = () => {};\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  // Custom className\n  className: PropTypes.string,\n  style: PropTypes.object,\n  // Custom label assigned to the control\n  label: PropTypes.string,\n  disabledLabel: PropTypes.string,\n  // Auto trigger instead of waiting for click\n  auto: PropTypes.bool,\n\n  // mapbox geolocate options\n  // https://docs.mapbox.com/mapbox-gl-js/api/#geolocatecontrol\n  positionOptions: PropTypes.object,\n  fitBoundsOptions: PropTypes.object,\n  trackUserLocation: PropTypes.bool,\n  showUserLocation: PropTypes.bool,\n  showAccuracyCircle: PropTypes.bool,\n\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n\n  onGeolocate: PropTypes.func\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  label: 'Find My Location',\n  disabledLabel: 'Location Not Available',\n  auto: false,\n\n  // mapbox geolocate options\n  positionOptions: {enableHighAccuracy: false, timeout: 6000},\n  fitBoundsOptions: {maxZoom: 15},\n  trackUserLocation: false,\n  showUserLocation: true,\n  showAccuracyCircle: true,\n\n  onGeolocate: () => {}\n});\n\nfunction getBounds(position) {\n  const center = new mapboxgl.LngLat(position.coords.longitude, position.coords.latitude);\n  const radius = position.coords.accuracy;\n  const bounds = center.toBounds(radius);\n\n  return [\n    [bounds._ne.lng, bounds._ne.lat],\n    [bounds._sw.lng, bounds._sw.lat]\n  ];\n}\n\nfunction setupMapboxGeolocateControl(context, props, geolocateButton) {\n  const control = new mapboxgl.GeolocateControl(props);\n\n  // Dummy placeholders so that _setupUI does not crash\n  control._container = document.createElement('div');\n  control._map = {\n    on: () => {},\n    _getUIString: () => ''\n  };\n  control._setupUI(true);\n  control._map = context.map;\n\n  // replace mapbox internal UI elements with ours\n  control._geolocateButton = geolocateButton;\n\n  // From _setupUI\n  // when the camera is changed (and it's not as a result of the Geolocation Control) change\n  // the watch mode to background watch, so that the marker is updated but not the camera.\n  const {eventManager} = context;\n  if (control.options.trackUserLocation && eventManager) {\n    eventManager.on('panstart', () => {\n      if (control._watchState === 'ACTIVE_LOCK') {\n        control._watchState = 'BACKGROUND';\n        geolocateButton.classList.add('mapboxgl-ctrl-geolocate-background');\n        geolocateButton.classList.remove('mapboxgl-ctrl-geolocate-active');\n      }\n    });\n  }\n\n  control.on('geolocate', props.onGeolocate);\n  return control;\n}\n\nfunction updateCamera(position, {context, props}) {\n  const bounds = getBounds(position);\n  const {longitude, latitude, zoom} = context.viewport.fitBounds(bounds, props.fitBoundsOptions);\n\n  const newViewState = Object.assign({}, context.viewport, {\n    longitude,\n    latitude,\n    zoom\n  });\n  const mapState = new MapState(newViewState);\n  const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n  const onViewportChange = props.onViewportChange || context.onViewportChange || noop;\n  const onViewStateChange = props.onViewStateChange || context.onViewStateChange || noop;\n\n  // Call new style callback\n  onViewStateChange({viewState});\n\n  // Call old style callback\n  onViewportChange(viewState);\n}\n\nfunction GeolocateControl(props) {\n  const thisRef = useMapControl(props);\n  const {context, containerRef} = thisRef;\n  const geolocateButtonRef = useRef(null);\n  const [mapboxGeolocateControl, createMapboxGeolocateControl] = useState(null);\n  const [supportsGeolocation, setSupportsGeolocation] = useState(false);\n\n  useEffect(() => {\n    let control;\n\n    if (context.map) {\n      isGeolocationSupported().then(result => {\n        setSupportsGeolocation(result);\n\n        if (geolocateButtonRef.current) {\n          control = setupMapboxGeolocateControl(context, props, geolocateButtonRef.current);\n          // Overwrite Mapbox's GeolocateControl internal method\n          control._updateCamera = position => updateCamera(position, thisRef);\n          createMapboxGeolocateControl(control);\n        }\n      });\n    }\n\n    return () => {\n      if (control) {\n        control._clearWatch();\n      }\n    };\n  }, [context.map]);\n\n  const triggerGeolocate = useCallback(() => {\n    if (mapboxGeolocateControl) {\n      mapboxGeolocateControl.options = thisRef.props;\n      mapboxGeolocateControl.trigger();\n    }\n  }, [mapboxGeolocateControl]);\n\n  useEffect(() => {\n    if (props.auto) {\n      triggerGeolocate();\n    }\n  }, [mapboxGeolocateControl, props.auto]);\n\n  useEffect(() => {\n    if (mapboxGeolocateControl) {\n      mapboxGeolocateControl._onZoom();\n    }\n  }, [context.viewport.zoom]);\n\n  const {className, label, disabledLabel, trackUserLocation} = props;\n\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={className}>\n      <div key=\"geolocate-control\" className=\"mapboxgl-ctrl mapboxgl-ctrl-group\" ref={containerRef}>\n        <button\n          key=\"geolocate\"\n          className={`mapboxgl-ctrl-icon mapboxgl-ctrl-geolocate`}\n          ref={geolocateButtonRef}\n          disabled={!supportsGeolocation}\n          aria-pressed={!trackUserLocation}\n          type=\"button\"\n          title={supportsGeolocation ? label : disabledLabel}\n          aria-label={supportsGeolocation ? label : disabledLabel}\n          onClick={triggerGeolocate}\n        >\n          <span className=\"mapboxgl-ctrl-icon\" aria-hidden=\"true\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nGeolocateControl.propTypes = propTypes;\nGeolocateControl.defaultProps = defaultProps;\n\nexport default React.memo(GeolocateControl);\n"],"file":"geolocate-control.js"}